<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Mysql高可用解决方案</title>
      <link href="/2024/06/25/Mysql%E9%AB%98%E5%8F%AF%E7%94%A8%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
      <url>/2024/06/25/Mysql%E9%AB%98%E5%8F%AF%E7%94%A8%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<h1 id="任务背景"><a href="#任务背景" class="headerlink" title="任务背景"></a>任务背景</h1><h2 id="一、真实案例"><a href="#一、真实案例" class="headerlink" title="一、真实案例"></a>一、真实案例</h2><p>公司现在需要做MySQL数据库迁移，之前数据库是一主两从，使用MHA做了高可用，跑在私有云平台，现在需要这三台数据库迁移到物理机上，而且云上的数据库正在跑，希望做到热迁移，即不影响业务的情况下，把现有数据库从私有云平台迁移到物理真机上。</p><h2 id="二、案例背后核心技术"><a href="#二、案例背后核心技术" class="headerlink" title="二、案例背后核心技术"></a>二、案例背后核心技术</h2><p>1、熟悉MHA高可用的原理和部署</p><p>2、掌握MySQL数据库的迁移</p><p>3、熟悉MySQL主从复制的模式和搭建（基于GTIDs）</p><h2 id="三、今日场景"><a href="#三、今日场景" class="headerlink" title="三、今日场景"></a>三、今日场景</h2><p>随着业务功能的逐步完善，现有MySQL数据库架构虽然可以保障数据的相对可靠性，但是不能够完全保障&#x3D;&#x3D;服务的可用性。&#x3D;&#x3D;当我们的主库挂掉后，mysql服务不能立马切换到从服务器。所以，需要在现有架构的基础上&#x3D;&#x3D;扩展和升级，&#x3D;&#x3D;进而在保障数据的可靠性的同时能够保障服务的可用性。</p><h1 id="任务要求"><a href="#任务要求" class="headerlink" title="任务要求"></a>任务要求</h1><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-57-50-MHA%E7%90%86%E8%A7%A3-05aac5.png" alt="MHA理解"></p><p>1、使用三台服务器搭建mysql的复制组</p><p>2、使用&#x3D;&#x3D;MHA&#x3D;&#x3D;管理复制组，当master挂掉后，会立马提升一台slave作为新的master</p><h1 id="任务拆解"><a href="#任务拆解" class="headerlink" title="任务拆解"></a>任务拆解</h1><ul><li><p><input checked="" disabled="" type="checkbox"> 搭建MySQL的复制组（M-S1-S1，并联架构）</p></li><li><p><input checked="" disabled="" type="checkbox"> 安装MHA相关软件来管理复制组</p></li></ul><h1 id="理论储备"><a href="#理论储备" class="headerlink" title="理论储备"></a>理论储备</h1><h2 id="一、MHA简介"><a href="#一、MHA简介" class="headerlink" title="一、MHA简介"></a>一、MHA简介</h2><p>MHA（Master High Availability）目前在MySQL高可用方面是一个相对成熟的解决方案，它由日本DeNA公司youshimaton（现就职于Facebook公司）开发，是一套优秀的作为MySQL高可用性环境下&#x3D;&#x3D;故障切换和主从提升&#x3D;&#x3D;的高可用软件。在MySQL故障切换过程中，MHA能做到在0~30秒之内自动完成数据库的故障切换操作，并且在进行故障切换的过程中，MHA能在&#x3D;&#x3D;较大程度&#x3D;&#x3D;上保证数据的一致性，以达到真正意义上的高可用。</p><h2 id="二、MHA工作原理"><a href="#二、MHA工作原理" class="headerlink" title="二、MHA工作原理"></a>二、MHA工作原理</h2><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-57-48-MHA-0135b5.png" alt="MHA"></p><ol><li>当master出现故障时，通过对比slave之间I&#x2F;O线程读取master上binlog的位置，选取最接近的slave做为最新的slave（latest slave）。 </li><li>其它slave通过与latest slave对比&#x3D;&#x3D;生成差异中继日志，并应用&#x3D;&#x3D;。</li><li>在latest slave上&#x3D;&#x3D;应用从master保存的binlog&#x3D;&#x3D;，同时将latest slave&#x3D;&#x3D;提升为master&#x3D;&#x3D;。</li><li>最后在其它slave上应用相应的差异中继日志并开始从新的master开始复制.</li></ol><h2 id="三、MHA组件"><a href="#三、MHA组件" class="headerlink" title="三、MHA组件"></a>三、MHA组件</h2><h3 id="1、MHA相关组件"><a href="#1、MHA相关组件" class="headerlink" title="1、MHA相关组件"></a>1、MHA相关组件</h3><ul><li><p><strong>MHA Manager</strong>(管理节点) </p><p>MHA Manager可以单独部署在一台独立的机器上管理多个&#x3D;&#x3D;master-slave集群&#x3D;&#x3D;，也可以部署在一台slave节点上。</p></li><li><p><strong>MHA Node</strong>（数据节点）</p><p>MHA Node运行在&#x3D;&#x3D;每台MySQL服务器&#x3D;&#x3D;上，MHA Manager会定时探测集群中的master节点，当master出现故障时，它可以自动将数据的slave提升为新的master，然后将所有其他的slave重新指向新的master。整个故障转移过程对应用程序完全透明。</p></li></ul><h3 id="2、MHA组件介绍"><a href="#2、MHA组件介绍" class="headerlink" title="2、MHA组件介绍"></a>2、MHA组件介绍</h3><ul><li>MHA Manager</li></ul><p> 运行一些工具，比如masterha_manager工具实现&#x3D;&#x3D;自动监控MySQL Master&#x3D;&#x3D;和实现&#x3D;&#x3D;master故障切换&#x3D;&#x3D;，其它工具手动实现master故障切换、在线mater转移、连接检查等等。一个Manager可以管理多 个master-slave集群</p><ul><li>MHA Node</li></ul><p> 部署在所有运行MySQL的服务器上，无论是master还是slave。主要有三个作用：</p><p>1）保存二进制日志</p><pre><code> 如果能够访问故障master，会拷贝master的二进制日志</code></pre><p> 2）应用差异中继日志</p><p>​从拥有最新数据的slave上生成差异中继日志，然后应用差异日志。</p><p> 3）清除中继日志</p><pre><code> 在不停止SQL线程的情况下删除中继日志</code></pre><h3 id="3、相关工具介绍"><a href="#3、相关工具介绍" class="headerlink" title="3、相关工具介绍"></a>3、相关工具介绍</h3><h4 id="㈠-Manager工具"><a href="#㈠-Manager工具" class="headerlink" title="㈠ Manager工具"></a>㈠ Manager工具</h4><table><thead><tr><th>工具</th><th>说明</th></tr></thead><tbody><tr><td>&#x3D;&#x3D;masterha_check_ssh&#x3D;&#x3D;</td><td>检查MHA的SSH配置</td></tr><tr><td>&#x3D;&#x3D;masterha_check_repl&#x3D;&#x3D;</td><td>检查MySQL复制</td></tr><tr><td>&#x3D;&#x3D;masterha_manager&#x3D;&#x3D;</td><td>启动MHA</td></tr><tr><td>&#x3D;&#x3D;masterha_check_status&#x3D;&#x3D;</td><td>检测当前MHA运行状态</td></tr><tr><td>masterha_master_monitor</td><td>监测master是否宕机</td></tr><tr><td>masterha_master_switch</td><td>控制故障转移(自动或手动)</td></tr><tr><td>masterha_conf_host</td><td>添加或删除配置的server信息</td></tr></tbody></table><h4 id="㈡-Node工具"><a href="#㈡-Node工具" class="headerlink" title="㈡ Node工具"></a>㈡ Node工具</h4><table><thead><tr><th>工具</th><th>说明</th></tr></thead><tbody><tr><td>save_binary_logs</td><td>保存和复制master的二进制日志</td></tr><tr><td>apply_diff_relay_logs</td><td>识别差异的中继日志事件并应用于其它slave</td></tr><tr><td>filter_mysqlbinlog</td><td>去除不必要的ROLLBACK事件(MHA已不再使用这个工具)</td></tr><tr><td>purge_relay_logs</td><td>清除中继日志(不会阻塞SQL线程)</td></tr></tbody></table><p><em>&#x3D;&#x3D;注意：Node这些工具通常由MHA Manager的脚本触发,无需人手操作&#x3D;&#x3D;。</em></p><h1 id="任务解决方案"><a href="#任务解决方案" class="headerlink" title="任务解决方案"></a>任务解决方案</h1><h2 id="一、MHA部署"><a href="#一、MHA部署" class="headerlink" title="一、MHA部署"></a>一、MHA部署</h2><h3 id="1、部署规划"><a href="#1、部署规划" class="headerlink" title="1、部署规划"></a>1、部署规划</h3><table><thead><tr><th>角色</th><th>IP</th><th>主机名</th><th>server-id</th><th>功能</th><th>备注</th></tr></thead><tbody><tr><td>MHA-Manager</td><td>10.1.1.40</td><td>mgr.heima.cc</td><td>—</td><td>管理节点</td><td></td></tr><tr><td>MHA-Node（Master）</td><td>10.1.1.10</td><td>master.heima.cc</td><td>10</td><td>数据节点</td><td>写</td></tr><tr><td>MHA-Node（Slave1）</td><td>10.1.1.20</td><td>slave1.heima.cc</td><td>20</td><td>数据节点</td><td>读</td></tr><tr><td>MHA-Node（Slave2）</td><td>10.1.1.30</td><td>slave2.heima.cc</td><td>30</td><td>数据节点</td><td>读</td></tr></tbody></table><h3 id="2、系统和软件版本"><a href="#2、系统和软件版本" class="headerlink" title="2、系统和软件版本"></a>2、系统和软件版本</h3><table><thead><tr><th>系统版本</th><th>MySQL版本</th><th>MHA版本</th></tr></thead><tbody><tr><td>CentOS  7.6</td><td>MySQL-5.7.25</td><td>mha4mysql-manager-0.57      mha4mysql-node-0.57</td></tr></tbody></table><h3 id="3、系统环境初始化"><a href="#3、系统环境初始化" class="headerlink" title="3、系统环境初始化"></a>3、系统环境初始化</h3><h4 id="㈠-修改主机名和hosts"><a href="#㈠-修改主机名和hosts" class="headerlink" title="㈠ 修改主机名和hosts"></a>㈠ 修改主机名和hosts</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hostnamectl set-hostname master.heima.cc</span></span><br><span class="line"><span class="comment"># hostnamectl set-hostname slave1.heima.cc</span></span><br><span class="line"><span class="comment"># hostnamectl set-hostname slave2.heima.cc</span></span><br><span class="line"><span class="comment"># hostnamectl set-hostname mgr.heima.cc</span></span><br><span class="line"><span class="comment"># cat /etc/hosts</span></span><br><span class="line"><span class="number">127.0</span>.<span class="number">0.1</span>   localhost localhost.localdomain localhost4 localhost4.localdomain4</span><br><span class="line">::<span class="number">1</span>         localhost localhost.localdomain localhost6 localhost6.localdomain6</span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.10</span>    master.heima.cc  master</span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.20</span>    slave1.heima.cc  slave1</span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.30</span>    slave2.heima.cc  slave2</span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.40</span>    mgr.heima.cc     mgr</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="㈡-关闭防火墙和selinux"><a href="#㈡-关闭防火墙和selinux" class="headerlink" title="㈡ 关闭防火墙和selinux"></a>㈡ 关闭防火墙和selinux</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl stop firewalld</span></span><br><span class="line"><span class="comment"># systemctl disable firewalld</span></span><br><span class="line"><span class="comment"># setenforce 0</span></span><br><span class="line"><span class="comment"># sed -i &#x27;/SELINUX=enforcing/cSELINUX=disabled&#x27; /etc/selinux/config</span></span><br></pre></td></tr></table></figure><h4 id="㈢-关闭NetworkManager服务"><a href="#㈢-关闭NetworkManager服务" class="headerlink" title="㈢ 关闭NetworkManager服务"></a>㈢ 关闭NetworkManager服务</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl stop NetworkManager</span></span><br><span class="line"><span class="comment"># systemctl disable NetworkManager</span></span><br></pre></td></tr></table></figure><h4 id="㈣-配置yum源"><a href="#㈣-配置yum源" class="headerlink" title="㈣ 配置yum源"></a>㈣ 配置yum源</h4><p><strong>说明：</strong>每台服务器都需要配置！</p><p><strong>方案一：</strong>分别配置 aliyun、epel 和本地源;</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -ivh /soft/mha/epel-release-latest-7.noarch.rpm</span></span><br><span class="line"><span class="comment"># cat server.repo </span></span><br><span class="line">[<span class="type">local</span>]</span><br><span class="line">name=local yum</span><br><span class="line">baseurl=file:///mnt</span><br><span class="line">enabled=<span class="number">1</span></span><br><span class="line">gpgcheck=<span class="number">0</span></span><br><span class="line">[<span class="type">aliyun</span>]</span><br><span class="line">name=this is aliyun yum</span><br><span class="line">baseurl=http://mirrors.aliyun.com/centos/<span class="number">7</span>/os/x86_64/</span><br><span class="line">enabled=<span class="number">1</span></span><br><span class="line">gpgcheck=<span class="number">0</span></span><br></pre></td></tr></table></figure><p><strong>方案二：</strong>配置自建仓库，提前准备好软件包</p><p>注意：如果没有网络可以使用本地仓库，提前下载好包</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat server.repo </span></span><br><span class="line">[<span class="type">local</span>]</span><br><span class="line">name=local yum</span><br><span class="line">baseurl=file:///mnt</span><br><span class="line">enabled=<span class="number">1</span></span><br><span class="line">gpgcheck=<span class="number">0</span></span><br><span class="line">[<span class="type">mha</span>]</span><br><span class="line">name=mha soft</span><br><span class="line">baseurl=file:///soft/mha/mha<span class="literal">-yum</span></span><br><span class="line">enabled=<span class="number">1</span></span><br><span class="line">gpgcheck=<span class="number">0</span></span><br><span class="line">说明：</span><br><span class="line"><span class="number">1</span>）每台服务器都需要配置该文件</span><br><span class="line"><span class="number">2</span>）每台服务器都需要/soft/mha/mha<span class="literal">-yum</span>目录来保存相应的软件包</span><br></pre></td></tr></table></figure><h4 id="㈤-安装依赖包"><a href="#㈤-安装依赖包" class="headerlink" title="㈤ 安装依赖包"></a>㈤ 安装依赖包</h4><p>注意：所有服务器均需要安装</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="literal">-y</span> install perl<span class="literal">-DBD-MySQL</span> \</span><br><span class="line">perl<span class="literal">-Config-Tiny</span> \</span><br><span class="line">perl<span class="literal">-Time-HiRes</span> \</span><br><span class="line">perl<span class="literal">-Mail-Sender</span> \</span><br><span class="line">perl<span class="literal">-Mail-Sendmail</span> \</span><br><span class="line">perl<span class="literal">-MIME-Base32</span> \</span><br><span class="line">perl<span class="literal">-MIME-Charset</span> \</span><br><span class="line">perl<span class="literal">-MIME-EncWords</span> \</span><br><span class="line">perl<span class="literal">-Params-Classify</span> \</span><br><span class="line">perl<span class="literal">-Params-Validate</span>.x86_64 \</span><br><span class="line">perl<span class="literal">-Log-Dispatch</span> \</span><br><span class="line">perl<span class="literal">-Parallel-ForkManager</span> \</span><br><span class="line">net<span class="literal">-tools</span></span><br></pre></td></tr></table></figure><h3 id="4、部署MySQL复制环境"><a href="#4、部署MySQL复制环境" class="headerlink" title="4、部署MySQL复制环境"></a>4、部署MySQL复制环境</h3><h4 id="㈠-MySQL部署规划"><a href="#㈠-MySQL部署规划" class="headerlink" title="㈠ MySQL部署规划"></a>㈠ MySQL部署规划</h4><table><thead><tr><th>安装目录</th><th>数据库目录</th><th>配置文件</th><th>套接字文件</th><th>端口</th></tr></thead><tbody><tr><td>&#x2F;usr&#x2F;local&#x2F;mysql</td><td>&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;data</td><td>&#x2F;etc&#x2F;my.cnf</td><td>&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;mysql.sock</td><td>3307</td></tr></tbody></table><h4 id="㈡-搭建主从复制"><a href="#㈡-搭建主从复制" class="headerlink" title="㈡ 搭建主从复制"></a>㈡ 搭建主从复制</h4><h5 id="①-创建配置文件"><a href="#①-创建配置文件" class="headerlink" title="①  创建配置文件"></a>①  创建配置文件</h5><ul><li>master</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">master</span> ~]<span class="comment"># cat /etc/my.cnf</span></span><br><span class="line">[<span class="type">mysqld</span>]</span><br><span class="line">basedir=/usr/local/mysql</span><br><span class="line">datadir=/usr/local/mysql/<span class="keyword">data</span></span><br><span class="line">socket=/usr/local/mysql/mysql.sock</span><br><span class="line">port=<span class="number">3307</span></span><br><span class="line">log<span class="literal">-error</span>=/usr/local/mysql/master.err</span><br><span class="line">log<span class="literal">-bin</span>=/usr/local/mysql/<span class="keyword">data</span>/binlog</span><br><span class="line">server<span class="literal">-id</span>=<span class="number">10</span></span><br><span class="line">character_set_server=utf8mb4</span><br><span class="line">gtid<span class="literal">-mode</span>=on</span><br><span class="line">log<span class="literal">-slave-updates</span>=<span class="number">1</span></span><br><span class="line">enforce<span class="literal">-gtid-consistency</span></span><br><span class="line">[<span class="type">client</span>]</span><br><span class="line">socket=/usr/local/mysql/mysql.sock</span><br></pre></td></tr></table></figure><ul><li>slave1</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">slave1</span> ~]<span class="comment"># cat /etc/my.cnf</span></span><br><span class="line">[<span class="type">mysqld</span>]</span><br><span class="line">basedir=/usr/local/mysql</span><br><span class="line">datadir=/usr/local/mysql/<span class="keyword">data</span></span><br><span class="line">socket=/usr/local/mysql/mysql.sock</span><br><span class="line">port=<span class="number">3307</span></span><br><span class="line">log<span class="literal">-error</span>=/usr/local/mysql/slave1.err</span><br><span class="line">relay<span class="literal">-log</span>=/usr/local/mysql/<span class="keyword">data</span>/relaylog</span><br><span class="line">log<span class="literal">-bin</span>=/usr/local/mysql/<span class="keyword">data</span>/binlog</span><br><span class="line">server<span class="literal">-id</span>=<span class="number">20</span></span><br><span class="line">character_set_server=utf8mb4</span><br><span class="line">log<span class="literal">-slave-updates</span>=<span class="number">1</span></span><br><span class="line">gtid<span class="literal">-mode</span>=on</span><br><span class="line">enforce<span class="literal">-gtid-consistency</span></span><br><span class="line"><span class="built_in">skip-slave</span><span class="literal">-start</span></span><br><span class="line">[<span class="type">client</span>]</span><br><span class="line">socket=/usr/local/mysql/mysql.sock</span><br></pre></td></tr></table></figure><ul><li>slave2</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">slave2</span> ~]<span class="comment"># cat /etc/my.cnf</span></span><br><span class="line">[<span class="type">mysqld</span>]</span><br><span class="line">basedir=/usr/local/mysql</span><br><span class="line">datadir=/usr/local/mysql/<span class="keyword">data</span></span><br><span class="line">socket=/usr/local/mysql/mysql.sock</span><br><span class="line">port=<span class="number">3307</span></span><br><span class="line">log<span class="literal">-error</span>=/usr/local/mysql/slave2.err</span><br><span class="line">relay<span class="literal">-log</span>=/usr/local/mysql/<span class="keyword">data</span>/relaylog</span><br><span class="line">log<span class="literal">-bin</span>=/usr/local/mysql/<span class="keyword">data</span>/binlog</span><br><span class="line">server<span class="literal">-id</span>=<span class="number">30</span></span><br><span class="line">character_set_server=utf8mb4</span><br><span class="line">log<span class="literal">-slave-updates</span>=<span class="number">1</span></span><br><span class="line">gtid<span class="literal">-mode</span>=on</span><br><span class="line">enforce<span class="literal">-gtid-consistency</span></span><br><span class="line"><span class="built_in">skip-slave</span><span class="literal">-start</span></span><br><span class="line">[<span class="type">client</span>]</span><br><span class="line">socket=/usr/local/mysql/mysql.sock</span><br></pre></td></tr></table></figure><h5 id="②-同步数据到从服务器"><a href="#②-同步数据到从服务器" class="headerlink" title="② 同步数据到从服务器"></a>② 同步数据到从服务器</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">master</span> ~]<span class="comment"># rsync -av /usr/local/mysql 10.1.1.20:/usr/local/</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">master</span> ~]<span class="comment"># rsync -av /usr/local/mysql 10.1.1.30:/usr/local/</span></span><br><span class="line">注意：</span><br><span class="line">保证两台slave服务器上有mysql用户</span><br></pre></td></tr></table></figure><h5 id="③-删除auto-cnf文件"><a href="#③-删除auto-cnf文件" class="headerlink" title="③ 删除auto.cnf文件"></a>③ 删除auto.cnf文件</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">master</span> <span class="type">data</span>]<span class="comment"># rm -f auto.cnf </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">slave1</span> <span class="type">data</span>]<span class="comment"># rm -f auto.cnf </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">slave2</span> <span class="type">data</span>]<span class="comment"># rm -f auto.cnf</span></span><br><span class="line">注意：三台服务器都删除</span><br></pre></td></tr></table></figure><h5 id="④-启动数据库"><a href="#④-启动数据库" class="headerlink" title="④ 启动数据库"></a>④ 启动数据库</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">master</span> ~]<span class="comment"># service mysql start</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">slave1</span> ~]<span class="comment"># service mysql start</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">slave2</span> ~]<span class="comment"># service mysql start</span></span><br></pre></td></tr></table></figure><h5 id="⑤-master创建复制用户"><a href="#⑤-master创建复制用户" class="headerlink" title="⑤ master创建复制用户"></a>⑤ master创建复制用户</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create user <span class="string">&#x27;slave&#x27;</span><span class="string">@&#x27;10.1.1.%&#x27; identified by &#x27;123&#x27;;</span></span><br><span class="line"><span class="string">Query OK, 0 rows affected (0.00 sec)</span></span><br><span class="line"><span class="string">mysql&gt; grant replication slave on *.* to &#x27;slave&#x27;@&#x27;10.1.1.%&#x27;;</span></span><br><span class="line"><span class="string">Query OK, 0 rows affected (0.00 sec)</span></span><br><span class="line"><span class="string">mysql&gt; flush privileges;</span></span><br><span class="line"><span class="string">Query OK, 0 rows affected (0.00 sec)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">说明：创建MHA的监控用户和密码，为后续做准备</span></span><br><span class="line"><span class="string">mysql&gt; create user &#x27;mha&#x27;@&#x27;10.1.1.40&#x27; identified by &#x27;123&#x27;;</span></span><br><span class="line"><span class="string">Query OK, 0 rows affected (0.01 sec)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">mysql&gt; grant all privileges on *.* to &#x27;mha&#x27;@&#x27;10.1.1.40&#x27;;</span></span><br><span class="line"><span class="string">Query OK, 0 rows affected (0.00 sec)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">mysql&gt; flush privileges;</span></span><br><span class="line"><span class="string">Query OK, 0 rows affected (0.00 sec)</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><h5 id="⑥-slave上配置同步信息"><a href="#⑥-slave上配置同步信息" class="headerlink" title="⑥ slave上配置同步信息"></a>⑥ slave上配置同步信息</h5><p>注意：两台slave都需要配置</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; change master to master_host=<span class="string">&#x27;10.1.1.10&#x27;</span>,master_port=<span class="number">3307</span>,master_user=<span class="string">&#x27;slave&#x27;</span>,master_password=<span class="string">&#x27;123&#x27;</span>,master_auto_position=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="built_in">start</span> slave;</span><br><span class="line">Query OK, <span class="number">0</span> rows affected (<span class="number">0.02</span> sec)</span><br></pre></td></tr></table></figure><h5 id="⑦-测试验证"><a href="#⑦-测试验证" class="headerlink" title="⑦ 测试验证"></a>⑦ 测试验证</h5><p>略</p><h3 id="5、MHA软件安装"><a href="#5、MHA软件安装" class="headerlink" title="5、MHA软件安装"></a>5、MHA软件安装</h3><h4 id="㈠-不同节点安装软件"><a href="#㈠-不同节点安装软件" class="headerlink" title="㈠ 不同节点安装软件"></a>㈠ 不同节点安装软件</h4><p>说明：在所有节点安装 &#x3D;&#x3D;mha-node&#x3D;&#x3D; 软件包，在 &#x3D;&#x3D;mha 管理&#x3D;&#x3D;端再安装 mha-manager 软件包</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">mgr</span> ~]<span class="comment"># yum –y install mha4mysql-node-0.57-0.el7.noarch.rpm</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">master</span> ~]<span class="comment"># yum –y install mha4mysql-node-0.57-0.el7.noarch.rpm</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">slave1</span> ~]<span class="comment"># yum -y install mha4mysql-node-0.57-0.el7.noarch.rpm</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">slave2</span> ~]<span class="comment"># yum –y install mha4mysql-node-0.57-0.el7.noarch.rpm</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">mgr</span> ~]<span class="comment"># yum –y install mha4mysql-manager-0.57-0.el7.noarch.rpm</span></span><br></pre></td></tr></table></figure><h4 id="㈡-配置ssh互信"><a href="#㈡-配置ssh互信" class="headerlink" title="㈡ 配置ssh互信"></a>㈡ 配置ssh互信</h4><p>说明：</p><ol><li>在生产环境中几乎都是禁止root远程登陆服务器的，所以ssh免密码登陆要在admin用户下进行配置，这是处于安全角度考虑出发。 </li><li>admin用户可以是任意普通用户</li><li>该普通用户用于mha的管理节点远程访问mysql复制组中的所有主机，完成一些其他工作</li></ol><h5 id="①-所有机器创建admin用户"><a href="#①-所有机器创建admin用户" class="headerlink" title="① 所有机器创建admin用户"></a>① 所有机器创建admin用户</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># useradd admin</span></span><br><span class="line"><span class="comment"># echo 123|passwd --stdin admin</span></span><br></pre></td></tr></table></figure><h5 id="②-配置mgr主机到其他主机的admin用户互信"><a href="#②-配置mgr主机到其他主机的admin用户互信" class="headerlink" title="② 配置mgr主机到其他主机的admin用户互信"></a>② 配置mgr主机到其他主机的admin用户互信</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mgr端：</span><br><span class="line">[<span class="type">root</span>@<span class="type">mgr</span> ~]<span class="comment"># su - admin</span></span><br><span class="line">[<span class="type">admin</span>@<span class="type">mgr</span> ~]<span class="variable">$</span> ssh<span class="literal">-keygen</span> <span class="literal">-P</span> <span class="string">&quot;&quot;</span> <span class="operator">-f</span> ~/.ssh/id_rsa</span><br><span class="line">[<span class="type">admin</span>@<span class="type">mgr</span> ~]<span class="variable">$</span> <span class="built_in">cd</span> .ssh/</span><br><span class="line">[<span class="type">admin</span>@<span class="type">mgr</span> <span class="type">.ssh</span>]<span class="variable">$</span> <span class="built_in">ls</span></span><br><span class="line">id_rsa  id_rsa.pub</span><br><span class="line">[<span class="type">admin</span>@<span class="type">mgr</span> <span class="type">.ssh</span>]<span class="variable">$</span> <span class="built_in">mv</span> id_rsa.pub authorized_keys</span><br><span class="line">[<span class="type">admin</span>@<span class="type">mgr</span> <span class="type">.ssh</span>]<span class="variable">$</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">10</span> <span class="number">20</span> <span class="number">30</span>;<span class="keyword">do</span> scp <span class="literal">-r</span> ../.ssh/ <span class="number">10.1</span>.<span class="number">1</span>.<span class="variable">$i:</span>~/;done</span><br><span class="line"></span><br><span class="line">测试免密登录：</span><br><span class="line">[<span class="type">admin</span>@<span class="type">mgr</span> <span class="type">.ssh</span>]<span class="variable">$</span> ssh <span class="number">10.1</span>.<span class="number">1.10</span></span><br><span class="line">[<span class="type">admin</span>@<span class="type">mgr</span> <span class="type">.ssh</span>]<span class="variable">$</span> ssh <span class="number">10.1</span>.<span class="number">1.20</span></span><br><span class="line">[<span class="type">admin</span>@<span class="type">mgr</span> <span class="type">.ssh</span>]<span class="variable">$</span> ssh <span class="number">10.1</span>.<span class="number">1.30</span></span><br></pre></td></tr></table></figure><h4 id="㈢-配置admin用户的sudo权限"><a href="#㈢-配置admin用户的sudo权限" class="headerlink" title="㈢ 配置admin用户的sudo权限"></a>㈢ 配置admin用户的sudo权限</h4><ul><li>配置admin用户执行sudo命令权限</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">master</span> ~]<span class="comment"># vim /etc/sudoers.d/admin</span></span><br><span class="line"><span class="comment">#User_Alias  表示具有sudo权限的用 户 列表; Host_Alias表示主机的列表</span></span><br><span class="line">User_Alias MYSQL_USERS = admin</span><br><span class="line"><span class="comment">#Runas_Alias  表示用户以什么身份登录</span></span><br><span class="line">Runas_Alias MYSQL_RUNAS = root</span><br><span class="line"><span class="comment">#Cmnd_Alias  表示允许执行命令的列表</span></span><br><span class="line">Cmnd_Alias MYSQL_CMNDS = /sbin/ifconfig,/sbin/arping</span><br><span class="line">MYSQL_USERS ALL = (MYSQL_RUNAS) NOPASSWD: MYSQL_CMNDS</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">master</span> ~]<span class="comment"># for i in 20 30;do scp /etc/sudoers.d/admin 10.1.1.$i:/etc/sudoers.d/;done</span></span><br></pre></td></tr></table></figure><ul><li>测试admin用户是否可以挂载VIP</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">admin</span>@<span class="type">master</span> ~]<span class="variable">$</span> sudo /sbin/ifconfig ens33:<span class="number">1</span> <span class="number">10.1</span>.<span class="number">1.100</span> broadcast <span class="number">10.1</span>.<span class="number">1.255</span> netmask <span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line">[<span class="type">admin</span>@<span class="type">master</span> ~]<span class="variable">$</span> sudo /sbin/arping <span class="literal">-fqc</span> <span class="number">5</span> <span class="literal">-w</span> <span class="number">5</span> <span class="literal">-I</span> ens33 <span class="literal">-s</span> <span class="number">10.1</span>.<span class="number">1.100</span> <span class="literal">-U</span> <span class="number">10.1</span>.<span class="number">1.10</span></span><br><span class="line">[<span class="type">admin</span>@<span class="type">master</span> ~]<span class="variable">$</span> ifconfig </span><br><span class="line"></span><br><span class="line">补充：</span><br><span class="line">arping：用来向局域网内的其它主机发送ARP请求的指令，可以用来测试局域网内的某个IP是否已被使用。</span><br><span class="line"></span><br><span class="line"><span class="operator">-f</span>：收到第一个响应包后退出。</span><br><span class="line"><span class="literal">-q</span>：quite模式，不显示输出。 </span><br><span class="line"><span class="literal">-c</span>：发送指定的count个ARP REQUEST包后停止。如果指定了<span class="literal">-w</span>参数，则会等待相同数量的ARP REPLY包，直到超时为止。</span><br><span class="line"><span class="literal">-w</span>：指定一个超时时间，单位为秒，arping在到达指定时间后退出，无论期间发送或接收了多少包。在这种情况下，arping在发送完指定的count（<span class="literal">-c</span>）个包后并不会停止，而是等待到超时或发送的count个包都进行了回应后才会退出。 </span><br><span class="line"><span class="literal">-I</span>：指定设备名，用来发送ARP REQUEST包的网络设备的名称。</span><br><span class="line"><span class="literal">-D</span>：重复地址探测模式，用来检测有没有IP地址冲突，如果没有IP冲突则返回<span class="number">0</span>。 </span><br><span class="line"><span class="literal">-s</span>：设置发送ARP包的IP资源地址</span><br><span class="line"><span class="literal">-U</span>：无理由的（强制的）ARP模式去更新别的主机上的ARP CACHE列表中的本机的信息，不需要响应。</span><br><span class="line"><span class="literal">-h</span>：显示帮助页。 </span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-57-39-001-c6cede.png" alt="001"></p><h4 id="㈣-创建mha相关配置文件"><a href="#㈣-创建mha相关配置文件" class="headerlink" title="㈣ 创建mha相关配置文件"></a>㈣ 创建mha相关配置文件</h4><ul><li>创建 mha 相关的工作目录</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">mgr</span> ~]<span class="comment"># mkdir /etc/mha/</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">mgr</span> ~]<span class="comment"># mkdir -p /data/mha/masterha/app1</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">mgr</span> ~]<span class="comment"># chown -R admin. /data/mha</span></span><br></pre></td></tr></table></figure><ul><li>创建mha局部配置文件</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">mgr</span> ~]<span class="comment"># cat /etc/mha/app1.conf</span></span><br><span class="line">[<span class="type">server</span> <span class="type">default</span>]</span><br><span class="line"><span class="comment"># 设置监控用户和密码</span></span><br><span class="line">user=mha</span><br><span class="line">password=<span class="number">123</span></span><br><span class="line"><span class="comment"># 设置复制环境中的复制用户和密码</span></span><br><span class="line">repl_user=slave</span><br><span class="line">repl_password=<span class="number">123</span></span><br><span class="line"><span class="comment"># 设置ssh的登录用户名</span></span><br><span class="line">ssh_user=admin</span><br><span class="line"><span class="comment"># 设置监控主库,发送ping包的时间间隔,默认是3秒,尝试三次没有回应的时候自动进行failover</span></span><br><span class="line">ping_interval=<span class="number">3</span></span><br><span class="line"><span class="comment"># 设置mgr的工作目录</span></span><br><span class="line">manager_workdir=/<span class="keyword">data</span>/mha/masterha/app1</span><br><span class="line"><span class="comment"># 设置mysql master保存binlog的目录,以便MHA可以找到master的二进制日志</span></span><br><span class="line">master_binlog_dir=/usr/local/mysql/<span class="keyword">data</span></span><br><span class="line"><span class="comment"># 设置master的pid文件</span></span><br><span class="line">master_pid_file=/usr/local/mysql/<span class="keyword">data</span>/master.heima.cc.pid</span><br><span class="line"><span class="comment"># 设置mysql master在发生切换时保存binlog的目录（在mysql master上创建这个目录）</span></span><br><span class="line">remote_workdir=/<span class="keyword">data</span>/mysql/mha</span><br><span class="line"><span class="comment"># 设置mgr日志文件</span></span><br><span class="line">manager_log=/<span class="keyword">data</span>/mha/masterha/app1/app1<span class="literal">-3307</span>.log</span><br><span class="line"><span class="comment"># MHA到master的监控之间出现问题,MHA Manager将会尝试从slave1和slave2登录到master上</span></span><br><span class="line">secondary_check_script=/usr/bin/masterha_secondary_check <span class="literal">-s</span> <span class="number">10.1</span>.<span class="number">1.20</span> <span class="literal">-s</span> <span class="number">10.1</span>.<span class="number">1.30</span> <span class="literal">--user</span>=admin <span class="literal">--port</span>=<span class="number">22</span> <span class="literal">--master_host</span>=<span class="number">10.1</span>.<span class="number">1.10</span> <span class="literal">--master_port</span>=<span class="number">3307</span></span><br><span class="line"><span class="comment"># 设置自动failover时候的切换脚本</span></span><br><span class="line">master_ip_failover_script=<span class="string">&quot;/etc/mha/master_ip_failover.sh 10.1.1.100 1&quot;</span></span><br><span class="line"><span class="comment"># 设置手动切换时候的切换脚本</span></span><br><span class="line"><span class="comment">#master_ip_online_change_script=&quot;/etc/mha/master_ip_online_change.sh 10.1.1.100 1&quot;</span></span><br><span class="line"><span class="comment"># 设置故障发生后关闭故障主机脚本</span></span><br><span class="line"><span class="comment"># shutdown_script=&quot;/etc/mha/power_manager&quot;</span></span><br><span class="line">[<span class="type">server1</span>]</span><br><span class="line">hostname=<span class="number">10.1</span>.<span class="number">1.10</span></span><br><span class="line">port= <span class="number">3307</span></span><br><span class="line">candidate_master=<span class="number">1</span></span><br><span class="line">[<span class="type">server2</span>]</span><br><span class="line">hostname=<span class="number">10.1</span>.<span class="number">1.20</span></span><br><span class="line">port= <span class="number">3307</span></span><br><span class="line">candidate_master=<span class="number">1</span></span><br><span class="line">[<span class="type">server3</span>]</span><br><span class="line">hostname=<span class="number">10.1</span>.<span class="number">1.30</span></span><br><span class="line">port= <span class="number">3307</span></span><br><span class="line">candidate_master=<span class="number">1</span></span><br></pre></td></tr></table></figure><h4 id="㈤-上传相应脚本"><a href="#㈤-上传相应脚本" class="headerlink" title="㈤ 上传相应脚本"></a>㈤ 上传相应脚本</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">mgr</span> ~]<span class="comment"># ls /etc/mha/</span></span><br><span class="line">app1.conf  master_ip_failover.sh</span><br><span class="line">注意：脚本内容中要修改网卡名字和连接用户为admin</span><br><span class="line">my <span class="variable">$vip</span>  = shift;</span><br><span class="line">my <span class="variable">$interface</span> = <span class="string">&#x27;ens33&#x27;</span>;网卡名</span><br><span class="line">my <span class="variable">$key</span> = shift;</span><br><span class="line">...</span><br><span class="line">sub stop_vip() &#123;</span><br><span class="line">    my <span class="variable">$ssh_user</span> = <span class="string">&quot;admin&quot;</span>;用户名</span><br><span class="line">    print <span class="string">&quot;=======<span class="variable">$ssh_stop_vip</span>==================\n&quot;</span>;</span><br><span class="line">    `ssh <span class="variable">$ssh_user</span>\<span class="selector-tag">@</span><span class="variable">$orig_master_host</span> \<span class="string">&quot; <span class="variable">$ssh_stop_vip</span> \&quot;</span>`;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">mgr</span> ~]<span class="comment"># chmod +x /etc/mha/master_ip_*</span></span><br></pre></td></tr></table></figure><h3 id="6、检查ssh互信和集群状态"><a href="#6、检查ssh互信和集群状态" class="headerlink" title="6、检查ssh互信和集群状态"></a>6、检查ssh互信和集群状态</h3><ul><li>检查ssh互信</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">admin</span>@<span class="type">mgr</span> ~]<span class="variable">$</span> masterha_check_ssh <span class="literal">--conf</span>=/etc/mha/app1.conf</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">23</span>:<span class="number">59</span> <span class="number">2020</span> - [<span class="type">warning</span>] Global configuration file /etc/masterha_default.cnf not found. Skipping.</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">23</span>:<span class="number">59</span> <span class="number">2020</span> - [<span class="type">info</span>] Reading application default configuration from /etc/mha/app1.conf..</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">23</span>:<span class="number">59</span> <span class="number">2020</span> - [<span class="type">info</span>] Reading server configuration from /etc/mha/app1.conf..</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">23</span>:<span class="number">59</span> <span class="number">2020</span> - [<span class="type">info</span>] Starting SSH connection tests..</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">24</span>:<span class="number">00</span> <span class="number">2020</span> - [<span class="type">debug</span>]</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">23</span>:<span class="number">59</span> <span class="number">2020</span> - [<span class="type">debug</span>]  Connecting via SSH from admin@<span class="number">10.1</span>.<span class="number">1.10</span>(<span class="number">10.1</span>.<span class="number">1.10</span>:<span class="number">22</span>) to admin@<span class="number">10.1</span>.<span class="number">1.20</span>(<span class="number">10.1</span>.<span class="number">1.20</span>:<span class="number">22</span>)..</span><br><span class="line">Warning: Permanently added <span class="string">&#x27;10.1.1.20&#x27;</span> (ECDSA) to the list of known hosts.</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">23</span>:<span class="number">59</span> <span class="number">2020</span> - [<span class="type">debug</span>]   ok.</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">23</span>:<span class="number">59</span> <span class="number">2020</span> - [<span class="type">debug</span>]  Connecting via SSH from admin@<span class="number">10.1</span>.<span class="number">1.10</span>(<span class="number">10.1</span>.<span class="number">1.10</span>:<span class="number">22</span>) to admin@<span class="number">10.1</span>.<span class="number">1.30</span>(<span class="number">10.1</span>.<span class="number">1.30</span>:<span class="number">22</span>)..</span><br><span class="line">Warning: Permanently added <span class="string">&#x27;10.1.1.30&#x27;</span> (ECDSA) to the list of known hosts.</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">23</span>:<span class="number">59</span> <span class="number">2020</span> - [<span class="type">debug</span>]   ok.</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">24</span>:<span class="number">00</span> <span class="number">2020</span> - [<span class="type">debug</span>]</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">23</span>:<span class="number">59</span> <span class="number">2020</span> - [<span class="type">debug</span>]  Connecting via SSH from admin@<span class="number">10.1</span>.<span class="number">1.20</span>(<span class="number">10.1</span>.<span class="number">1.20</span>:<span class="number">22</span>) to admin@<span class="number">10.1</span>.<span class="number">1.10</span>(<span class="number">10.1</span>.<span class="number">1.10</span>:<span class="number">22</span>)..</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">24</span>:<span class="number">00</span> <span class="number">2020</span> - [<span class="type">debug</span>]   ok.</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">24</span>:<span class="number">00</span> <span class="number">2020</span> - [<span class="type">debug</span>]  Connecting via SSH from admin@<span class="number">10.1</span>.<span class="number">1.20</span>(<span class="number">10.1</span>.<span class="number">1.20</span>:<span class="number">22</span>) to admin@<span class="number">10.1</span>.<span class="number">1.30</span>(<span class="number">10.1</span>.<span class="number">1.30</span>:<span class="number">22</span>)..</span><br><span class="line">Warning: Permanently added <span class="string">&#x27;10.1.1.30&#x27;</span> (ECDSA) to the list of known hosts.</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">24</span>:<span class="number">00</span> <span class="number">2020</span> - [<span class="type">debug</span>]   ok.</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">24</span>:<span class="number">01</span> <span class="number">2020</span> - [<span class="type">debug</span>]</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">24</span>:<span class="number">00</span> <span class="number">2020</span> - [<span class="type">debug</span>]  Connecting via SSH from admin@<span class="number">10.1</span>.<span class="number">1.30</span>(<span class="number">10.1</span>.<span class="number">1.30</span>:<span class="number">22</span>) to admin@<span class="number">10.1</span>.<span class="number">1.10</span>(<span class="number">10.1</span>.<span class="number">1.10</span>:<span class="number">22</span>)..</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">24</span>:<span class="number">00</span> <span class="number">2020</span> - [<span class="type">debug</span>]   ok.</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">24</span>:<span class="number">00</span> <span class="number">2020</span> - [<span class="type">debug</span>]  Connecting via SSH from admin@<span class="number">10.1</span>.<span class="number">1.30</span>(<span class="number">10.1</span>.<span class="number">1.30</span>:<span class="number">22</span>) to admin@<span class="number">10.1</span>.<span class="number">1.20</span>(<span class="number">10.1</span>.<span class="number">1.20</span>:<span class="number">22</span>)..</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">24</span>:<span class="number">00</span> <span class="number">2020</span> - [<span class="type">debug</span>]   ok.</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">24</span>:<span class="number">01</span> <span class="number">2020</span> - [<span class="type">info</span>] All SSH connection tests passed successfully.</span><br><span class="line">[<span class="type">admin</span>@<span class="type">mgr</span> ~]<span class="variable">$</span></span><br><span class="line">  </span><br><span class="line">以上信息说明ok</span><br></pre></td></tr></table></figure><ul><li>检查集群状态</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">admin</span>@<span class="type">mgr</span> ~]<span class="variable">$</span> masterha_check_repl <span class="literal">--conf</span>=/etc/mha/app1.conf</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">35</span>:<span class="number">44</span> <span class="number">2020</span> - [<span class="type">warning</span>] Global configuration file /etc/masterha_default.cnf not found. Skipping.</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">35</span>:<span class="number">44</span> <span class="number">2020</span> - [<span class="type">info</span>] Reading application default configuration from /etc/mha/app1.conf..</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">35</span>:<span class="number">44</span> <span class="number">2020</span> - [<span class="type">info</span>] Reading server configuration from /etc/mha/app1.conf..</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">35</span>:<span class="number">44</span> <span class="number">2020</span> - [<span class="type">info</span>] MHA::MasterMonitor version <span class="number">0.57</span>.</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">35</span>:<span class="number">45</span> <span class="number">2020</span> - [<span class="type">info</span>] GTID failover mode = <span class="number">1</span></span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">35</span>:<span class="number">45</span> <span class="number">2020</span> - [<span class="type">info</span>] Dead Servers:</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">35</span>:<span class="number">45</span> <span class="number">2020</span> - [<span class="type">info</span>] Alive Servers:</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">35</span>:<span class="number">45</span> <span class="number">2020</span> - [<span class="type">info</span>]   <span class="number">10.1</span>.<span class="number">1.10</span>(<span class="number">10.1</span>.<span class="number">1.10</span>:<span class="number">3307</span>)</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">35</span>:<span class="number">45</span> <span class="number">2020</span> - [<span class="type">info</span>]   <span class="number">10.1</span>.<span class="number">1.20</span>(<span class="number">10.1</span>.<span class="number">1.20</span>:<span class="number">3307</span>)</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">35</span>:<span class="number">45</span> <span class="number">2020</span> - [<span class="type">info</span>]   <span class="number">10.1</span>.<span class="number">1.30</span>(<span class="number">10.1</span>.<span class="number">1.30</span>:<span class="number">3307</span>)</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">35</span>:<span class="number">45</span> <span class="number">2020</span> - [<span class="type">info</span>] Alive Slaves:</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">35</span>:<span class="number">45</span> <span class="number">2020</span> - [<span class="type">info</span>]   <span class="number">10.1</span>.<span class="number">1.20</span>(<span class="number">10.1</span>.<span class="number">1.20</span>:<span class="number">3307</span>)  Version=<span class="number">5.7</span>.<span class="number">25</span><span class="literal">-log</span> (oldest major version between slaves) log<span class="literal">-bin</span>:enabled</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">35</span>:<span class="number">45</span> <span class="number">2020</span> - [<span class="type">info</span>]     GTID ON</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">35</span>:<span class="number">45</span> <span class="number">2020</span> - [<span class="type">info</span>]     Replicating from <span class="number">10.1</span>.<span class="number">1.10</span>(<span class="number">10.1</span>.<span class="number">1.10</span>:<span class="number">3307</span>)</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">35</span>:<span class="number">45</span> <span class="number">2020</span> - [<span class="type">info</span>]     Primary candidate <span class="keyword">for</span> the new Master (candidate_master is <span class="built_in">set</span>)</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">35</span>:<span class="number">45</span> <span class="number">2020</span> - [<span class="type">info</span>]   <span class="number">10.1</span>.<span class="number">1.30</span>(<span class="number">10.1</span>.<span class="number">1.30</span>:<span class="number">3307</span>)  Version=<span class="number">5.7</span>.<span class="number">25</span><span class="literal">-log</span> (oldest major version between slaves) log<span class="literal">-bin</span>:enabled</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">35</span>:<span class="number">45</span> <span class="number">2020</span> - [<span class="type">info</span>]     GTID ON</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">35</span>:<span class="number">45</span> <span class="number">2020</span> - [<span class="type">info</span>]     Replicating from <span class="number">10.1</span>.<span class="number">1.10</span>(<span class="number">10.1</span>.<span class="number">1.10</span>:<span class="number">3307</span>)</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">35</span>:<span class="number">45</span> <span class="number">2020</span> - [<span class="type">info</span>]     Primary candidate <span class="keyword">for</span> the new Master (candidate_master is <span class="built_in">set</span>)</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">35</span>:<span class="number">45</span> <span class="number">2020</span> - [<span class="type">info</span>] Current Alive Master: <span class="number">10.1</span>.<span class="number">1.10</span>(<span class="number">10.1</span>.<span class="number">1.10</span>:<span class="number">3307</span>)</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">35</span>:<span class="number">45</span> <span class="number">2020</span> - [<span class="type">info</span>] Checking slave configurations..</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">35</span>:<span class="number">45</span> <span class="number">2020</span> - [<span class="type">info</span>] Checking replication filtering settings..</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">35</span>:<span class="number">45</span> <span class="number">2020</span> - [<span class="type">info</span>]  binlog_do_db= , binlog_ignore_db=</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">35</span>:<span class="number">45</span> <span class="number">2020</span> - [<span class="type">info</span>]  Replication filtering check ok.</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">35</span>:<span class="number">45</span> <span class="number">2020</span> - <span class="function">[<span class="type">info</span>] <span class="title">GTID</span></span> (with auto<span class="literal">-pos</span>) is supported. Skipping all SSH and Node package checking.</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">35</span>:<span class="number">45</span> <span class="number">2020</span> - [<span class="type">info</span>] Checking SSH publickey authentication settings on the current master..</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">35</span>:<span class="number">45</span> <span class="number">2020</span> - [<span class="type">info</span>] HealthCheck: SSH to <span class="number">10.1</span>.<span class="number">1.10</span> is reachable.</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">35</span>:<span class="number">45</span> <span class="number">2020</span> - [<span class="type">info</span>]</span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.10</span>(<span class="number">10.1</span>.<span class="number">1.10</span>:<span class="number">3307</span>) (current master)</span><br><span class="line"> +<span class="literal">--10</span>.<span class="number">1.1</span>.<span class="number">20</span>(<span class="number">10.1</span>.<span class="number">1.20</span>:<span class="number">3307</span>)</span><br><span class="line"> +<span class="literal">--10</span>.<span class="number">1.1</span>.<span class="number">30</span>(<span class="number">10.1</span>.<span class="number">1.30</span>:<span class="number">3307</span>)</span><br><span class="line"></span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">35</span>:<span class="number">45</span> <span class="number">2020</span> - [<span class="type">info</span>] Checking replication health on <span class="number">10.1</span>.<span class="number">1.20</span>..</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">35</span>:<span class="number">45</span> <span class="number">2020</span> - [<span class="type">info</span>]  ok.</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">35</span>:<span class="number">45</span> <span class="number">2020</span> - [<span class="type">info</span>] Checking replication health on <span class="number">10.1</span>.<span class="number">1.30</span>..</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">35</span>:<span class="number">45</span> <span class="number">2020</span> - [<span class="type">info</span>]  ok.</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">35</span>:<span class="number">45</span> <span class="number">2020</span> - [<span class="type">info</span>] Checking master_ip_failover_script status:</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">35</span>:<span class="number">45</span> <span class="number">2020</span> - [<span class="type">info</span>]   /etc/mha/master_ip_failover.sh <span class="number">10.1</span>.<span class="number">1.100</span> <span class="number">1</span> <span class="literal">--command</span>=status <span class="literal">--ssh_user</span>=admin <span class="literal">--orig_master_host</span>=<span class="number">10.1</span>.<span class="number">1.10</span> <span class="literal">--orig_master_ip</span>=<span class="number">10.1</span>.<span class="number">1.10</span> <span class="literal">--orig_master_port</span>=<span class="number">3307</span></span><br><span class="line">Checking the Status of the script.. OK</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">35</span>:<span class="number">45</span> <span class="number">2020</span> - [<span class="type">info</span>]  OK.</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">35</span>:<span class="number">45</span> <span class="number">2020</span> - [<span class="type">warning</span>] shutdown_script is not defined.</span><br><span class="line">Sat Apr <span class="number">11</span> <span class="number">22</span>:<span class="number">35</span>:<span class="number">45</span> <span class="number">2020</span> - [<span class="type">info</span>] Got <span class="keyword">exit</span> code <span class="number">0</span> (Not master dead).</span><br><span class="line"></span><br><span class="line">MySQL Replication Health is OK.</span><br><span class="line"></span><br><span class="line">以上信息说明ok</span><br></pre></td></tr></table></figure><h3 id="7、检查MHA-Mgr状态"><a href="#7、检查MHA-Mgr状态" class="headerlink" title="7、检查MHA-Mgr状态"></a>7、检查MHA-Mgr状态</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">admin</span>@<span class="type">mgr</span> ~]<span class="variable">$</span> masterha_check_status <span class="literal">--conf</span>=/etc/mha/app1.conf</span><br><span class="line">app1 is stopped(<span class="number">2</span>:NOT_RUNNING).</span><br><span class="line">开启MHA Manager监控：</span><br><span class="line">[<span class="type">admin</span>@<span class="type">mgr</span> ~]<span class="variable">$</span> nohup masterha_manager <span class="literal">--conf</span>=/etc/mha/app1.conf <span class="literal">--remove_dead_master_conf</span> <span class="literal">--ignore_last_failover</span> &amp;</span><br><span class="line">再次查看监控状态：</span><br><span class="line">[<span class="type">admin</span>@<span class="type">mgr</span> ~]<span class="variable">$</span> masterha_check_status <span class="literal">--conf</span>=/etc/mha/app1.conf</span><br><span class="line">app1 (pid:<span class="number">8913</span>) is running(<span class="number">0</span>:PING_OK), master:<span class="number">10.1</span>.<span class="number">1.10</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">注意：</span><br><span class="line"><span class="number">1</span>. 如果正常，会显示”PING_OK ”，否则会显示”NOT_RUNNING ”，说明 MHA监控没有开启</span><br><span class="line"><span class="number">2</span>. 使用admin用户启动监控，否则会报权限拒绝</span><br><span class="line"><span class="number">3</span>. 手动停止监控命令:masterha_stop <span class="literal">--conf</span>=/etc/mha/app1.conf</span><br></pre></td></tr></table></figure><h2 id="二、自动Failover测试"><a href="#二、自动Failover测试" class="headerlink" title="二、自动Failover测试"></a>二、自动Failover测试</h2><h3 id="1、安装测试工具"><a href="#1、安装测试工具" class="headerlink" title="1、安装测试工具"></a>1、安装测试工具</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">master</span> ~]<span class="comment"># yum -y install sysbench</span></span><br></pre></td></tr></table></figure><h3 id="2、-创建测试数据"><a href="#2、-创建测试数据" class="headerlink" title="2、 创建测试数据"></a>2、 创建测试数据</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">master服务器上创建测试库test</span><br><span class="line">mysql&gt; create database test charset utf8mb4;</span><br><span class="line">Query OK, <span class="number">1</span> row affected (<span class="number">0.17</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; grant all on *.* to <span class="string">&#x27;mha&#x27;</span><span class="string">@&#x27;localhost&#x27; identified by &#x27;123&#x27;; </span></span><br><span class="line"><span class="string">Query OK, 0 rows affected (0.14 sec)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">mysql&gt; flush privileges;</span></span><br><span class="line"><span class="string">Query OK, 0 rows affected (0.11 sec)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">mysql&gt; exit</span></span><br><span class="line"><span class="string">Bye</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[root@master ~]# sysbench /usr/share/sysbench/oltp_read_only.lua \</span></span><br><span class="line"><span class="string"> --mysql-host=10.1.1.10  --mysql-port=3307  --mysql-user=mha \</span></span><br><span class="line"><span class="string"> --mysql-password=123  --mysql-socket=/usr/local/mysql/mysql.sock \</span></span><br><span class="line"><span class="string"> --mysql-db=test  --db-driver=mysql  --tables=1 \</span></span><br><span class="line"><span class="string"> --table-size=100000 --report-interval=10 --threads=128 --time=120 prepare</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">mysql&gt; select count(*) from sbtest1;</span></span><br><span class="line"><span class="string">+----------+</span></span><br><span class="line"><span class="string">| count(*) |</span></span><br><span class="line"><span class="string">+----------+</span></span><br><span class="line"><span class="string">|   100000 |</span></span><br><span class="line"><span class="string">+----------+</span></span><br><span class="line"><span class="string">1 row in set (0.01 sec)</span></span><br></pre></td></tr></table></figure><h3 id="3、模拟故障"><a href="#3、模拟故障" class="headerlink" title="3、模拟故障"></a>3、模拟故障</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">master</span> ~]<span class="comment"># service mysql stop</span></span><br><span class="line">Shutting down MySQL............ [ <span class="type">OK</span> ]</span><br></pre></td></tr></table></figure><h3 id="4、查看切换过程"><a href="#4、查看切换过程" class="headerlink" title="4、查看切换过程"></a>4、查看切换过程</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">mgr</span> ~]<span class="comment"># tail -f /data/mha/masterha/app1/app1-3307.log</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-57-33-%E8%87%AA%E5%8A%A8%E5%88%87%E6%8D%A2%E6%88%90%E5%8A%9F-fa7766.png" alt="自动切换成功"></p><h2 id="三、经验值分享"><a href="#三、经验值分享" class="headerlink" title="三、经验值分享"></a>三、经验值分享</h2><h3 id="1、管理节点配置文件错误"><a href="#1、管理节点配置文件错误" class="headerlink" title="1、管理节点配置文件错误"></a>1、管理节点配置文件错误</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">mgr</span> ~]<span class="comment"># cat /etc/mha/app1.conf</span></span><br><span class="line">[<span class="type">server</span> <span class="type">default</span>]</span><br><span class="line"><span class="comment"># 设置监控用户和密码,该用户是master上创建的数据库管理账号，拥有所有权限</span></span><br><span class="line">user=mha</span><br><span class="line">password=<span class="number">123</span></span><br><span class="line"><span class="comment"># 设置复制环境中的复制用户和密码，注意需要有以下权限：</span></span><br><span class="line"><span class="comment">#REPLICATION SLAVE和REPLICATION CLIENT</span></span><br><span class="line">repl_user=slave</span><br><span class="line">repl_password=<span class="number">123</span></span><br><span class="line"><span class="comment"># 设置ssh的登录用户名</span></span><br><span class="line">ssh_user=admin</span><br><span class="line">....</span><br><span class="line">[<span class="type">server1</span>]</span><br><span class="line">hostname=<span class="number">10.1</span>.<span class="number">1.10</span></span><br><span class="line">port= <span class="number">3307</span></span><br><span class="line">candidate_master=<span class="number">1</span></span><br><span class="line">[<span class="type">server2</span>]</span><br><span class="line">hostname=<span class="number">10.1</span>.<span class="number">1.20</span></span><br><span class="line">port= <span class="number">3306</span></span><br><span class="line">candidate_master=<span class="number">1</span></span><br><span class="line">[<span class="type">server3</span>]</span><br><span class="line">hostname=<span class="number">10.1</span>.<span class="number">1.30</span></span><br><span class="line">port= <span class="number">3306</span></span><br><span class="line">candidate_master=<span class="number">1</span></span><br><span class="line">注意：一定要配置正确的IP和端口号</span><br></pre></td></tr></table></figure><h3 id="2、配置MHA时数据只读设置"><a href="#2、配置MHA时数据只读设置" class="headerlink" title="2、配置MHA时数据只读设置"></a>2、配置MHA时数据只读设置</h3><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-57-31-%E9%94%99%E8%AF%AF1-a253da.png" alt="错误1"></p><p>解决办法：设置从服务器为只读</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">set</span> <span class="selector-tag">@</span>@global.read_only=<span class="number">1</span>;</span><br><span class="line">Query OK, <span class="number">0</span> rows affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; show variables like <span class="string">&#x27;read_only&#x27;</span>;</span><br><span class="line">+<span class="literal">---------------</span>+<span class="literal">-------</span>+</span><br><span class="line">| Variable_name | Value |</span><br><span class="line">+<span class="literal">---------------</span>+<span class="literal">-------</span>+</span><br><span class="line">| read_only     | ON    |</span><br><span class="line">+<span class="literal">---------------</span>+<span class="literal">-------</span>+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> <span class="built_in">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3、复制用户权限密码错误"><a href="#3、复制用户权限密码错误" class="headerlink" title="3、复制用户权限密码错误"></a>3、复制用户权限密码错误</h3><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-57-29-%E9%94%99%E8%AF%AF2-1f8ae6.png" alt="错误2"></p><p>原因：</p><ol><li>复制用户slave没有相关权限，REPLICATION SLAVE和&#x3D;&#x3D;REPLICATION CLIENT&#x3D;&#x3D;</li><li>从服务器没有创建复制用户</li></ol><h3 id="4、其他错误"><a href="#4、其他错误" class="headerlink" title="4、其他错误"></a>4、其他错误</h3><p>MHA集群至少需要2个slave，所以如果只有一台slave的话，检查也是通不过的！</p>]]></content>
      
      
      <categories>
          
          <category> 全栈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维 </tag>
            
            <tag> MYSQL </tag>
            
            <tag> mysqls </tag>
            
            <tag> 数据库高可用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql数据库的备份与恢复</title>
      <link href="/2024/06/25/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D/"/>
      <url>/2024/06/25/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="任务背景"><a href="#任务背景" class="headerlink" title="任务背景"></a>任务背景</h1><h2 id="一、真实案例"><a href="#一、真实案例" class="headerlink" title="一、真实案例"></a>一、真实案例</h2><p>​某天，公司领导安排刚入职不久的小冯同学将生产环境中的数据(MySQL数据库)全部导入到测试环境给测试人员使用。当小冯去拿备份数据时发现，备份数据是1个礼拜之前的。原因是之前运维同事通过脚本每天对数据库进行备份，根据结果判断应该是脚本的问题导致备份失败。于是乎，领导让小冯重新制定备份策略对数据库进行备份，并且把数据导入到测试环境。</p><h2 id="二、案例背后的核心技术"><a href="#二、案例背后的核心技术" class="headerlink" title="二、案例背后的核心技术"></a>二、案例背后的核心技术</h2><p>​1）掌握MySQL的备份工具使用及各自特点</p><p>​2）熟悉SHELL脚本</p><p>​3）熟悉MySQL数据的导入导出</p><h2 id="三、今日任务场景"><a href="#三、今日任务场景" class="headerlink" title="三、今日任务场景"></a>三、今日任务场景</h2><p>“手里有粮，心里不慌，数据有备，喜气洋洋”。对于重要的数据做好备份，是我们每个运维人员和DBA的重要职责。备份只&#x3D;&#x3D;是一种手段&#x3D;&#x3D;，我们最终目的是当数据出现问题时能够及时的通过备份&#x3D;&#x3D;进行恢复&#x3D;&#x3D;。所以，现在需要你对我们现有的MySQL数据库进行&#x3D;&#x3D;备份策略的制定&#x3D;&#x3D;以及实施。</p><h1 id="任务要求"><a href="#任务要求" class="headerlink" title="任务要求"></a>任务要求</h1><ol><li>选择&#x3D;&#x3D;合适的工具&#x3D;&#x3D;和&#x3D;&#x3D;方法&#x3D;&#x3D;对mysql数据库进行备份</li><li>编写脚本实现自动化备份</li></ol><h1 id="课程目标"><a href="#课程目标" class="headerlink" title="课程目标"></a>课程目标</h1><ul><li><input disabled="" type="checkbox"> 了解MySQL常见的&#x3D;&#x3D;备份方式和类型&#x3D;&#x3D;</li><li><input disabled="" type="checkbox"> 能够使用&#x3D;&#x3D;mysqldump工具&#x3D;&#x3D;进行数据库的备份。如全库备份，库级别备份，表级别备份</li><li><input disabled="" type="checkbox"> 能够使用mysqldump工具+binlog日志实现增量备份</li><li><input disabled="" type="checkbox"> 理解&#x3D;&#x3D;xtrabackup工具&#x3D;&#x3D;实现增量备份的&#x3D;&#x3D;原理&#x3D;&#x3D;和方法</li><li><input disabled="" type="checkbox"> 能够使用xtrabackup工具对数据库进行全备和增备</li></ul><h1 id="理论储备"><a href="#理论储备" class="headerlink" title="理论储备"></a>理论储备</h1><h2 id="一、MySQL备份概述"><a href="#一、MySQL备份概述" class="headerlink" title="一、MySQL备份概述"></a>一、MySQL备份概述</h2><h3 id="1、关于备份你要知道的"><a href="#1、关于备份你要知道的" class="headerlink" title="1、关于备份你要知道的"></a>1、关于备份你要知道的</h3><p><strong>思考：</strong>备份和冗余有什么区别？</p><p>备份： 能够防止由于<strong>机械故障</strong>以及<strong>人为误操作</strong>带来的数据丢失，例如将数据库文件保存在了其它地方。</p><p>冗余： 数据有多份冗余，但不等备份，<strong>只能防止机械故障</strong>带来的数据丢失，例如主备模式、数据库集群。 </p><h3 id="2、备份什么"><a href="#2、备份什么" class="headerlink" title="2、备份什么"></a>2、备份什么</h3><p>数据库：&#x3D;&#x3D;一堆物理文件的集合&#x3D;&#x3D;；日志文件(二进制日志)+数据文件+配置文件</p><p>DBFILEBINLOGmy.cnf</p><h3 id="3、备份过程须考虑的因素"><a href="#3、备份过程须考虑的因素" class="headerlink" title="3、备份过程须考虑的因素"></a>3、备份过程须考虑的因素</h3><ul><li>必须制定&#x3D;&#x3D;详细的备份计划(策略)&#x3D;&#x3D;（备份频率、时间点、周期）</li><li>备份数据应该放在&#x3D;&#x3D;非数据库本地&#x3D;&#x3D;，并建议&#x3D;&#x3D;有多份副本&#x3D;&#x3D;</li><li>必须做好&#x3D;&#x3D;<strong>数据恢复的演练</strong>&#x3D;&#x3D;（每隔一段时间，对备份的数据在测试环境中进行模拟恢复，保证当出现数据灾难的时候能够及时恢复数据。）</li><li>根据数据应用的场合、特点&#x3D;&#x3D;选择正确的备份工具&#x3D;&#x3D;。</li><li>数据的一致性</li><li>服务的可用性</li></ul><h3 id="4、备份类型"><a href="#4、备份类型" class="headerlink" title="4、备份类型"></a>4、备份类型</h3><h4 id="㈠-逻辑备份"><a href="#㈠-逻辑备份" class="headerlink" title="㈠ 逻辑备份"></a>㈠ 逻辑备份</h4><ul><li>备份的是<strong>建表、建库、插入等操作所执行SQL语句</strong>（DDL DML DCL）。</li><li>适用于&#x3D;&#x3D;中小型数据库，效率相对较低&#x3D;&#x3D;。 一般在数据库<strong>正常提供服务</strong>的前提下进行，如：<strong>mysqldump</strong>、mydumper、into outfile（表的导出导入）等。</li></ul><h4 id="㈡-物理备份"><a href="#㈡-物理备份" class="headerlink" title="㈡ 物理备份"></a>㈡ 物理备份</h4><ul><li>直接复制&#x3D;&#x3D;数据库文件&#x3D;&#x3D;</li><li>适用于&#x3D;&#x3D;大型数据库&#x3D;&#x3D;环境，不受存储引擎的限制，但不能恢复到不同的MySQL版本。 </li><li>一般是在&#x3D;&#x3D;数据库彻底关闭或者不能完成正常提供服务&#x3D;&#x3D;的前提下进行的备份）；如：tar、cp、&#x3D;&#x3D;xtrabackup&#x3D;&#x3D;（数据库可以&#x3D;&#x3D;正常提供服务&#x3D;&#x3D;）、lvm snapshot、rsync等</li></ul><h4 id="㈢-在线热备（冗余）"><a href="#㈢-在线热备（冗余）" class="headerlink" title="㈢ 在线热备（冗余）"></a>㈢ 在线热备（冗余）</h4><ul><li>MySQL的replication架构，如M-S|M-S-S|M-M-S等</li><li>实时在线备份</li></ul><h3 id="5、备份工具"><a href="#5、备份工具" class="headerlink" title="5、备份工具"></a>5、备份工具</h3><h4 id="㈠-社区版安装包中的备份工具"><a href="#㈠-社区版安装包中的备份工具" class="headerlink" title="㈠ 社区版安装包中的备份工具"></a>㈠ 社区版安装包中的备份工具</h4><h5 id="①-mysqldump-逻辑备份，只能-全量备份-）"><a href="#①-mysqldump-逻辑备份，只能-全量备份-）" class="headerlink" title="① mysqldump(逻辑备份，只能&#x3D;&#x3D;全量备份&#x3D;&#x3D;）"></a>① mysqldump(逻辑备份，只能&#x3D;&#x3D;全量备份&#x3D;&#x3D;）</h5><p>​1）企业版和社区版都包含</p><p>​2）本质上使用&#x3D;&#x3D;SQL语句描述数据库&#x3D;&#x3D;及数据并导出</p><p>​3）在MYISAM引擎上锁表，Innodb引擎上锁行</p><p>​4）数据量很大时不推荐使用</p><h5 id="②-mysqlhotcopy-物理备份工具）"><a href="#②-mysqlhotcopy-物理备份工具）" class="headerlink" title="② mysqlhotcopy(物理备份工具）"></a>② mysqlhotcopy(物理备份工具）</h5><p>​1）企业版和社区版都包含</p><p>​2）perl写的一个脚本，本质上是使用锁表语句后再拷贝数据</p><p>​3）&#x3D;&#x3D;只&#x3D;&#x3D;支持MYISAM数据引擎</p><h4 id="㈡-企业版安装包中的备份工具"><a href="#㈡-企业版安装包中的备份工具" class="headerlink" title="㈡ 企业版安装包中的备份工具"></a>㈡ 企业版安装包中的备份工具</h4><p><strong>mysqlbackup</strong></p><p>​1）在线备份</p><p>​2）增量备份</p><p>​3）部分备份</p><p>​4）在某个特定时间的一致性状态的备份</p><h4 id="㈢-第三方备份工具"><a href="#㈢-第三方备份工具" class="headerlink" title="㈢ 第三方备份工具"></a>㈢ 第三方备份工具</h4><h5 id="①-XtraBackup和innobackupex-物理备份）"><a href="#①-XtraBackup和innobackupex-物理备份）" class="headerlink" title="① XtraBackup和innobackupex(物理备份）"></a>① XtraBackup和innobackupex(物理备份）</h5><p>​1）Xtrabackup是一个对<strong>InnoDB</strong>做数据备份的工具，支持&#x3D;&#x3D;在线热备份&#x3D;&#x3D;（备份时不影响数据读写），是商业备份工具<strong>InnoDB Hotbackup</strong>的一个很好的替代品。</p><p>​2）Xtrabackup有两个主要的工具：xtrabackup、innobackupex</p><p>​a、xtrabackup只能备份&#x3D;&#x3D;InnoDB和XtraDB&#x3D;&#x3D;两种数据表，不能备份myisam类型的表。</p><p>​b、innobackupex是将Xtrabackup进行封装的perl脚本，所以能同时备份处理innodb和myisam的存储引擎，但在处理myisam时需要加一个读锁。</p><h5 id="②-mydumper-逻辑备份，备份SQL语句）"><a href="#②-mydumper-逻辑备份，备份SQL语句）" class="headerlink" title="② mydumper(逻辑备份，备份SQL语句）"></a>② mydumper(逻辑备份，备份SQL语句）</h5><p><strong>多线程备份工具</strong></p><p> <a href="https://launchpad.net/mydumper/mydumper-0.9.1.tar.gz">https://launchpad.net/mydumper/mydumper-0.9.1.tar.gz</a>        2015-11-06（最后更新时间）</p><h3 id="6、备份方法"><a href="#6、备份方法" class="headerlink" title="6、备份方法"></a>6、备份方法</h3><ul><li>完全备份（全备）</li><li>增量备份（增量备份基于全量备份）</li></ul><p> <img src="/./%E5%A2%9E%E9%87%8F%E5%A4%87%E4%BB%BD.png" alt="增量备份"></p><h2 id="二、MySQL的逻辑备份"><a href="#二、MySQL的逻辑备份" class="headerlink" title="二、MySQL的逻辑备份"></a>二、MySQL的逻辑备份</h2><h3 id="1、mysqldump基本备份"><a href="#1、mysqldump基本备份" class="headerlink" title="1、mysqldump基本备份"></a>1、mysqldump基本备份</h3><p><strong>本质</strong>：导出的是sql语句文件</p><p><strong>优点</strong>：无论是什么存储引擎，都可以用mysqldump备成sql语句</p><p><strong>缺点</strong>：速度较慢,导入时可能会出现格式不兼容的突发状况.&#x3D;&#x3D;无法直接做增量备份&#x3D;&#x3D;.</p><p><strong>提供三种级别的备份，表级，库级和全库级</strong> </p><h4 id="㈠-基本语法"><a href="#㈠-基本语法" class="headerlink" title="㈠ 基本语法"></a>㈠ 基本语法</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">表级别备份</span><br><span class="line">mysqldump [<span class="type">OPTIONS</span>] database [<span class="type">tables</span>]</span><br><span class="line">库级别备份</span><br><span class="line">mysqldump [<span class="type">OPTIONS</span>] <span class="literal">--databases</span> [<span class="type">OPTIONS</span>] DB1 [<span class="type">DB2</span> <span class="type">DB3...</span>]</span><br><span class="line">全库级别备份</span><br><span class="line">mysqldump [<span class="type">OPTIONS</span>] <span class="literal">--all-databases</span> [<span class="type">OPTIONS</span>]</span><br></pre></td></tr></table></figure><h4 id="㈡-常用参数"><a href="#㈡-常用参数" class="headerlink" title="㈡ 常用参数"></a>㈡ 常用参数</h4><table><thead><tr><th>常用参数</th><th>描述说明</th></tr></thead><tbody><tr><td>–flush-logs, -F</td><td>开始备份前刷新日志</td></tr><tr><td>–flush-privileges</td><td>备份包含mysql数据库时刷新授权表</td></tr><tr><td>–lock-all-tables, -x</td><td>MyISAM一致性，服务可用性（针对所有库所有表）</td></tr><tr><td>–lock-tables, -l</td><td>备份前锁表（针对要备份的库）</td></tr><tr><td>–single-transaction</td><td>适用InnoDB引擎，保证一致性，服务可用性</td></tr><tr><td>–master-data&#x3D;2</td><td>表示将二进制日志位置和文件名写入到备份文件并在dump文件中注释掉这一行</td></tr><tr><td>–master-data&#x3D;1</td><td>表示将二进制日志位置和文件名写入到备份文件,在dump文件中不注释这一行</td></tr></tbody></table><p><strong>–master-data参数其他说明：</strong></p><p>1）恢复时会执行，默认是1<br>2）需要RELOAD privilege并必须打开二进制文件<br>3）这个选项会自动打开–lock-all-tables，关闭–lock-tables</p><h4 id="㈢-举例说明"><a href="#㈢-举例说明" class="headerlink" title="㈢ 举例说明"></a>㈢ 举例说明</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">表级备份：</span><br><span class="line"><span class="comment"># mysqldump -p123 db01 emp &gt; /tmp/mysqlbak/emp.sql备份单个表</span></span><br><span class="line"><span class="comment"># mysqldump -p123 db01 emp dept &gt; /tmp/mysqlbak/emp.sql备份多个表</span></span><br><span class="line"></span><br><span class="line">表级恢复：</span><br><span class="line"><span class="comment"># mysql -p db01 &lt;/tmp/mysqlbak/emp.sql</span></span><br><span class="line">或者在mysql数据库内使用source命令来执行外部的sql文件</span><br><span class="line">mysql&gt; source /tmp/mysqlbackup/emp.sql</span><br><span class="line"></span><br><span class="line">库级备份:</span><br><span class="line"><span class="comment"># mysqldump --databases db01 -p &gt; /tmp/mysqlbak/db01.sql备份单个库</span></span><br><span class="line"><span class="comment"># mysqldump --databases db01 db02 -p &gt; /tmp/mysqlbak/db01.sql备份多个库</span></span><br><span class="line"></span><br><span class="line">库级恢复：</span><br><span class="line"><span class="comment"># mysql -p &lt;/tmp/mysqlbak/db01.sql </span></span><br><span class="line">mysql&gt; source /tmp/mysqlbak/db01.sql </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">全库级备份：</span><br><span class="line"><span class="comment"># mysqldump --all-databases --master-data --single-transaction &gt; all.sql</span></span><br></pre></td></tr></table></figure><h4 id="㈣-小结"><a href="#㈣-小结" class="headerlink" title="㈣ 小结"></a>㈣ 小结</h4><ol><li>mysqldump工具备份的是&#x3D;&#x3D;SQL语句&#x3D;&#x3D;，故备份不需要停服务</li><li>使用备份文件&#x3D;&#x3D;恢复&#x3D;&#x3D;时，要保证&#x3D;&#x3D;数据库处于运行状态&#x3D;&#x3D;</li><li>只能实现全库，指定库，表级别的&#x3D;&#x3D;某一时刻的备份&#x3D;&#x3D;，本身&#x3D;&#x3D;不能增量备份&#x3D;&#x3D;</li><li>适用于&#x3D;&#x3D;中小型&#x3D;&#x3D;数据库</li></ol><h3 id="2、mysqldump实现增量备份"><a href="#2、mysqldump实现增量备份" class="headerlink" title="2、mysqldump实现增量备份"></a>2、mysqldump实现增量备份</h3><p><strong>核心思路：</strong>结合binglog实现增量</p><ol><li>&#x3D;&#x3D;备份的目的为了数据出问题进行恢复&#x3D;&#x3D;</li><li>二进制日志文件默认会记录下所有对数据库数据变化的操作(增、删、改)</li><li>二进制文件同时还会记录具体sql执行时的环境、&#x3D;&#x3D;时间以及起始位置和结束位置&#x3D;&#x3D;（pos值）</li><li>通过获取二进制文件里的SQL操作来进行&#x3D;&#x3D;数据的恢复&#x3D;&#x3D;</li></ol><h4 id="㈠-实现思路"><a href="#㈠-实现思路" class="headerlink" title="㈠ 实现思路"></a>㈠ 实现思路</h4><ol><li>先做全量备份（mysqldump）</li><li>对数据库做更改操作</li><li>备份二进制日志文件</li><li>模拟故障进行</li><li>数据恢复</li><li>测试验证</li></ol><h4 id="㈡-实现步骤"><a href="#㈡-实现步骤" class="headerlink" title="㈡ 实现步骤"></a>㈡ 实现步骤</h4><h5 id="①-全库备份"><a href="#①-全库备份" class="headerlink" title="① 全库备份"></a>① 全库备份</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysqldump --single-transaction --flush-logs --master-data=2 --all-databases &gt; /tmp/all.sql -p</span></span><br></pre></td></tr></table></figure><h5 id="②-更改数据库"><a href="#②-更改数据库" class="headerlink" title="② 更改数据库"></a>② 更改数据库</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> * from db01.t1;</span><br><span class="line">+<span class="literal">------</span>+<span class="literal">--------</span>+<span class="literal">---------</span>+<span class="literal">-----------</span>+</span><br><span class="line">| id   | name   | salary  | dept      |</span><br><span class="line">+<span class="literal">------</span>+<span class="literal">--------</span>+<span class="literal">---------</span>+<span class="literal">-----------</span>+</span><br><span class="line">|    <span class="number">1</span> | harry  | <span class="number">1300.00</span> | 市场部    |</span><br><span class="line">|    <span class="number">2</span> | amy    | <span class="number">2200.00</span> | 人事部    |</span><br><span class="line">|    <span class="number">3</span> | tom    |  <span class="number">600.00</span> | 财务部    |</span><br><span class="line">|    <span class="number">4</span> | jack   | <span class="number">3300.00</span> | 市场部    |</span><br><span class="line">|    <span class="number">5</span> | momo   | <span class="number">1700.00</span> | 市场部    |</span><br><span class="line">|    <span class="number">6</span> | sarsha | <span class="number">1300.00</span> | 人事部    |</span><br><span class="line">|    <span class="number">7</span> | xiaom  | <span class="number">4300.00</span> | 市场部    |</span><br><span class="line">+<span class="literal">------</span>+<span class="literal">--------</span>+<span class="literal">---------</span>+<span class="literal">-----------</span>+</span><br><span class="line">mysql&gt; <span class="built_in">select</span> * from db02.t1;</span><br><span class="line">+<span class="literal">----</span>+<span class="literal">-------</span>+</span><br><span class="line">| id | name  |</span><br><span class="line">+<span class="literal">----</span>+<span class="literal">-------</span>+</span><br><span class="line">|  <span class="number">1</span> | harry |</span><br><span class="line">|  <span class="number">2</span> | tom   |</span><br><span class="line">+<span class="literal">----</span>+<span class="literal">-------</span>+</span><br><span class="line"><span class="number">2</span> rows <span class="keyword">in</span> <span class="built_in">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line">更改：</span><br><span class="line">mysql&gt; delete from db01.t1 <span class="built_in">where</span> id=<span class="number">7</span>;</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into db01.t1 values(<span class="number">88</span>,<span class="string">&#x27;aaa&#x27;</span>,<span class="number">11111.23</span>,<span class="string">&#x27;安保&#x27;</span>),(<span class="number">99</span>,<span class="string">&#x27;bbb&#x27;</span>,<span class="number">22222.22</span>,<span class="string">&#x27;运维&#x27;</span>);</span><br><span class="line"></span><br><span class="line">mysql&gt; update db02.t1 <span class="built_in">set</span> name=<span class="string">&#x27;jack&#x27;</span> <span class="built_in">where</span> id=<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="built_in">select</span> * from db01.t1;</span><br><span class="line">+<span class="literal">------</span>+<span class="literal">--------</span>+<span class="literal">----------</span>+<span class="literal">-----------</span>+</span><br><span class="line">| id   | name   | salary   | dept      |</span><br><span class="line">+<span class="literal">------</span>+<span class="literal">--------</span>+<span class="literal">----------</span>+<span class="literal">-----------</span>+</span><br><span class="line">|    <span class="number">1</span> | harry  |  <span class="number">1300.00</span> | 市场部    |</span><br><span class="line">|    <span class="number">2</span> | amy    |  <span class="number">2200.00</span> | 人事部    |</span><br><span class="line">|    <span class="number">3</span> | tom    |   <span class="number">600.00</span> | 财务部    |</span><br><span class="line">|    <span class="number">4</span> | jack   |  <span class="number">3300.00</span> | 市场部    |</span><br><span class="line">|    <span class="number">5</span> | momo   |  <span class="number">1700.00</span> | 市场部    |</span><br><span class="line">|    <span class="number">6</span> | sarsha |  <span class="number">1300.00</span> | 人事部    |</span><br><span class="line">|   <span class="number">88</span> | aaa    | <span class="number">11111.23</span> | 安保      |</span><br><span class="line">|   <span class="number">99</span> | bbb    | <span class="number">22222.22</span> | 运维      |</span><br><span class="line">+<span class="literal">------</span>+<span class="literal">--------</span>+<span class="literal">----------</span>+<span class="literal">-----------</span>+</span><br><span class="line"><span class="number">8</span> rows <span class="keyword">in</span> <span class="built_in">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line">mysql&gt; <span class="built_in">select</span> * from db02.t1;</span><br><span class="line">+<span class="literal">----</span>+<span class="literal">-------</span>+</span><br><span class="line">| id | name  |</span><br><span class="line">+<span class="literal">----</span>+<span class="literal">-------</span>+</span><br><span class="line">|  <span class="number">1</span> | harry |</span><br><span class="line">|  <span class="number">2</span> | jack  |</span><br><span class="line">+<span class="literal">----</span>+<span class="literal">-------</span>+</span><br><span class="line"><span class="number">2</span> rows <span class="keyword">in</span> <span class="built_in">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h5 id="③-备份二进制文件"><a href="#③-备份二进制文件" class="headerlink" title="③ 备份二进制文件"></a>③ 备份二进制文件</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">方法<span class="number">1</span>：直接拷贝物理文件</span><br><span class="line">方法<span class="number">2</span>：备份改变过的数据（SQL）</span><br><span class="line"><span class="comment"># mysqlbinlog --start-position=120 binlog.000005 &gt; /opt/mybinlog.sql</span></span><br></pre></td></tr></table></figure><h5 id="④-故障模拟"><a href="#④-故障模拟" class="headerlink" title="④ 故障模拟"></a>④ 故障模拟</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; drop database db01;</span><br><span class="line">Query OK, <span class="number">7</span> rows affected (<span class="number">0.07</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; drop database db02;</span><br><span class="line">Query OK, <span class="number">3</span> rows affected (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure><h5 id="⑤-全量恢复"><a href="#⑤-全量恢复" class="headerlink" title="⑤ 全量恢复"></a>⑤ 全量恢复</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. 通过刚刚全量备份进行恢复</span><br><span class="line"><span class="comment"># mysql &lt; /tmp/all.sql -p</span></span><br><span class="line"><span class="number">2</span>. 进入数据库查看结果</span><br><span class="line">mysql&gt; <span class="built_in">select</span> * from db01.t1;</span><br><span class="line">+<span class="literal">------</span>+<span class="literal">--------</span>+<span class="literal">---------</span>+<span class="literal">-----------</span>+</span><br><span class="line">| id   | name   | salary  | dept      |</span><br><span class="line">+<span class="literal">------</span>+<span class="literal">--------</span>+<span class="literal">---------</span>+<span class="literal">-----------</span>+</span><br><span class="line">|    <span class="number">1</span> | harry  | <span class="number">1300.00</span> | 市场部    |</span><br><span class="line">|    <span class="number">2</span> | amy    | <span class="number">2200.00</span> | 人事部    |</span><br><span class="line">|    <span class="number">3</span> | tom    |  <span class="number">600.00</span> | 财务部    |</span><br><span class="line">|    <span class="number">4</span> | jack   | <span class="number">3300.00</span> | 市场部    |</span><br><span class="line">|    <span class="number">5</span> | momo   | <span class="number">1700.00</span> | 市场部    |</span><br><span class="line">|    <span class="number">6</span> | sarsha | <span class="number">1300.00</span> | 人事部    |</span><br><span class="line">|    <span class="number">7</span> | xiaom  | <span class="number">4300.00</span> | 市场部    |</span><br><span class="line">+<span class="literal">------</span>+<span class="literal">--------</span>+<span class="literal">---------</span>+<span class="literal">-----------</span>+</span><br><span class="line"><span class="number">7</span> rows <span class="keyword">in</span> <span class="built_in">set</span> (<span class="number">0.01</span> sec)</span><br><span class="line">mysql&gt; <span class="built_in">select</span> * from db02.t1;</span><br><span class="line">+<span class="literal">----</span>+<span class="literal">-------</span>+</span><br><span class="line">| id | name  |</span><br><span class="line">+<span class="literal">----</span>+<span class="literal">-------</span>+</span><br><span class="line">|  <span class="number">1</span> | harry |</span><br><span class="line">|  <span class="number">2</span> | tom   |</span><br><span class="line">+<span class="literal">----</span>+<span class="literal">-------</span>+</span><br><span class="line"><span class="number">2</span> rows <span class="keyword">in</span> <span class="built_in">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line">说明：以上数据不是最新数据</span><br></pre></td></tr></table></figure><h5 id="⑥-二进制日志恢复到最新状态"><a href="#⑥-二进制日志恢复到最新状态" class="headerlink" title="⑥ &#x3D;&#x3D;二进制日志恢复到最新状态&#x3D;&#x3D;"></a>⑥ &#x3D;&#x3D;二进制日志恢复到最新状态&#x3D;&#x3D;</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysqlbinlog --start-position=120 /opt/mybinlog.000002 |mysql -p</span></span><br><span class="line">说明：</span><br><span class="line"><span class="number">1</span>.只有起始位置<span class="literal">--start-position</span>=<span class="number">120</span>说明从<span class="number">120</span>往后所有记录</span><br><span class="line"><span class="number">2</span>.一般SQL语句前面的at xxx代表该语句的position值</span><br><span class="line">mysql&gt; <span class="built_in">select</span> * from db01.t1;</span><br><span class="line">+<span class="literal">------</span>+<span class="literal">--------</span>+<span class="literal">----------</span>+<span class="literal">-----------</span>+</span><br><span class="line">| id   | name   | salary   | dept      |</span><br><span class="line">+<span class="literal">------</span>+<span class="literal">--------</span>+<span class="literal">----------</span>+<span class="literal">-----------</span>+</span><br><span class="line">|    <span class="number">1</span> | harry  |  <span class="number">1300.00</span> | 市场部    |</span><br><span class="line">|    <span class="number">2</span> | amy    |  <span class="number">2200.00</span> | 人事部    |</span><br><span class="line">|    <span class="number">3</span> | tom    |   <span class="number">600.00</span> | 财务部    |</span><br><span class="line">|    <span class="number">4</span> | jack   |  <span class="number">3300.00</span> | 市场部    |</span><br><span class="line">|    <span class="number">5</span> | momo   |  <span class="number">1700.00</span> | 市场部    |</span><br><span class="line">|    <span class="number">6</span> | sarsha |  <span class="number">1300.00</span> | 人事部    |</span><br><span class="line">|   <span class="number">88</span> | aaa    | <span class="number">11111.23</span> | 安保      |</span><br><span class="line">|   <span class="number">99</span> | bbb    | <span class="number">22222.22</span> | 运维      |</span><br><span class="line">+<span class="literal">------</span>+<span class="literal">--------</span>+<span class="literal">----------</span>+<span class="literal">-----------</span>+</span><br></pre></td></tr></table></figure><h4 id="㈢-小结"><a href="#㈢-小结" class="headerlink" title="㈢ 小结"></a>㈢ 小结</h4><ol><li>mysqldump工具只能恢复到&#x3D;&#x3D;备份那一时刻&#x3D;&#x3D;</li><li>通过&#x3D;&#x3D;二进制日志&#x3D;&#x3D;来恢复到最新数据</li><li>二进制日志也可以跳过sql恢复</li><li>二进制日志恢复数据的&#x3D;&#x3D;重点就是找对相应的position值或者时间点&#x3D;&#x3D;</li></ol><h3 id="3、逻辑导入导出（-了解-）"><a href="#3、逻辑导入导出（-了解-）" class="headerlink" title="3、逻辑导入导出（&#x3D;&#x3D;了解&#x3D;&#x3D;）"></a>3、逻辑导入导出（&#x3D;&#x3D;了解&#x3D;&#x3D;）</h3><p>无论是什么存储引擎，以下方式本身是一种数据导出的方法，同时可以用来辅助备份，它可以对一个表的其中一列或者某几列做备份。备份的是&#x3D;&#x3D;数据记录。&#x3D;&#x3D;</p><h4 id="㈠-语法"><a href="#㈠-语法" class="headerlink" title="㈠ 语法"></a>㈠ 语法</h4><p>导出数据：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">select</span>  字段  into outfile <span class="string">&#x27;/path/file&#x27;</span> from table_name; </span><br><span class="line"><span class="built_in">select</span> * into outfile <span class="string">&#x27;/tmp/emp.txt&#x27;</span> from db01.emp;</span><br></pre></td></tr></table></figure><p>恢复数据：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">方法<span class="number">1</span>：</span><br><span class="line">load <span class="keyword">data</span> local infile <span class="string">&#x27;/tmp/emp.txt&#x27;</span>  into  table emp; </span><br><span class="line">说明：该方法要求在编译数据库时要加上<span class="literal">--enable-local-infile</span>参数才可以使用</span><br><span class="line">+<span class="literal">---------------</span>+<span class="literal">-------</span>+</span><br><span class="line">| Variable_name | Value |</span><br><span class="line">+<span class="literal">---------------</span>+<span class="literal">-------</span>+</span><br><span class="line">| local_infile  | ON   |</span><br><span class="line">+<span class="literal">---------------</span>+<span class="literal">-------</span>+</span><br><span class="line">方法<span class="number">2</span>：</span><br><span class="line"><span class="comment"># mysqlimport  dbname /path/file</span></span><br></pre></td></tr></table></figure><h4 id="㈡-举例说明1"><a href="#㈡-举例说明1" class="headerlink" title="㈡ 举例说明1"></a>㈡ 举例说明1</h4><p>把db01库的emp表导出成文本，然后误删掉数据后进行恢复</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> * into outfile <span class="string">&#x27;/tmp/backup/emp.bak&#x27;</span> from emp;</span><br><span class="line">ERROR <span class="number">1290</span> (HY000): The MySQL server is running with the <span class="literal">--secure-file-priv</span> option so it cannot execute this statement</span><br><span class="line">原因：没有给目录授权</span><br><span class="line">解决：修改配置文件加入以下内容，重启数据库</span><br><span class="line">secure_file_priv=/tmp/backup/</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="built_in">select</span> * into outfile <span class="string">&#x27;/tmp/backup/emp.bak&#x27;</span> from emp;</span><br><span class="line">ERROR <span class="number">1</span> (HY000): Can<span class="string">&#x27;t create/write to file &#x27;</span>/tmp/backup/emp.bak<span class="string">&#x27; (Errcode: 13 - Permission denied)</span></span><br><span class="line"><span class="string">原因：mysql用户没有权限在/tmp/backup目录里创建文件</span></span><br><span class="line"><span class="string">解决办法：</span></span><br><span class="line"><span class="string">[root@mysql01 ~]# ll -d /tmp/backup/</span></span><br><span class="line"><span class="string">drwxr-xr-x 2 root root 22 Aug  3 16:35 /tmp/backup/</span></span><br><span class="line"><span class="string">[root@mysql01 ~]# setfacl -m u:mysql:rwx /tmp/backup/</span></span><br></pre></td></tr></table></figure><h4 id="㈢-举例说明2"><a href="#㈢-举例说明2" class="headerlink" title="㈢ 举例说明2"></a>㈢ 举例说明2</h4><p>创建一个表，把你系统里的&#x2F;etc&#x2F;passwd导入到数据库</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. 创建表password</span><br><span class="line">CREATE TABLE `password` (</span><br><span class="line">  `uname` varchar(<span class="number">50</span>) DEFAULT NULL,</span><br><span class="line">  `pass` char(<span class="number">2</span>) DEFAULT NULL,</span><br><span class="line">  `uid` int(<span class="number">11</span>) DEFAULT NULL,</span><br><span class="line">  `gid` int(<span class="number">11</span>) DEFAULT NULL,</span><br><span class="line">  `comment` varchar(<span class="number">60</span>) DEFAULT NULL,</span><br><span class="line">  `home` varchar(<span class="number">50</span>) DEFAULT NULL,</span><br><span class="line">  `shell` varchar(<span class="number">50</span>) DEFAULT NULL</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 </span><br><span class="line"></span><br><span class="line"><span class="number">2</span>. 创建password.txt文件(文件内容必须是\t分割的多列)并导入到数据库</span><br><span class="line">方法一：使用sed或者awk处理成新文本</span><br><span class="line">方法二：直接用mysqlimport指定分隔符</span><br><span class="line"><span class="comment"># mysqlimport db01 --fields-terminated-by=&#x27;:&#x27; --lines-terminated-by=&#x27;\n&#x27; /tmp/mysqlbak/password -p</span></span><br><span class="line"></span><br><span class="line">\n 代表linux系统回车键的行结束符号</span><br><span class="line">windows默认为\r\n</span><br></pre></td></tr></table></figure><h2 id="三、MySQL的物理备份"><a href="#三、MySQL的物理备份" class="headerlink" title="三、MySQL的物理备份"></a>三、MySQL的物理备份</h2><h3 id="1、xtrabackup备份介绍"><a href="#1、xtrabackup备份介绍" class="headerlink" title="1、xtrabackup备份介绍"></a>1、xtrabackup备份介绍</h3><h4 id="㈠-xtrabackup优缺点"><a href="#㈠-xtrabackup优缺点" class="headerlink" title="㈠ xtrabackup优缺点"></a>㈠ xtrabackup优缺点</h4><p><strong>优点：</strong> </p><ol><li>备份过程&#x3D;&#x3D;快速、可靠(&#x3D;&#x3D;因为是物理备份)；</li><li>支持&#x3D;&#x3D;增量备份&#x3D;&#x3D;，更为灵活</li><li>备份过程<strong>不会打断正在执行的事务</strong>；</li><li>能够基于压缩等功能节约磁盘空间和流量；</li><li>自动实现备份检验；</li><li>&#x3D;&#x3D;还原速度快&#x3D;&#x3D;；</li></ol><p><strong>缺点：</strong></p><ol><li>只能对&#x3D;&#x3D;innodb表增量备份&#x3D;&#x3D;，myisam表增量备份时是全备</li><li>innobackupex备份MyISAM表之前要对全库进行加READ LOCK，阻塞写操作，若备份是在从库上进行的话会影响主从同步，造成延迟。对InnoDB表备份不会阻塞读写。</li></ol><h4 id="㈡-xtrabackup备份原理"><a href="#㈡-xtrabackup备份原理" class="headerlink" title="㈡ &#x3D;&#x3D;xtrabackup备份原理&#x3D;&#x3D;"></a>㈡ &#x3D;&#x3D;xtrabackup备份原理&#x3D;&#x3D;</h4><ol><li>innobackupex首先会&#x3D;&#x3D;启动&#x3D;&#x3D;一个&#x3D;&#x3D;xtrabackup_log&#x3D;&#x3D;后台检测的进程，实时检测mysql的&#x3D;&#x3D;redo log&#x3D;&#x3D;的变化，一旦发现redo有新的日志写入，立刻将日志写入到日志文件&#x3D;&#x3D;xtrabackup_log&#x3D;&#x3D;中。</li><li>&#x3D;&#x3D;物理&#x3D;&#x3D;拷贝i&#x3D;&#x3D;nnodb的数据文件和系统表空间文件idbdata1&#x3D;&#x3D;到对应的以默认时间戳为备份目录的地方</li><li>复制结束后，执行&#x3D;&#x3D;flush table with read lock&#x3D;&#x3D;操作进行全库锁表准备备份非InnoDB文件</li><li>物理复制.frm .myd .myi等非InnoDB引擎文件到备份目录</li><li>查看二进制日志的位置</li><li>解锁表unlock tables</li><li>&#x3D;&#x3D;停止&#x3D;&#x3D;xtrabackup_log进程</li></ol><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-26-47-innobackupex%E5%A4%87%E4%BB%BD%E5%8E%9F%E7%90%86%E5%9B%BE-377aef.png" alt="innobackupex备份原理图"></p><p>​图片来自网络</p><h4 id="㈢-xtrabackup备份恢复原理"><a href="#㈢-xtrabackup备份恢复原理" class="headerlink" title="㈢ &#x3D;&#x3D;xtrabackup备份恢复原理&#x3D;&#x3D;"></a>㈢ &#x3D;&#x3D;xtrabackup备份恢复原理&#x3D;&#x3D;</h4><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-26-46-xtrabackup%E6%81%A2%E5%A4%8D%E5%8E%9F%E7%90%86-0f8244.png" alt="xtrabackup恢复原理"></p><p><strong>具体文字描述如下（了解）：</strong></p><ul><li>在InnoDB内部会维护一个redo日志文件，我们也可以叫做事务日志文件。事务日志会存储每一个InnoDB表数据的记录修改。当InnoDB启动时，InnoDB会检查数据文件和事务日志，并执行两个步骤：它应用（前滚）已经提交的事务日志到数据文件，并将修改过但没有提交的数据进行回滚操作。</li><li>xtrabackup在启动时会记住log sequence number（LSN），并且复制所有的数据文件。复制过程需要一些时间，所以这期间如果数据文件有改动，那么将会使数据库处于一个不同的时间点。这时，xtrabackup会运行一个后台进程，用于监视事务日志，并从事务日志复制最新的修改。xtrabackup必须持续的做这个操作，是因为事务日志是会轮转重复的写入，并且事务日志可以被重用。所以xtrabackup自启动开始，就不停的将事务日志中每个数据文件的修改都记录下来。</li><li>上面就是xtrabackup的备份过程。接下来是准备（prepare）过程。在这个过程中，xtrabackup使用之前复制的事务日志，对各个数据文件执行灾难恢复（就像MySQL刚启动时要做的一样）。当这个过程结束后，数据库就可以做恢复还原了。</li><li>以上的过程在xtrabackup的编译二进制程序中实现。程序innobackupex可以允许我们备份MyISAM表和frm文件从而增加了便捷和功能。Innobackupex会启动xtrabackup，直到xtrabackup复制数据文件后，然后执行FLUSH TABLES WITH READ LOCK来阻止新的写入进来并把MyISAM表数据刷到硬盘上，之后复制MyISAM数据文件，最后释放锁。</li><li>备份MyISAM和InnoDB表最终会处于一致，在准备（prepare）过程结束后，InnoDB表数据已经前滚到整个备份结束的点，而不是回滚到xtrabackup刚开始时的点。这个时间点与执行FLUSH TABLES WITH READ LOCK的时间点相同，所以MyISAM表数据与InnoDB表数据是同步的。类似Oracle的recover和restore，InnoDB的prepare过程可以称为recover（恢复），MyISAM的数据复制过程可以称为restore（还原）。 </li><li>&#x3D;&#x3D;Mysql5.7.3以后开启二进制日志需要加上server-id选项，不然报错&#x3D;&#x3D;</li></ul><h3 id="2、xtrabackup全备及恢复"><a href="#2、xtrabackup全备及恢复" class="headerlink" title="2、xtrabackup全备及恢复"></a>2、xtrabackup全备及恢复</h3><h4 id="㈠-实现思路-1"><a href="#㈠-实现思路-1" class="headerlink" title="㈠ 实现思路"></a>㈠ 实现思路</h4><ol><li>innobackupex工具安装</li><li>innobackupex进行全备，备份集&#x3D;&#x3D;不能直接用于恢复&#x3D;&#x3D;</li><li>&#x3D;&#x3D;预备阶段&#x3D;&#x3D;，备份过程中产生的xtrabackup_log&#x3D;&#x3D;应用到全量备份集&#x3D;&#x3D;</li><li>模拟故障（删除数据）</li><li>进行全库恢复</li><li>测试验证</li></ol><h4 id="㈡-实现步骤-1"><a href="#㈡-实现步骤-1" class="headerlink" title="㈡ 实现步骤"></a>㈡ 实现步骤</h4><h5 id="①-安装工具"><a href="#①-安装工具" class="headerlink" title="① 安装工具"></a>① 安装工具</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">db01</span> ~]<span class="comment"># yum -y install libev-4.15-3.el7.x86_64.rpm</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">db01</span> ~]<span class="comment"># yum -y install percona-xtrabackup-24-2.4.7-2.el7.x86_64.rpm</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">db01</span> ~]<span class="comment"># rpm -ql percona-xtrabackup-24</span></span><br><span class="line">/usr/bin/innobackupex</span><br><span class="line">/usr/bin/xbcloud</span><br><span class="line">/usr/bin/xbcloud_osenv</span><br><span class="line">/usr/bin/xbcrypt</span><br><span class="line">/usr/bin/xbstream</span><br><span class="line">/usr/bin/xtrabackup</span><br><span class="line">/usr/share/doc/percona<span class="literal">-xtrabackup-24-2</span>.<span class="number">4.7</span></span><br><span class="line">/usr/share/doc/percona<span class="literal">-xtrabackup-24-2</span>.<span class="number">4.7</span>/COPYING</span><br><span class="line">/usr/share/<span class="built_in">man</span>/man1/innobackupex.<span class="number">1</span>.gz</span><br><span class="line">/usr/share/<span class="built_in">man</span>/man1/xbcrypt.<span class="number">1</span>.gz</span><br><span class="line">/usr/share/<span class="built_in">man</span>/man1/xbstream.<span class="number">1</span>.gz</span><br><span class="line">/usr/share/<span class="built_in">man</span>/man1/xtrabackup.<span class="number">1</span>.gz</span><br></pre></td></tr></table></figure><h5 id="②-全库备份"><a href="#②-全库备份" class="headerlink" title="② 全库备份"></a>② 全库备份</h5><h6 id="1）创建测试表"><a href="#1）创建测试表" class="headerlink" title="1）创建测试表"></a>1）创建测试表</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">create database db02;</span><br><span class="line">use db02</span><br><span class="line">create table t1(id int,name varchar(10)) engine=myisam;</span><br><span class="line">insert into t1 values(1,&#x27;mona&#x27;);</span><br><span class="line">create table t2(id int,name varchar(10)) engine=innodb;</span><br><span class="line">insert into t2 values(2,&#x27;tom&#x27;);</span><br><span class="line">mysql&gt; select * from db02.t1;</span><br><span class="line">+------+------+</span><br><span class="line">| id   | name |</span><br><span class="line">+------+------+</span><br><span class="line">|    1 | mona |</span><br><span class="line">+------+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from db02.t2;</span><br><span class="line">+------+------+</span><br><span class="line">| id   | name |</span><br><span class="line">+------+------+</span><br><span class="line">|    2 | tom  |</span><br><span class="line">+------+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><h6 id="2）创建备份用户并授权"><a href="#2）创建备份用户并授权" class="headerlink" title="2）创建备份用户并授权"></a>2）创建备份用户并授权</h6><p>说明：管理员root用户拥有所有权限，可以省略</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">创建备份用户admin，并授予相应权限</span><br><span class="line">mysql&gt; grant reload,<span class="keyword">process</span>,lock tables,replication client on *.* to <span class="string">&#x27;admin&#x27;</span><span class="string">@&#x27;localhost&#x27; identified by &#x27;123&#x27;;</span></span><br><span class="line"><span class="string">mysql&gt; flush privileges;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">说明：</span></span><br><span class="line"><span class="string">在数据库中需要以下权限：</span></span><br><span class="line"><span class="string">RELOAD和LOCK TABLES权限:为了执行FLUSH TABLES WITH READ LOCK</span></span><br><span class="line"><span class="string">REPLICATION CLIENT权限：为了获取binary log位置</span></span><br><span class="line"><span class="string">PROCESS权限：显示有关在服务器中执行的线程的信息（即有关会话执行的语句的信息），允许使用SHOW ENGINE</span></span><br></pre></td></tr></table></figure><h6 id="3）全库备份"><a href="#3）全库备份" class="headerlink" title="3）全库备份"></a>3）全库备份</h6><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">db01</span> ~]<span class="comment"># innobackupex --user=admin --password=123 /full_xtrabckup</span></span><br><span class="line">说明：备份目录默认会自动创建，也可以手动创建</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">db01</span> ~]<span class="comment"># ll /full_xtrabckup/2019-01-23_22-57-28/</span></span><br><span class="line"></span><br><span class="line">了解相关文件：</span><br><span class="line">xtrabackup_checkpoints：</span><br><span class="line">备份类型（如完全或增量）、备份状态（如是否已经为prepared状态）和LSN(日志序列号)范围信息；每个InnoDB页(通常为<span class="number">16</span>k大小)都会包含一个日志序列号，即LSN。</span><br><span class="line">LSN是整个数据库系统的系统版本号，每个页面相关的LSN能够表明此页面最近是如何发生改变的。</span><br><span class="line">xtrabackup_binlog_info：</span><br><span class="line">mysql服务器当前正在使用的二进制日志文件及至备份这一刻为止二进制日志事件的位置。</span><br><span class="line">xtrabackup_info：</span><br><span class="line">xtrabackup工具在备份时记录的使用工具及数据库信息</span><br><span class="line"><span class="built_in">backup-my</span>.cnf：备份命令用到的配置选项信息</span><br><span class="line">xtrabackup_logfile：xtrabackup记录innodb事物日志的信息</span><br></pre></td></tr></table></figure><h5 id="③-应用日志到备份集-预备"><a href="#③-应用日志到备份集-预备" class="headerlink" title="③ 应用日志到备份集(&#x3D;&#x3D;预备&#x3D;&#x3D;)"></a>③ 应用日志到备份集(&#x3D;&#x3D;预备&#x3D;&#x3D;)</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">--apply-log</span>表示应用日志到备份集</span><br><span class="line">[<span class="type">root</span>@<span class="type">db01</span> ~]<span class="comment"># innobackupex --user=admin --password=123 --apply-log /full_xtrabckup/2019-01-23_22-57-28/</span></span><br><span class="line">说明：</span><br><span class="line">在实现“准备”的过程中，innobackupex通常还可以使用<span class="literal">--use-memory</span>选项来指定其可以使用的内存的大小，默认通常为<span class="number">100</span>M。如果有足够的内存可用，可以多划分一些内存给prepare的过程，以提高其完成速度。</span><br></pre></td></tr></table></figure><h5 id="④-故障模拟-1"><a href="#④-故障模拟-1" class="headerlink" title="④ 故障模拟"></a>④ 故障模拟</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">删除数据目录里的所有文件</span><br><span class="line">[<span class="type">root</span>@<span class="type">db01</span> ~]<span class="comment"># rm -rf /usr/local/mysql/data/*</span></span><br><span class="line">停止mysql服务</span><br><span class="line">[<span class="type">root</span>@<span class="type">db01</span> ~]<span class="comment"># ps -ef|grep mysqld</span></span><br></pre></td></tr></table></figure><h5 id="⑤-数据恢复"><a href="#⑤-数据恢复" class="headerlink" title="⑤ 数据恢复"></a>⑤ 数据恢复</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">--copy-back</span> 表示从备份集拷贝文件到数据目录</span><br><span class="line"><span class="comment"># innobackupex --copy-back /full_xtrabckup/2019-01-23_22-57-28/</span></span><br><span class="line"></span><br><span class="line">说明：</span><br><span class="line"><span class="number">1</span>. innobackupex工具是物理拷贝文件，所以在恢复时不需要连接数据库，这样就不需要初始化数据库并启动服务。</span><br><span class="line"><span class="number">2</span>. 数据目录必须是为空的，innobackupex <span class="literal">--copy-back</span>不会覆盖已存在的文件，除非指定<span class="literal">--force-non-empty-directories</span>参数；</span><br><span class="line"><span class="number">3</span>. 还要注意，还原时需要先关闭服务</span><br><span class="line"></span><br><span class="line">如遇以下错误：</span><br><span class="line">innobackupex version <span class="number">2.4</span>.<span class="number">7</span> based on MySQL server <span class="number">5.7</span>.<span class="number">13</span> Linux (x86_64) (revision id: <span class="number">05</span>f1fcf)</span><br><span class="line">Error: datadir must be specified.</span><br><span class="line"></span><br><span class="line">原因：innobackupex工具不知道数据目录在哪里</span><br><span class="line">解决：指定配置文件位置<span class="literal">--defaults-file</span>=/path/my.cnf</span><br></pre></td></tr></table></figure><p>说明：恢复完毕务必要&#x3D;&#x3D;更改数据文件权限&#x3D;&#x3D;！</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">db01</span> ~]<span class="comment"># chown -R mysql.mysql /usr/local/mysql/data/</span></span><br><span class="line">启动数据库：</span><br><span class="line">[<span class="type">root</span>@<span class="type">db01</span> ~]<span class="comment"># service mysql start         </span></span><br><span class="line">Starting MySQL. SUCCESS! </span><br></pre></td></tr></table></figure><h5 id="⑥-测试验证"><a href="#⑥-测试验证" class="headerlink" title="⑥ 测试验证"></a>⑥ 测试验证</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> * from db02.t1;</span><br><span class="line">+<span class="literal">------</span>+<span class="literal">------</span>+</span><br><span class="line">| id   | name |</span><br><span class="line">+<span class="literal">------</span>+<span class="literal">------</span>+</span><br><span class="line">|    <span class="number">1</span> | mona |</span><br><span class="line">+<span class="literal">------</span>+<span class="literal">------</span>+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> <span class="built_in">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="built_in">select</span> * from db02.t2;</span><br><span class="line">+<span class="literal">------</span>+<span class="literal">------</span>+</span><br><span class="line">| id   | name |</span><br><span class="line">+<span class="literal">------</span>+<span class="literal">------</span>+</span><br><span class="line">|    <span class="number">2</span> | tom  |</span><br><span class="line">+<span class="literal">------</span>+<span class="literal">------</span>+</span><br><span class="line"><span class="number">1</span> row <span class="keyword">in</span> <span class="built_in">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="㈢-小结-1"><a href="#㈢-小结-1" class="headerlink" title="㈢ 小结"></a>㈢ 小结</h4><h3 id="3、xtrabackup增量备份及恢复"><a href="#3、xtrabackup增量备份及恢复" class="headerlink" title="3、xtrabackup增量备份及恢复"></a>3、xtrabackup增量备份及恢复</h3><h4 id="㈠-增备恢复原理"><a href="#㈠-增备恢复原理" class="headerlink" title="㈠ 增备恢复原理"></a>㈠ 增备恢复原理</h4><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-26-42-xtrabackup%E5%A2%9E%E5%A4%87%E6%81%A2%E5%A4%8D%E5%8E%9F%E7%90%86-9ca081.png" alt="xtrabackup增备恢复原理"></p><h4 id="㈡-实现思路"><a href="#㈡-实现思路" class="headerlink" title="㈡ 实现思路"></a>㈡ 实现思路</h4><ol><li>全量备份（&#x3D;&#x3D;增量基于全备&#x3D;&#x3D;）</li><li>应用日志到全量备份集中（预备）</li><li>更改数据</li><li>增量备份</li><li>应用&#x3D;&#x3D;增备的备份集到全量备份集中&#x3D;&#x3D;</li><li>模拟故障</li><li>数据恢复</li><li>测试验证</li></ol><h4 id="㈢-实现步骤"><a href="#㈢-实现步骤" class="headerlink" title="㈢ 实现步骤"></a>㈢ 实现步骤</h4><h5 id="①-xtrabackup全量备份"><a href="#①-xtrabackup全量备份" class="headerlink" title="① xtrabackup全量备份"></a>① xtrabackup全量备份</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">清空环境</span><br><span class="line">[<span class="type">root</span>@<span class="type">db01</span> ~]<span class="comment"># rm -rf /full_xtrabckup/</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">db01</span> ~]<span class="comment"># innobackupex --user=admin --password=123 /full_xtrabckup</span></span><br></pre></td></tr></table></figure><h5 id="②-应用日志到全量备份集"><a href="#②-应用日志到全量备份集" class="headerlink" title="② 应用日志到全量备份集"></a>② 应用日志到全量备份集</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">--apply-log</span>表示应用日志</span><br><span class="line"><span class="literal">--redo-only</span>表示只应用已经提交的事务，不回滚未提交的事务</span><br><span class="line">注意：如果已经回滚了未提交事务，那么就无法再应用增量备份。</span><br><span class="line">[<span class="type">root</span>@<span class="type">db01</span> ~]<span class="comment"># innobackupex --user=admin --password=123 --apply-log --redo-only /full_xtrabckup/2019-01-23_23-59-58/</span></span><br></pre></td></tr></table></figure><h5 id="③-修改数据"><a href="#③-修改数据" class="headerlink" title="③ 修改数据"></a>③ 修改数据</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; insert into db02.t1 values(<span class="number">2</span>,<span class="string">&#x27;harry&#x27;</span>),(<span class="number">3</span>,<span class="string">&#x27;jack&#x27;</span>);</span><br><span class="line">mysql&gt; <span class="built_in">select</span> * from db02.t1;</span><br><span class="line">+<span class="literal">------</span>+<span class="literal">-------</span>+</span><br><span class="line">| id   | name  |</span><br><span class="line">+<span class="literal">------</span>+<span class="literal">-------</span>+</span><br><span class="line">|    <span class="number">1</span> | mona  |</span><br><span class="line">|    <span class="number">2</span> | harry |</span><br><span class="line">|    <span class="number">3</span> | jack  |</span><br><span class="line">+<span class="literal">------</span>+<span class="literal">-------</span>+</span><br></pre></td></tr></table></figure><h5 id="④-xtrabackup增量备份"><a href="#④-xtrabackup增量备份" class="headerlink" title="④ xtrabackup增量备份"></a>④ xtrabackup增量备份</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">innobackupex <span class="literal">--incremental</span> /incre_backup <span class="literal">--incremental-basedir</span>=BASEDIR</span><br><span class="line">说明：</span><br><span class="line"><span class="number">1</span>.BASEDIR指的是完全备份所在的目录;/incre_backup目录中产生以时间命名的目录以存放所有的增量备份数据。</span><br><span class="line"><span class="number">2</span>.在执行过增量备份之后再一次进行增量备份时，其<span class="literal">--incremental-basedir</span>应该指向上一次的增量备份所在的目录。</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">db01</span> ~]<span class="comment"># innobackupex --user=admin --password=123 --incremental /incre_backup --incremental-basedir=/full_xtrabckup/2019-01-23_23-59-58/</span></span><br></pre></td></tr></table></figure><h5 id="⑤-应用增备备份集到全量备份集"><a href="#⑤-应用增备备份集到全量备份集" class="headerlink" title="⑤ 应用增备备份集到全量备份集"></a>⑤ 应用增备备份集到全量备份集</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">innobackupex <span class="literal">--apply-log</span> /全量备份集目录 <span class="literal">--incremental-dir</span>=/增量备份集</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">db01</span> ~]<span class="comment"># innobackupex --user=admin --password=123 --apply-log /full_xtrabckup/2019-01-23_23-59-58/ --incremental-dir=/incre_backup/2019-01-24_00-13-41/</span></span><br><span class="line"></span><br><span class="line">说明：</span><br><span class="line"><span class="number">1</span>.<span class="literal">--redo-only</span>除了最后一个不用加之外，其他的增量应用都要加，最后一个应用的时候可以直接进入回滚未提交事务阶段;如果加了也没事，服务启动的时候会进入recovery过程，来回滚</span><br><span class="line"><span class="number">2</span>.应用增量备份的时候只能按照备份的顺序来应用。如果应用顺序错误，那么备份就不可用。如果无法确定顺序，可以使用xtra<span class="built_in">backup-checkpoints</span>来确定顺序。</span><br></pre></td></tr></table></figure><h5 id="⑥-模拟故障"><a href="#⑥-模拟故障" class="headerlink" title="⑥ 模拟故障"></a>⑥ 模拟故障</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">删除所有数据库文件并停止mysql进程</span><br><span class="line">[<span class="type">root</span>@<span class="type">db01</span> ~]<span class="comment"># rm -rf /usr/local/mysql/data/*</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">db01</span> ~]<span class="comment"># pkill -9 mysqld</span></span><br></pre></td></tr></table></figure><h5 id="⑦-数据恢复"><a href="#⑦-数据恢复" class="headerlink" title="⑦ 数据恢复"></a>⑦ 数据恢复</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">注意：在准备步骤完成后，还原时只需要还原完全备份即可</span><br><span class="line">[<span class="type">root</span>@<span class="type">db01</span> ~]<span class="comment"># innobackupex --user=admin --password=123 --copy-back /full_xtrabckup/2019-01-23_23-59-58/</span></span><br><span class="line">修改数据目录权限</span><br><span class="line">[<span class="type">root</span>@<span class="type">db01</span> ~]<span class="comment"># chown -R mysql. /usr/local/mysql/data/</span></span><br><span class="line">启动数据库</span><br><span class="line">[<span class="type">root</span>@<span class="type">db01</span> ~]<span class="comment"># service mysql start</span></span><br><span class="line">Starting MySQL.Logging to <span class="string">&#x27;/usr/local/mysql/data/mysql3307.err&#x27;</span>.</span><br><span class="line">. SUCCESS!</span><br></pre></td></tr></table></figure><h5 id="⑧-测试验证"><a href="#⑧-测试验证" class="headerlink" title="⑧ 测试验证"></a>⑧ 测试验证</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> * from db02.t1;</span><br><span class="line">+<span class="literal">------</span>+<span class="literal">-------</span>+</span><br><span class="line">| id   | name  |</span><br><span class="line">+<span class="literal">------</span>+<span class="literal">-------</span>+</span><br><span class="line">|    <span class="number">1</span> | mona  |</span><br><span class="line">|    <span class="number">2</span> | harry |</span><br><span class="line">|    <span class="number">3</span> | jack  |</span><br><span class="line">+<span class="literal">------</span>+<span class="literal">-------</span>+</span><br><span class="line"><span class="number">3</span> rows <span class="keyword">in</span> <span class="built_in">set</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure><h2 id="四、MySQL备份经验分享"><a href="#四、MySQL备份经验分享" class="headerlink" title="四、MySQL备份经验分享"></a>四、MySQL备份经验分享</h2><h3 id="1、逻辑备份-mysqldump"><a href="#1、逻辑备份-mysqldump" class="headerlink" title="1、逻辑备份(mysqldump)"></a>1、逻辑备份(mysqldump)</h3><p>​某同学使用mysqldump工具对数据库每天进行备份，有一天数据库有问题需要进行恢复，他发现数据不能恢复到最新状态，原因是因为他只是全库备份数据，没有备份二进制日志文件导致。</p><p>​<strong>所以，大家一定要明白：</strong></p><p>​① mysqldump工具只能恢复到&#x3D;&#x3D;备份那一时刻&#x3D;&#x3D;</p><p>​② 通过&#x3D;&#x3D;二进制日志&#x3D;&#x3D;来恢复到最新数据</p><h3 id="2、物理备份-xtrabackup"><a href="#2、物理备份-xtrabackup" class="headerlink" title="2、物理备份(xtrabackup)"></a>2、物理备份(xtrabackup)</h3><p>​① 如果数据库在第1次增量备份后发生故障，那么数据恢复时只能够使用xtrabackup全量备份加xtrabackup增量备份的时间点，即&#x3D;&#x3D;恢复到第1次增量备份结束的点&#x3D;&#x3D;</p><p>​② 如果要将数据库恢复到最新状态，需要&#x3D;&#x3D;结合binlog日志恢复&#x3D;&#x3D;</p><p>​③ 以上全量和增量的备份集是不能用的，需要将xtrabackup_log(事务日志，在备份过程中数据库的更改)应用到全量的备份集中才有效（应用日志&#x3D;&#x3D;必须按照顺序去应用&#x3D;&#x3D;：全备—&gt;增备1—&gt;增备2…）</p><p>​④ 应用所有日志到全量备份集中时，需注意</p><p>​1) 除了&#x3D;&#x3D;最后一次增量备份&#x3D;&#x3D;应用日志可以不加–redo-only外,其他都要加;只应用已经提交的事务，不回滚未提交的事务!!!</p><p>​2) 应用日志到全量备份集中时一定要&#x3D;&#x3D;严格按照时间顺序执行，否则无效&#x3D;&#x3D;！</p><p>​3) 在恢复数据时，确保数据目录为空；数据库服务是停止状态</p><h1 id="课后实战"><a href="#课后实战" class="headerlink" title="课后实战"></a>课后实战</h1><p>根据任务要求完成MySQL数据库的备份。</p><ol><li>备份策略制定（了解业务|运营）|备份周期（1周）、备份时间点（避开业务高峰）</li><li>备份工具选择（mysqldump |xtrabackup）</li><li>脚本编写</li><li>计划任务执行</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">30</span> <span class="number">01</span> * * <span class="number">0</span>  bash full_backup.sh</span><br><span class="line"><span class="number">30</span> <span class="number">01</span> * * <span class="number">1</span> bash incremental1_backup.sh</span><br><span class="line"><span class="number">30</span> <span class="number">01</span> * * <span class="number">2</span>  bash incremental2_backup.sh</span><br><span class="line"><span class="number">30</span> <span class="number">01</span> * * <span class="number">3</span>  bash full_backup.sh</span><br><span class="line"><span class="number">30</span> <span class="number">01</span> * * <span class="number">4</span>  bash incremental1_backup.sh</span><br><span class="line"><span class="number">30</span> <span class="number">01</span> * * <span class="number">5</span>  bash full_backup.sh</span><br><span class="line"><span class="number">30</span> <span class="number">01</span> * * <span class="number">6</span>  bash incremental1_backup.sh</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"><span class="number">30</span> <span class="number">01</span> * * <span class="number">0</span>,<span class="number">3</span>,<span class="number">5</span>  bash full_backup.sh</span><br><span class="line"><span class="number">30</span> <span class="number">01</span> * * <span class="number">1</span>,<span class="number">4</span>,<span class="number">6</span>  bash incremental1_backup.sh</span><br><span class="line"><span class="number">30</span> <span class="number">01</span> * * <span class="number">2</span>  bash incremental2_backup.sh</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 全栈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维 </tag>
            
            <tag> MYSQL </tag>
            
            <tag> mysql </tag>
            
            <tag> 数据库备份与恢复 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql主从架构</title>
      <link href="/2024/06/25/Mysql%E4%B8%BB%E4%BB%8E%E6%9E%B6%E6%9E%84/"/>
      <url>/2024/06/25/Mysql%E4%B8%BB%E4%BB%8E%E6%9E%B6%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h1 id="任务背景"><a href="#任务背景" class="headerlink" title="任务背景"></a>任务背景</h1><h2 id="一、真实案例"><a href="#一、真实案例" class="headerlink" title="一、真实案例"></a>一、真实案例</h2><p>​某同学刚入职公司，在熟悉公司业务环境的时候，发现他们的数据库架构是一主两从，但是两台从数据库和主库不同步。询问得知，已经好几个月不同步了，但是每天会全库备份主服务器上的数据到从服务器上，由于数据量不是很大，所以一直没有人处理主从不同步的问题。这次正好问到了，于是乎就安排该同学处理一下这个主从不同步的问题。</p><h2 id="二、案例背后核心技术"><a href="#二、案例背后核心技术" class="headerlink" title="二、案例背后核心技术"></a>二、案例背后核心技术</h2><p>1、熟悉MySQL数据库常见的主从架构</p><p>2、理解MySQL主从架构的实现原理</p><p>3、掌握MySQL主从架构的搭建</p><h2 id="三、今日任务场景"><a href="#三、今日任务场景" class="headerlink" title="三、今日任务场景"></a>三、今日任务场景</h2><p>​随着业务量不断增长，公司对数据的安全性越来越重视，由于常规的备份不能够实时记录下数据库的所有状态，为了能够保障数据库的实时备份冗余，希望将现有单机数据库变成双机热备。</p><h1 id="任务要求"><a href="#任务要求" class="headerlink" title="任务要求"></a>任务要求</h1><ul><li><input checked="" disabled="" type="checkbox"> 备份数据库</li><li><input checked="" disabled="" type="checkbox"> 搭建双机热备数据库架构M-S</li></ul><h1 id="课程目标"><a href="#课程目标" class="headerlink" title="课程目标"></a>课程目标</h1><ul><li><input checked="" disabled="" type="checkbox"> 了解什么是MySQL的Replication</li><li><input checked="" disabled="" type="checkbox"> <strong>理解MySQL的Replication的架构原理</strong></li><li><input checked="" disabled="" type="checkbox"> &#x3D;&#x3D;<strong>掌握MySQL的基本复制架构的搭建（M-S重点</strong>&#x3D;&#x3D;）</li><li><input checked="" disabled="" type="checkbox"> 了解和掌握基于GTIDs的复制特点及搭建</li></ul><h1 id="理论储备"><a href="#理论储备" class="headerlink" title="理论储备"></a>理论储备</h1><h2 id="一、MySQL集群概述"><a href="#一、MySQL集群概述" class="headerlink" title="一、MySQL集群概述"></a>一、MySQL集群概述</h2><h3 id="1、集群的主要类型"><a href="#1、集群的主要类型" class="headerlink" title="1、集群的主要类型"></a>1、集群的主要类型</h3><ul><li>高可用集群（High Available Cluster，HA）</li><li>高可用集群是指通过<strong>特殊的软件</strong>把独立的服务器连接起来，组成一个能够<strong>提供故障切换</strong>（Fail Over）功能的集群</li></ul><h3 id="2、如何衡量高可用"><a href="#2、如何衡量高可用" class="headerlink" title="2、如何衡量高可用"></a>2、如何衡量高可用</h3><table><thead><tr><th>可用性级别(指标)</th><th>年度宕机时间</th><th>描述</th><th>叫法</th></tr></thead><tbody><tr><td>99%</td><td>3.65天&#x2F;年</td><td>基本可用系统</td><td>2个9</td></tr><tr><td>99.9%</td><td>8.76小时&#x2F;年</td><td>可用系统</td><td>3个9</td></tr><tr><td>99.99%</td><td>52.6分钟&#x2F;年</td><td>高可用系统</td><td>4个9</td></tr><tr><td>99.999%</td><td>5.3分钟&#x2F;年</td><td>抗故障系统</td><td>5个9</td></tr><tr><td>99.9999%</td><td>32秒&#x2F;年</td><td>容错系统</td><td>6个9</td></tr></tbody></table><p><strong>计算方法：</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>年 = <span class="number">365</span>天 = <span class="number">8760</span>小时</span><br><span class="line"><span class="number">99</span>% = <span class="number">8760</span> * <span class="number">1</span>% = <span class="number">8760</span> * <span class="number">0.01</span> = <span class="number">87.6</span>小时=<span class="number">3.65</span>天</span><br><span class="line"><span class="number">99.9</span> = <span class="number">8760</span> * <span class="number">0.1</span>% = <span class="number">8760</span> * <span class="number">0.001</span> = <span class="number">8.76</span>小时</span><br><span class="line"><span class="number">99.99</span> = <span class="number">8760</span> * <span class="number">0.0001</span> = <span class="number">0.876</span>小时 = <span class="number">0.876</span> * <span class="number">60</span> = <span class="number">52.6</span>分钟</span><br><span class="line"><span class="number">99.999</span> = <span class="number">8760</span> * <span class="number">0.00001</span> = <span class="number">0.0876</span>小时 = <span class="number">0.0876</span> * <span class="number">60</span> = <span class="number">5.26</span>分钟</span><br></pre></td></tr></table></figure><h3 id="3、常用的集群架构"><a href="#3、常用的集群架构" class="headerlink" title="3、常用的集群架构"></a>3、常用的集群架构</h3><ul><li>&#x3D;&#x3D;<strong>MySQL Replication</strong>&#x3D;&#x3D;</li><li>MySQL Cluster</li><li>MySQL Group Replication （MGR）   5.7.17</li><li>MariaDB Galera Cluster </li><li>&#x3D;&#x3D;MHA&#x3D;&#x3D;|Keepalived|HeartBeat|Lvs，Haproxy等技术构建高可用集群</li></ul><h2 id="二、MySQL复制简介"><a href="#二、MySQL复制简介" class="headerlink" title="二、MySQL复制简介"></a>二、MySQL复制简介</h2><h3 id="1、什么是MySQL复制"><a href="#1、什么是MySQL复制" class="headerlink" title="1、什么是MySQL复制"></a>1、什么是MySQL复制</h3><ul><li>Replication可以实现将数据从一台数据库服务器（master）复制到一台到多台数据库服务器(slave)</li><li>默认情况下，属于<strong>异步</strong>复制，所以无需维持长连接</li></ul><h3 id="2、-MySQL复制原理"><a href="#2、-MySQL复制原理" class="headerlink" title="2、 MySQL复制原理"></a>2、 MySQL复制原理</h3><p>简单来说，master将数据库的改变写入**&#x3D;&#x3D;二进制日志&#x3D;&#x3D;<strong>，slave同步这些二进制日志，并根据这些二进制日志进行</strong>&#x3D;&#x3D;数据重演操作&#x3D;&#x3D;**，实现数据异步同步。</p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-16-51-mysql%E5%A4%8D%E5%88%B6%E5%8E%9F%E7%90%86-e4a7f7.png" alt="mysql复制原理"></p><p><strong>详细描述：</strong></p><ol><li>slave端的IO线程发送请求给master端的binlog dump线程</li><li>master端binlog dump线程&#x3D;&#x3D;获取二进制日志&#x3D;&#x3D;信息(&#x3D;&#x3D;文件名和位置信息&#x3D;&#x3D;)发送给slave端的IO线程</li><li>salve端IO线程获取到的内容&#x3D;&#x3D;依次&#x3D;&#x3D;写到slave端relay log里，并把master端的bin-log文件名和位置记录到master.info里</li><li>salve端的SQL线程，检测到relay  log中内容更新，就会解析relay log里更新的内容，并&#x3D;&#x3D;执行这些操作&#x3D;&#x3D;，从而达到和master数据一致</li></ol><h3 id="3、MySQL复制架构"><a href="#3、MySQL复制架构" class="headerlink" title="3、MySQL复制架构"></a>3、MySQL复制架构</h3><h4 id="㈠-双机热备（AB复制）"><a href="#㈠-双机热备（AB复制）" class="headerlink" title="㈠  双机热备（AB复制）"></a>㈠  双机热备（AB复制）</h4><p> <img src="/%5B/M-S%E7%AE%80%E5%9B%BE.png%5D(https:/cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-21-32-M-S%E7%AE%80%E5%9B%BE-6bf309.png)" alt="M-S简图"></p><p><strong>默认情况下，master接受读写请求，slave只接受读请求以减轻master的压力。</strong></p><h4 id="㈡-级联复制"><a href="#㈡-级联复制" class="headerlink" title="㈡  级联复制"></a>㈡  级联复制</h4><p> <img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-16-52-m-s1-s2%E7%AE%80%E5%9B%BE-e64920.png" alt="m-s1-s2简图"></p><p><strong>优点：</strong>进一步分担读压力</p><p><strong>缺点：</strong>slave1 出现故障，后面的所有级联slave服务器都会同步失败</p><h4 id="㈢-并联复制"><a href="#㈢-并联复制" class="headerlink" title="㈢ 并联复制"></a>㈢ 并联复制</h4><p> <img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-17-21-m-s-s%E5%B9%B6%E8%81%94%E5%A4%8D%E5%88%B6-747c0c.png" alt="m-s-s并联复制"></p><p><strong>优点：</strong>解决上面的slave1的单点故障，同时也分担读压力</p><p><strong>缺点：</strong>间接增加master的压力（传输二进制日志压力）</p><h4 id="㈣-双主复制"><a href="#㈣-双主复制" class="headerlink" title="㈣ 双主复制"></a>㈣ 双主复制</h4><p> <img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-17-19-m-m-5f01e1.png" alt="m-m"></p><p><strong>特点：</strong></p><p>从命名来看，两台master好像都能接受读、写请求，但实际上，往往运作的过程中，同一时刻只有其中一台master会接受写请求，另外一台接受读请求。</p><h2 id="三、MySQL复制搭建"><a href="#三、MySQL复制搭建" class="headerlink" title="三、MySQL复制搭建"></a>三、MySQL复制搭建</h2><h3 id="1、传统AB复制架构-M-S"><a href="#1、传统AB复制架构-M-S" class="headerlink" title="1、传统AB复制架构(M-S)"></a>1、传统AB复制架构(M-S)</h3><p><strong>说明</strong>：当前环境中master上已有mysql数据库，版本为5.7.31</p><h4 id="㈠-环境说明"><a href="#㈠-环境说明" class="headerlink" title="㈠ 环境说明"></a>㈠ 环境说明</h4><table><thead><tr><th>IP</th><th>主机名</th><th>角色</th></tr></thead><tbody><tr><td>10.1.1.10</td><td>db01.heima.cc  别名:master</td><td>master(主)</td></tr><tr><td>10.1.1.20</td><td>db02.heima.cc  别名:slave</td><td>salve(从)</td></tr></tbody></table><h4 id="㈡-安装前环境准备"><a href="#㈡-安装前环境准备" class="headerlink" title="㈡ 安装前环境准备"></a>㈡ 安装前环境准备</h4><p>1、关闭防火墙和selinux</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl stop firewalld</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl <span class="built_in">disable</span> firewalld</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl list-unit-files|grep firewalld</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">setenforce 0</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">sed -i <span class="string">&#x27;/^SELINUX=/cSELINUX=disabled&#x27;</span> /etc/selinux/config</span></span><br></pre></td></tr></table></figure><p>2、修改主机名</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">master上</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">hostnamectl set-hostname db01.heima.cc</span></span><br><span class="line">slave上</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">hostnamectl set-hostname db02.heima.cc</span></span><br></pre></td></tr></table></figure><p>3、绑定IP地址和主机名到hosts文件</p><p>说明：主从两台服务器一起完成</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat /etc/hosts</span></span><br><span class="line">追加以下内容</span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.10</span> db01.heima.cc master</span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.20</span> db02.heima.cc slave</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>4、同步系统时间</p><p>说明：保证两台服务器系统时间一致即可</p><h4 id="㈢-搭建主从复制思路"><a href="#㈢-搭建主从复制思路" class="headerlink" title="㈢ 搭建主从复制思路"></a>㈢ 搭建主从复制思路</h4><ol><li>slave必须安装相同版本的mysql数据库软件</li><li>master端必须开启&#x3D;&#x3D;二进制日志&#x3D;&#x3D;；slave端必须开启&#x3D;&#x3D;relay log日志&#x3D;&#x3D;</li><li>master端和slave端的server-id号&#x3D;&#x3D;不能一致&#x3D;&#x3D;</li><li>slave端配置向master来同步数据<ul><li>master端必须创建一个复制用户</li><li>保证master和slave端&#x3D;&#x3D;初始数据一致&#x3D;&#x3D;</li><li>配置主从复制（slave端）</li></ul></li></ol><h4 id="㈣-主从搭建步骤"><a href="#㈣-主从搭建步骤" class="headerlink" title="㈣ 主从搭建步骤"></a>㈣ 主从搭建步骤</h4><h5 id="①-Slave安装MySQL软件"><a href="#①-Slave安装MySQL软件" class="headerlink" title="① Slave安装MySQL软件"></a>① Slave安装MySQL软件</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># useradd -r -s /sbin/nologin mysql</span></span><br><span class="line"><span class="comment"># tar -xf mysql-5.7.31-linux-glibc2.12-x86_64.tar.gz</span></span><br><span class="line"><span class="comment"># mv mysql-5.7.31-linux-glibc2.12-x86_64 /usr/local/mysql</span></span><br><span class="line"><span class="comment"># echo &quot;export PATH=$PATH:/usr/local/mysql/bin&quot; &gt;&gt; /etc/profile</span></span><br><span class="line"><span class="comment"># source /etc/profile</span></span><br><span class="line"><span class="comment"># cd /usr/local/mysql</span></span><br><span class="line"><span class="comment"># cp support-files/mysql.server /etc/init.d/mysql</span></span><br><span class="line"></span><br><span class="line">注意：</span><br><span class="line">暂时不需要初始化数据库文件，只是安装好了和master相同版本的mysql数据库软件；后面向master来同步所有数据。</span><br></pre></td></tr></table></figure><h5 id="②-修改主从配置文件"><a href="#②-修改主从配置文件" class="headerlink" title="② 修改主从配置文件"></a>② 修改主从配置文件</h5><p>注意：master和slave都要修改！</p><ul><li>Master服务器配置文件</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">db01</span> ~]<span class="comment"># cat /etc/my.cnf</span></span><br><span class="line">[<span class="type">mysqld</span>]</span><br><span class="line">basedir=/usr/local/mysql</span><br><span class="line">datadir=/usr/local/mysql/<span class="keyword">data</span></span><br><span class="line">socket=/usr/local/mysql/mysql.sock</span><br><span class="line">port=<span class="number">3310</span></span><br><span class="line">log<span class="literal">-error</span>=/usr/local/mysql/db01<span class="literal">-master</span>.err</span><br><span class="line">log<span class="literal">-bin</span>=/usr/local/mysql/<span class="keyword">data</span>/binlog</span><br><span class="line">server<span class="literal">-id</span>=<span class="number">10</span></span><br><span class="line">character_set_server=utf8mb4</span><br></pre></td></tr></table></figure><ul><li>Slave服务器配置文件</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">db02</span> ~]<span class="comment"># cat /etc/my.cnf</span></span><br><span class="line">[<span class="type">mysqld</span>]</span><br><span class="line">basedir=/usr/local/mysql</span><br><span class="line">datadir=/usr/local/mysql/<span class="keyword">data</span></span><br><span class="line">socket=/usr/local/mysql/mysql.sock</span><br><span class="line">port=<span class="number">3320</span></span><br><span class="line">log<span class="literal">-error</span>=/usr/local/mysql/db02<span class="literal">-slave</span>.err</span><br><span class="line">relay<span class="literal">-log</span>=/usr/local/mysql/<span class="keyword">data</span>/relaylog</span><br><span class="line">server<span class="literal">-id</span>=<span class="number">20</span></span><br><span class="line">character_set_server=utf8mb4</span><br></pre></td></tr></table></figure><h5 id="③-同步master数据到slave"><a href="#③-同步master数据到slave" class="headerlink" title="③ 同步master数据到slave"></a>③ 同步master数据到slave</h5><p>1）停止master上的mysql服务</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># service mysql stop</span></span><br></pre></td></tr></table></figure><p>2）&#x3D;&#x3D;删除master上auto.cnf文件&#x3D;&#x3D;</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">db01</span> <span class="type">data</span>]<span class="comment"># pwd</span></span><br><span class="line">/usr/local/mysql/<span class="keyword">data</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">db01</span> <span class="type">data</span>]<span class="comment"># rm -f auto.cnf</span></span><br><span class="line">说明：auto.cnf文件里保存的是每个数据库实例的UUID信息，代表数据库的唯一标识</span><br></pre></td></tr></table></figure><p>3）同步master数据到slave</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">db01</span> ~]<span class="comment"># rsync -av /usr/local/mysql/data 10.1.1.20:/usr/local/mysql/</span></span><br></pre></td></tr></table></figure><p>4）启动master和slave数据库</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">db02</span> ~]<span class="comment"># service mysql start</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">db01</span> ~]<span class="comment"># service mysql start</span></span><br></pre></td></tr></table></figure><h5 id="④-配置slave同步master数据"><a href="#④-配置slave同步master数据" class="headerlink" title="④ 配置slave同步master数据"></a>④ 配置slave同步master数据</h5><p>1）&#x3D;&#x3D;master&#x3D;&#x3D;端创建授权用户</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create user <span class="string">&#x27;slave&#x27;</span><span class="string">@&#x27;10.1.1.%&#x27; identified by &#x27;123&#x27;;</span></span><br><span class="line"><span class="string">Query OK, 0 rows affected (0.00 sec)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">mysql&gt; grant replication slave on *.* to &#x27;slave&#x27;@&#x27;10.1.1.%&#x27;;</span></span><br><span class="line"><span class="string">Query OK, 0 rows affected (0.00 sec)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">mysql&gt; flush privileges;</span></span><br><span class="line"><span class="string">Query OK, 0 rows affected (0.00 sec)</span></span><br></pre></td></tr></table></figure><p>2）查看&#x3D;&#x3D;master&#x3D;&#x3D;上正在写的二进制文件名和位置</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">先加锁，防止两边数据不一致</span><br><span class="line">mysql&gt; flush tables with read lock;</span><br><span class="line">查看当前数据库的二进制日志写到什么位置（只有打开二进制日志，这句命令才有结果）</span><br><span class="line">mysql&gt; show master status;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-17-30-%E9%85%8D%E7%BD%AE%E4%B8%BB%E4%BB%8E1-e8f97e.png" alt="配置主从1"></p><p>3）&#x3D;&#x3D;slave&#x3D;&#x3D;上配置同步信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; change master to</span><br><span class="line">    -&gt; master_host=<span class="string">&#x27;10.1.1.10&#x27;</span>,</span><br><span class="line">    -&gt; master_user=<span class="string">&#x27;slave&#x27;</span>,</span><br><span class="line">    -&gt; master_password=<span class="string">&#x27;123&#x27;</span>,</span><br><span class="line">    -&gt; master_port=<span class="number">3310</span>,</span><br><span class="line">    -&gt; master_log_file=<span class="string">&#x27;binlog.000002&#x27;</span>,</span><br><span class="line">    -&gt; master_log_pos=<span class="number">1218</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">说明：</span><br><span class="line">master_host   master的IP</span><br><span class="line">master_user  复制的用户</span><br><span class="line">master_password  复制用户密码</span><br><span class="line">master_portmaster的端口号</span><br><span class="line">master_log_filemaster正在写的二进制文件名，锁表后查看的</span><br><span class="line">master_log_pos    master正在写的二进制位置</span><br></pre></td></tr></table></figure><p>4）启动复制线程，开始同步</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">start</span> slave;</span><br><span class="line">mysql&gt; show slave status\G;</span><br><span class="line">.....</span><br><span class="line">            Slave_IO_Running: Yes 代表成功连接到master并且下载日志</span><br><span class="line">            Slave_SQL_Running: Yes 代表成功执行日志中的SQL语句</span><br><span class="line">启动slave报如下错误：</span><br><span class="line">mysql&gt; <span class="built_in">start</span> slave;</span><br><span class="line">ERROR <span class="number">1872</span> (HY000): Slave failed to initialize relay log info structure from the repository</span><br><span class="line">解决：删除relay<span class="literal">-log</span>.info，重启mysql服务或者mysql&gt;reset slave;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-17-13-%E9%85%8D%E7%BD%AE%E4%B8%BB%E4%BB%8E2-3698b0.png" alt="配置主从2"></p><p>5）master上解锁</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; unlock tables;</span><br><span class="line">Query OK, <span class="number">0</span> rows affected (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>6）测试验证</p><h5 id="⑤-主从配置总结"><a href="#⑤-主从配置总结" class="headerlink" title="⑤ 主从配置总结"></a>⑤ 主从配置总结</h5><ol><li>主从复制必须保证两台数据库实例的&#x3D;&#x3D;server-id不一致&#x3D;&#x3D;</li><li>主服务器&#x3D;&#x3D;必须开启二进制日志&#x3D;&#x3D;；从服务器&#x3D;&#x3D;必须开启中继日志&#x3D;&#x3D;</li><li>主从复制搭建&#x3D;&#x3D;必须保证初始数据一致&#x3D;&#x3D;</li><li>主服务器必须要给从服务器&#x3D;&#x3D;创建一个复制用户，并授予复制权限&#x3D;&#x3D;</li><li>Master—&gt;Slave架构，&#x3D;&#x3D;主写会同步到从&#x3D;&#x3D;；而&#x3D;&#x3D;从写不会同步到主&#x3D;&#x3D;</li></ol><h5 id="⑥-数据不一致导致同步失效"><a href="#⑥-数据不一致导致同步失效" class="headerlink" title="⑥ 数据不一致导致同步失效"></a>⑥ 数据不一致导致同步失效</h5><p>问：</p><p>如果由于人为操作或者其他原因直接将数据更改到从服务器导致数据同步失效，怎么解决？</p><p>答：可以通过变量<code>sql_slave_skip_counter</code>临时跳过事务进行处理</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">SET</span> GLOBAL sql_slave_skip_counter = N  N代表跳过N个事务</span><br><span class="line">举例说明：</span><br><span class="line">mysql&gt; <span class="built_in">SET</span> GLOBAL sql_slave_skip_counter=<span class="number">1</span>;</span><br><span class="line">mysql&gt; stop slave;</span><br><span class="line">mysql&gt; <span class="built_in">start</span> slave;</span><br><span class="line">注意：</span><br><span class="line"><span class="number">1</span>. 跳过事务应该在slave上进行</span><br><span class="line"><span class="number">2</span>. 传统的AB复制方式可以使用变量：sql_slave_skip_counter，基于GTIDs的方式不支持</span><br></pre></td></tr></table></figure><h3 id="2、基于GTIDs的AB复制架构-M-S"><a href="#2、基于GTIDs的AB复制架构-M-S" class="headerlink" title="2、基于GTIDs的AB复制架构(M-S)"></a>2、基于GTIDs的AB复制架构(M-S)</h3><h4 id="㈠-关于GTIDs概述"><a href="#㈠-关于GTIDs概述" class="headerlink" title="㈠ 关于GTIDs概述"></a>㈠ 关于GTIDs概述</h4><ul><li><strong>什么是GTIDs以及有什么特点？</strong></li></ul><ol><li><p>GTIDs（Global transaction identifiers）&#x3D;&#x3D;全局事务标识符&#x3D;&#x3D;，是mysql 5.6新加入的一项技术</p></li><li><p>当使用GTIDs时，每一个事务都可以被&#x3D;&#x3D;识别并且跟踪&#x3D;&#x3D; </p></li><li><p>添加新的slave或者当发生故障需要将master身份或者角色迁移到slave上时，都无需考虑是哪一个二进制日志以及哪个position值，&#x3D;&#x3D;极大简化了相关操作&#x3D;&#x3D;</p></li><li><p>GTIDs是完全基于事务的，因此&#x3D;&#x3D;不支持MYISAM存储引擎&#x3D;&#x3D; </p></li><li><p>&#x3D;&#x3D;GTID由source_id和transaction_id组成&#x3D;&#x3D;： </p><p>1）source_id来自于server_uuid,可以在auto.cnf中看到</p><p>2）transation_id是一个序列数字，自动生成.</p></li></ol><ul><li><strong>使用GTIDs的限制条件有哪些？</strong></li></ul><ol><li>不支持非事务引擎（MyISAM），因为可能会导致多个gtid分配给同一个事务</li><li>create table … select 语句不支持（主库语法报错）</li><li>create&#x2F;drop <strong>temporary table</strong> 语句不支持</li><li>必须使用enforce-gtid-consistency参数 </li><li>sql-slave-skip-counter不支持(传统的跳过错误方式) </li><li>GTID复制环境中必须要求统一开启和GTID或者关闭GTID </li><li>在mysql 5.6.7之前，使用&#x3D;&#x3D;mysql_upgrade&#x3D;&#x3D;命令会出现问题</li></ol><h4 id="㈡-基于GTIDs的配置"><a href="#㈡-基于GTIDs的配置" class="headerlink" title="㈡ 基于GTIDs的配置"></a>㈡ 基于GTIDs的配置</h4><p>在生产环境中，大多数情况下使用的MySQL5.6基本上都是从5.5或者更低的版本升级而来，这就意味着之前的mysql replication方案是基于传统的方式部署，并且已经在运行，因此，接下来我们就利用已有的环境升级至基于GITDs的Replication</p><h5 id="〇-思路"><a href="#〇-思路" class="headerlink" title="〇 思路"></a>〇 思路</h5><ol><li>修改配置文件支持GTIDs  (主+从)</li><li>重启数据库  (主+从)</li><li>为了保证数据一致性，master和slave设置为只读模式 (主+从)</li><li>&#x3D;&#x3D;从服务器上重新配置同步&#x3D;&#x3D; （从）</li></ol><h5 id="①-修改配置文件支持GTIDs"><a href="#①-修改配置文件支持GTIDs" class="headerlink" title="① 修改配置文件支持GTIDs"></a>① 修改配置文件支持GTIDs</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">db01</span> ~]<span class="comment"># cat /etc/my.cnf</span></span><br><span class="line">[<span class="type">mysqld</span>]</span><br><span class="line">basedir=/usr/local/mysql</span><br><span class="line">datadir=/usr/local/mysql/<span class="keyword">data</span></span><br><span class="line">socket=/usr/local/mysql/mysql.sock</span><br><span class="line">port=<span class="number">3310</span></span><br><span class="line">log<span class="literal">-error</span>=/usr/local/mysql/db01<span class="literal">-master</span>.err</span><br><span class="line">log<span class="literal">-bin</span>=/usr/local/mysql/<span class="keyword">data</span>/binlog</span><br><span class="line">server<span class="literal">-id</span>=<span class="number">10</span></span><br><span class="line">character_set_server=utf8mb4</span><br><span class="line">gtid<span class="literal">-mode</span>=on</span><br><span class="line">log<span class="literal">-slave-updates</span>=<span class="number">1</span></span><br><span class="line">enforce<span class="literal">-gtid-consistency</span></span><br><span class="line"></span><br><span class="line">[<span class="type">client</span>]</span><br><span class="line">socket=/usr/local/mysql/mysql.sock</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">db02</span> ~]<span class="comment"># cat /etc/my.cnf</span></span><br><span class="line">[<span class="type">mysqld</span>]</span><br><span class="line">basedir=/usr/local/mysql</span><br><span class="line">datadir=/usr/local/mysql/<span class="keyword">data</span></span><br><span class="line">socket=/usr/local/mysql/mysql.sock</span><br><span class="line">port=<span class="number">3320</span></span><br><span class="line">log<span class="literal">-error</span>=/usr/local/mysql/db02<span class="literal">-slave</span>.err</span><br><span class="line">relay<span class="literal">-log</span>=/usr/local/mysql/<span class="keyword">data</span>/relaylog</span><br><span class="line">server<span class="literal">-id</span>=<span class="number">20</span></span><br><span class="line">character_set_server=utf8mb4</span><br><span class="line">log<span class="literal">-slave-updates</span>=<span class="number">1</span></span><br><span class="line">gtid<span class="literal">-mode</span>=on</span><br><span class="line">enforce<span class="literal">-gtid-consistency</span></span><br><span class="line"><span class="built_in">skip-slave</span><span class="literal">-start</span></span><br><span class="line"></span><br><span class="line">[<span class="type">client</span>]</span><br><span class="line">socket=/usr/local/mysql/mysql.sock</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">说明：</span><br><span class="line"><span class="number">1</span>）开启GITDs需要在master和slave上都配置gtid<span class="literal">-mode</span>，log<span class="literal">-bin</span>，log<span class="literal">-slave-updates</span>，enforce<span class="literal">-gtid-consistency</span>（该参数在<span class="number">5.6</span>.<span class="number">9</span>之前是<span class="literal">--disable-gtid-unsafe-statement</span>）</span><br><span class="line"><span class="number">2</span>）其次，slave还需要增加<span class="built_in">skip-slave</span><span class="literal">-start</span>参数,目的是启动的时候，先不要把slave起来，需要做一些配置</span><br><span class="line"><span class="number">3</span>）基于GTIDs复制从服务器必须开启二进制日志！</span><br></pre></td></tr></table></figure><h5 id="②-重起主从数据库服务"><a href="#②-重起主从数据库服务" class="headerlink" title="② 重起主从数据库服务"></a>② 重起主从数据库服务</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">db01</span> ~]<span class="comment"># service mysql restart</span></span><br><span class="line">Shutting down MySQL............ SUCCESS!</span><br><span class="line">Starting MySQL.. SUCCESS!</span><br><span class="line">[<span class="type">root</span>@<span class="type">db02</span> ~]<span class="comment"># service mysql restart</span></span><br><span class="line">Shutting down MySQL.... SUCCESS!</span><br><span class="line">Starting MySQL.. SUCCESS! </span><br></pre></td></tr></table></figure><h5 id="③-主从设置只读模式"><a href="#③-主从设置只读模式" class="headerlink" title="③ 主从设置只读模式"></a>③ 主从设置只读模式</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">set</span> <span class="selector-tag">@</span>@global.read_only=ON;</span><br></pre></td></tr></table></figure><h5 id="④-slave重新配置同步"><a href="#④-slave重新配置同步" class="headerlink" title="④ slave重新配置同步"></a>④ slave重新配置同步</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; change master to master_host=<span class="string">&#x27;10.1.1.10&#x27;</span>,master_user=<span class="string">&#x27;slave&#x27;</span>,master_password=<span class="string">&#x27;123&#x27;</span>,master_port=<span class="number">3310</span>,master_auto_position=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">注意：</span><br><span class="line"><span class="number">1</span>.确保有复制用户</span><br><span class="line"><span class="number">2</span>.主要区别于传统复制的参数是：master_auto_position=<span class="number">1</span></span><br></pre></td></tr></table></figure><h5 id="⑤-slave上启动同步线程"><a href="#⑤-slave上启动同步线程" class="headerlink" title="⑤ slave上启动同步线程"></a>⑤ slave上启动同步线程</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">start</span> slave;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-17-08-%E9%85%8D%E7%BD%AE%E4%B8%BB%E4%BB%8E3-2f5f3f.png" alt="配置主从3"></p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-17-10-%E9%85%8D%E7%BD%AE%E4%B8%BB%E4%BB%8E4-bce8f0.png" alt="配置主从4"></p><h5 id="⑥-关闭master只读模式"><a href="#⑥-关闭master只读模式" class="headerlink" title="⑥ 关闭master只读模式"></a>⑥ 关闭master只读模式</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">set</span> <span class="selector-tag">@</span>@global.read_only=OFF;</span><br></pre></td></tr></table></figure><h5 id="⑦-测试验证"><a href="#⑦-测试验证" class="headerlink" title="⑦ 测试验证"></a>⑦ 测试验证</h5><h4 id="㈢-基于GTIDs手动跳过事务"><a href="#㈢-基于GTIDs手动跳过事务" class="headerlink" title="㈢ 基于GTIDs手动跳过事务"></a>㈢ 基于GTIDs手动跳过事务</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">指定需要跳过的GTIDs编号</span><br><span class="line"><span class="built_in">SET</span> GTID_NEXT=<span class="string">&#x27;aaa-bbb-ccc-ddd:N&#x27;</span>;</span><br><span class="line">开始一个空事务</span><br><span class="line"><span class="keyword">BEGIN</span>;</span><br><span class="line">COMMIT;</span><br><span class="line">使用下一个自动生成的全局事务ID。</span><br><span class="line"><span class="built_in">SET</span> GTID_NEXT=<span class="string">&#x27;AUTOMATIC&#x27;</span>;</span><br><span class="line"></span><br><span class="line">举例说明：</span><br><span class="line">mysql&gt; stop slave;</span><br><span class="line">mysql&gt; <span class="built_in">SET</span> <span class="selector-tag">@</span>@SESSION.GTID_NEXT= <span class="string">&#x27;044e6392-cf9b-11e8-a748-000c294ca304:3&#x27;</span>;</span><br><span class="line">mysql&gt; <span class="keyword">BEGIN</span>;</span><br><span class="line">mysql&gt; commit;</span><br><span class="line">mysql&gt; <span class="built_in">SET</span> <span class="selector-tag">@</span>@SESSION.GTID_NEXT= <span class="string">&#x27;AUTOMATIC&#x27;</span>;</span><br><span class="line">mysql&gt; <span class="built_in">start</span> slave;</span><br><span class="line">mysql&gt; show slave status\G</span><br><span class="line"></span><br><span class="line">说明：需要跳过哪个事务，需要手动查看relaylog文件得到</span><br><span class="line">[<span class="type">root</span>@<span class="type">slave1</span> <span class="type">data</span>]<span class="comment"># ../bin/mysqlbinlog relay.000003|less</span></span><br><span class="line">。。。。</span><br><span class="line"><span class="comment"># at 756</span></span><br><span class="line"><span class="comment">#181015 12:04:45 server id 10  end_log_pos 817 CRC32 0x5374f49e         GTID [commit=yes]</span></span><br><span class="line"><span class="built_in">SET</span> <span class="selector-tag">@</span>@SESSION.GTID_NEXT= <span class="string">&#x27;044e6392-cf9b-11e8-a748-000c294ca304:3&#x27;</span>/*!*/;</span><br></pre></td></tr></table></figure><h3 id="3、其他复制架构"><a href="#3、其他复制架构" class="headerlink" title="3、其他复制架构"></a>3、其他复制架构</h3><h4 id="㈠-M-S1-S2"><a href="#㈠-M-S1-S2" class="headerlink" title="㈠ M-S1-S2"></a>㈠ M-S1-S2</h4><p><strong>核心：</strong></p><ol><li>中间&#x3D;&#x3D;slave1&#x3D;&#x3D;机器打开<code>log-slave-updates=1</code>参数，将master上的二进制日志同事保存到自己的二进制日志中，以便其他从服务器来同步</li><li>其他配置和M-S架构一样</li><li>测试验证<ul><li>master上更新数据，slave1和slave2都可以同步</li><li>关闭slave1，再次更新master数据，slave2不能同步</li><li>启动slave1后，slave1和slave2又再次同步了数据</li></ul></li></ol><h4 id="㈡-M1-M2"><a href="#㈡-M1-M2" class="headerlink" title="㈡ M1-M2"></a>㈡ M1-M2</h4><ol><li>配置和M-S一样，再互换角色配置同步</li><li>测试验证：M1写数据M2同步；M2写数据M1同步</li></ol><h3 id="4、复制总结"><a href="#4、复制总结" class="headerlink" title="4、复制总结"></a>4、复制总结</h3><p>​        上面的复制架构&#x3D;&#x3D;默认都是异步&#x3D;&#x3D;的，也就是主库将binlog日志发送给从库，这一动作就结束了，并&#x3D;&#x3D;不会验证从库是否接受完毕&#x3D;&#x3D;。这样可以提供&#x3D;&#x3D;最佳的性能&#x3D;&#x3D;。但是同时也带来了很高的风险，当主服务器或者从服务器发生故障时，极有可能从服务器没有接到主服务器发过来的binglog日志，这样就会&#x3D;&#x3D;导致主从数据不一致&#x3D;&#x3D;，甚至导致数据丢失。为了解决该问题，mysql5.5引入了&#x3D;&#x3D;半同步复制模式。&#x3D;&#x3D;</p><h3 id="5、半同步复制"><a href="#5、半同步复制" class="headerlink" title="5、半同步复制"></a>5、半同步复制</h3><p> <img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-17-06-%E5%8D%8A%E5%90%8C%E6%AD%A5%E5%A4%8D%E5%88%B6-e44484.png" alt="半同步复制"></p><p>所谓的半同步复制就是master每commit一个事务(简单来说就是做一个改变数据的操作）,要确保slave接受完主服务器发送的binlog日志文件&#x3D;&#x3D;并写入到自己的中继日志relay log里&#x3D;&#x3D;，然后会给master信号，告诉对方已经接收完毕，这样master才能把事物成功&#x3D;&#x3D;commit&#x3D;&#x3D;。这样就保证了master-slave的&#x3D;&#x3D;数据绝对的一致&#x3D;&#x3D;（但是以牺牲&#x3D;&#x3D;master的性能为代价&#x3D;&#x3D;).但等待时间也是可以调整的。</p><h4 id="㈠-准备M-S复制架构"><a href="#㈠-准备M-S复制架构" class="headerlink" title="㈠ 准备M-S复制架构"></a>㈠ 准备M-S复制架构</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">自己准备完成</span><br></pre></td></tr></table></figure><h4 id="㈡-半同步复制配置步骤"><a href="#㈡-半同步复制配置步骤" class="headerlink" title="㈡ 半同步复制配置步骤"></a>㈡ 半同步复制配置步骤</h4><h5 id="①-安装插件"><a href="#①-安装插件" class="headerlink" title="① 安装插件"></a>① 安装插件</h5><p>插件存放目录：&#96;&#96;$basedir&#x2F;lib&#x2F;plugin&#x2F;&#96;</p><ul><li>master上安装插件</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; install plugin rpl_semi_sync_master soname <span class="string">&#x27;semisync_master.so&#x27;</span>;</span><br><span class="line">Query OK, <span class="number">0</span> rows affected (<span class="number">0.00</span> sec)</span><br><span class="line">查看是否安装成功</span><br><span class="line">mysql&gt; show global variables like <span class="string">&#x27;rpl_semi_sync%&#x27;</span>;</span><br><span class="line">+<span class="literal">------------------------------------</span>+<span class="literal">-------</span>+</span><br><span class="line">| Variable_name                      | Value |</span><br><span class="line">+<span class="literal">------------------------------------</span>+<span class="literal">-------</span>+</span><br><span class="line">| rpl_semi_sync_master_enabled       | OFF   |</span><br><span class="line">是否启用master的半同步复制</span><br><span class="line">| rpl_semi_sync_master_timeout       | <span class="number">10000</span> |</span><br><span class="line">默认主等待从返回信息的超时间时间，<span class="number">10</span>秒。动态可调</span><br><span class="line">| rpl_semi_sync_master_trace_level   | <span class="number">32</span>    |</span><br><span class="line">用于开启半同步复制模式时的调试级别，默认是<span class="number">32</span> </span><br><span class="line">| rpl_semi_sync_master_wait_no_slave | ON    |</span><br><span class="line">是否允许每个事物的提交都要等待slave的信号.on为每一个事物都等待，off则表示slave追赶上后，也不会开启半同步模式，需要手动开启</span><br><span class="line">+<span class="literal">------------------------------------</span>+<span class="literal">-------</span>+</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>slave上安装插件</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; install plugin rpl_semi_sync_slave soname <span class="string">&#x27;semisync_slave.so&#x27;</span>;</span><br><span class="line">mysql&gt; show global variables like <span class="string">&#x27;rpl_semi_sync%&#x27;</span>;</span><br><span class="line">+<span class="literal">---------------------------------</span>+<span class="literal">-------</span>+</span><br><span class="line">| Variable_name                   | Value |</span><br><span class="line">+<span class="literal">---------------------------------</span>+<span class="literal">-------</span>+</span><br><span class="line">| rpl_semi_sync_slave_enabled     | OFF   |   slave是否启用半同步复制</span><br><span class="line">| rpl_semi_sync_slave_trace_level | <span class="number">32</span>    |</span><br><span class="line">+<span class="literal">---------------------------------</span>+<span class="literal">-------</span>+</span><br></pre></td></tr></table></figure><h5 id="②-激活半同步复制"><a href="#②-激活半同步复制" class="headerlink" title="② 激活半同步复制"></a>② 激活半同步复制</h5><ul><li>master上</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;  <span class="built_in">set</span> global rpl_semi_sync_master_enabled =on;</span><br><span class="line"></span><br><span class="line">mmysql&gt; show global status like <span class="string">&#x27;rpl_semi_sync%&#x27;</span>;</span><br><span class="line">+<span class="literal">--------------------------------------------</span>+<span class="literal">-------</span>+</span><br><span class="line">| Variable_name                              | Value |</span><br><span class="line">+<span class="literal">--------------------------------------------</span>+<span class="literal">-------</span>+</span><br><span class="line">| Rpl_semi_sync_master_clients               | <span class="number">1</span>     |</span><br><span class="line">有一个从服务器启用半同步复制</span><br><span class="line">| Rpl_semi_sync_master_net_avg_wait_time     | <span class="number">0</span>     |</span><br><span class="line">master等待slave回复的平均等待时间。单位毫秒</span><br><span class="line">| Rpl_semi_sync_master_net_wait_time         | <span class="number">0</span>     |</span><br><span class="line">master总的等待时间。单位毫秒</span><br><span class="line">| Rpl_semi_sync_master_net_waits             | <span class="number">0</span>     |</span><br><span class="line">master等待slave回复的总的等待次数</span><br><span class="line">| Rpl_semi_sync_master_no_times              | <span class="number">0</span>     |</span><br><span class="line">master关闭半同步复制的次数</span><br><span class="line">| Rpl_semi_sync_master_no_tx                 | <span class="number">0</span>     |</span><br><span class="line">表示从服务器确认的不成功提交的数量</span><br><span class="line">| Rpl_semi_sync_master_status                | ON    |</span><br><span class="line">标记master现在是否是半同步复制状态</span><br><span class="line">| Rpl_semi_sync_master_timefunc_failures     | <span class="number">0</span>     |</span><br><span class="line">master调用时间（如gettimeofday())失败的次数</span><br><span class="line">| Rpl_semi_sync_master_tx_avg_wait_time      | <span class="number">0</span>     |</span><br><span class="line">master花在每个事务上的平均等待时间</span><br><span class="line">| Rpl_semi_sync_master_tx_wait_time          | <span class="number">0</span>     |</span><br><span class="line">master花在事物上总的等待时间</span><br><span class="line">| Rpl_semi_sync_master_tx_waits              | <span class="number">0</span>     |</span><br><span class="line">master事物等待次数</span><br><span class="line">| Rpl_semi_sync_master_wait_pos_backtraverse | <span class="number">0</span>     |</span><br><span class="line">后来的先到了，而先来的还没有到的次数</span><br><span class="line">| Rpl_semi_sync_master_wait_sessions         | <span class="number">0</span>     |</span><br><span class="line">当前有多少个session因为slave回复而造成等待</span><br><span class="line">| Rpl_semi_sync_master_yes_tx                | <span class="number">0</span>     |</span><br><span class="line">表示从服务器确认的成功提交数量</span><br><span class="line">+<span class="literal">--------------------------------------------</span>+<span class="literal">-------</span>+</span><br></pre></td></tr></table></figure><ul><li>slave上</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">set</span> global rpl_semi_sync_slave_enabled=on;</span><br><span class="line">mysql&gt; show global status like <span class="string">&#x27;rpl_semi_sync%&#x27;</span>;</span><br><span class="line">+<span class="literal">----------------------------</span>+<span class="literal">-------</span>+</span><br><span class="line">| Variable_name              | Value |</span><br><span class="line">+<span class="literal">----------------------------</span>+<span class="literal">-------</span>+</span><br><span class="line">| Rpl_semi_sync_slave_status | ON    |</span><br><span class="line">+<span class="literal">----------------------------</span>+<span class="literal">-------</span>+</span><br></pre></td></tr></table></figure><h5 id="③-重启slave的IO线程"><a href="#③-重启slave的IO线程" class="headerlink" title="③ 重启slave的IO线程"></a>③ 重启slave的IO线程</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; stop slave IO_THREAD;</span><br><span class="line">mysql&gt; <span class="built_in">start</span> slave IO_THREAD;</span><br></pre></td></tr></table></figure><h5 id="④-测试验证"><a href="#④-测试验证" class="headerlink" title="④ 测试验证"></a>④ 测试验证</h5><p>&#x3D;&#x3D;原理：&#x3D;&#x3D;</p><p>当slave从库的IO_Thread 线程将binlog日志接受完毕后，要给master一个确认，如果超过10s未收到slave的接收确认信号，那么就会自动转换为传统的异步复制模式。</p><p>1）master插入一条记录，查看slave是否有成功返回</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; insert into a values (<span class="number">3</span>);</span><br><span class="line">Query OK, <span class="number">1</span> row affected (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; show global status like <span class="string">&#x27;rpl_semi_sync%_yes_tx&#x27;</span>; </span><br><span class="line">+<span class="literal">-----------------------------</span>+<span class="literal">-------</span>+</span><br><span class="line">| Variable_name               | Value |</span><br><span class="line">+<span class="literal">-----------------------------</span>+<span class="literal">-------</span>+</span><br><span class="line">| Rpl_semi_sync_master_yes_tx |  <span class="number">1</span>    |</span><br><span class="line">表示这次事物成功从slave返回一次确认信号</span><br><span class="line">+<span class="literal">-----------------------------</span>+<span class="literal">-------</span>+</span><br></pre></td></tr></table></figure><p>2）slave上模拟故障查看返回时间</p><p>当slave挂掉后，master这边更改操作</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># service stop mysql</span></span><br><span class="line">或者直接停止slave的IO_thread线程</span><br><span class="line">mysql&gt; stop slave io_thread;</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into a values (<span class="number">4</span>);</span><br><span class="line">Query OK, <span class="number">1</span> row affected (<span class="number">10.00</span> sec)</span><br><span class="line">这次插入一个值需要等待<span class="number">10</span>秒（默认的等待时间)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into a values (<span class="number">5</span>);</span><br><span class="line">Query OK, <span class="number">1</span> row affected (<span class="number">0.01</span> sec)</span><br><span class="line">现在自动转成了原来的异步模式</span><br></pre></td></tr></table></figure><p>3）再次启动slave，查看同步模式</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show global status like <span class="string">&#x27;rpl_semi_sync%&#x27;</span>;</span><br><span class="line">+<span class="literal">----------------------------</span>+<span class="literal">-------</span>+</span><br><span class="line">| Variable_name              | Value |</span><br><span class="line">+<span class="literal">----------------------------</span>+<span class="literal">-------</span>+</span><br><span class="line">| Rpl_semi_sync_slave_status | OFF    |</span><br><span class="line">+<span class="literal">----------------------------</span>+<span class="literal">-------</span>+</span><br><span class="line">如需要再次半同步复制，则按照以上步骤重新开启就可以</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="built_in">set</span> global rpl_semi_sync_slave_enabled=on;</span><br><span class="line">mysql&gt; stop slave IO_THREAD;</span><br><span class="line">mysql&gt; <span class="built_in">start</span> slave IO_THREAD;</span><br><span class="line"></span><br><span class="line">或者可以将该参数写入到配置文件中：</span><br><span class="line">master：rpl_semi_sync_master_enabled=<span class="number">1</span></span><br><span class="line">slave：rpl_semi_sync_slave_enabled=<span class="number">1</span>  </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>4、测试结果</p><p>5、master需要等到slave确认后才能提交，如果等不到确认消息，master等待10s种后自动变成异步同步;slave启起来后，master上改变的数据还是会自动复制过来，数据又回到一致。</p><p>6、等待时间可以在master上动态调整，如下</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">set</span> global rpl_semi_sync_master_timeout=<span class="number">3600000</span>;</span><br><span class="line">mysql&gt; show global variables like <span class="string">&#x27;rpl_semi_sync%&#x27;</span>;</span><br><span class="line">+<span class="literal">------------------------------------</span>+<span class="literal">---------</span>+</span><br><span class="line">| Variable_name                      | Value   |</span><br><span class="line">+<span class="literal">------------------------------------</span>+<span class="literal">---------</span>+</span><br><span class="line">| rpl_semi_sync_master_enabled       | ON      |</span><br><span class="line">| rpl_semi_sync_master_timeout       | <span class="number">3600000</span> |</span><br><span class="line">| rpl_semi_sync_master_trace_level   | <span class="number">32</span>      |</span><br><span class="line">| rpl_semi_sync_master_wait_no_slave | ON      |</span><br><span class="line">+<span class="literal">------------------------------------</span>+<span class="literal">---------</span>+</span><br></pre></td></tr></table></figure><h5 id="⑤-卸载插件"><a href="#⑤-卸载插件" class="headerlink" title="⑤ 卸载插件"></a>⑤ 卸载插件</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">select</span> plugin_name,load_option from information_schema.plugins;</span><br><span class="line">mysql&gt; uninstall plugin plugin_name;</span><br></pre></td></tr></table></figure><h3 id="6、经验值分享"><a href="#6、经验值分享" class="headerlink" title="6、经验值分享"></a>6、经验值分享</h3><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-17-01-%E5%B8%B8%E8%A7%81%E5%A4%8D%E5%88%B6%E9%94%99%E8%AF%AF1-1a2d14.png" alt="常见复制错误1"></p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-16-59-%E5%B8%B8%E8%A7%81%E5%A4%8D%E5%88%B6%E9%94%99%E8%AF%AF2-9b0dc4.png" alt="常见复制错误2"></p><h3 id="7、扩展补充"><a href="#7、扩展补充" class="headerlink" title="7、扩展补充"></a>7、扩展补充</h3><ul><li>跟复制相关的文件</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">master.info</span><br><span class="line">用于保存slave连接至master的相关信息，包括服务器地址，用户名，密码等</span><br><span class="line">relay<span class="literal">-log</span>.info</span><br><span class="line">保存在当前的slave节点上已经复制的当前二进制日志和本地relay log日志的对应关系</span><br></pre></td></tr></table></figure><ul><li>复制的监控和维护</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">purge 命令 </span><br><span class="line">    mysql&gt; purge binary logs to <span class="string">&#x27;mysql-bin.000008&#x27;</span>; </span><br><span class="line">    指明这个二进制文件之前的所有的文件都会被清理</span><br><span class="line"></span><br><span class="line">    mysql&gt; purge binary logs before <span class="string">&#x27;2017-04-23 20:46:26&#x27;</span>; </span><br><span class="line">    指明二进制日志文件中这个时间点之前的所有的事件都会被清理</span><br><span class="line"></span><br><span class="line">监控操作</span><br><span class="line">    mysql&gt; show master status; 显示主节点正在写哪个二进制日志文件</span><br><span class="line">    mysql&gt; show binlog events; 显示在二进制文件中记录了哪些信息</span><br><span class="line">    mysql&gt; show binary logs ; 显示记录了哪些二进制日志文件</span><br><span class="line">    mysql&gt; show slave status; 显示从服务器的状态</span><br><span class="line">    mysql&gt; show processlist; 显示当前启用的线程</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 全栈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维 </tag>
            
            <tag> MYSQL </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux进程检测与控制</title>
      <link href="/2024/06/25/Linux%E8%BF%9B%E7%A8%8B%E6%A3%80%E6%B5%8B%E4%B8%8E%E7%A9%BA%E5%80%BC/"/>
      <url>/2024/06/25/Linux%E8%BF%9B%E7%A8%8B%E6%A3%80%E6%B5%8B%E4%B8%8E%E7%A9%BA%E5%80%BC/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux进程检测与控制"><a href="#Linux进程检测与控制" class="headerlink" title="Linux进程检测与控制"></a>Linux进程检测与控制</h1><h1 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h1><p>1、了解进程和程序的关系</p><p>2、了解进程的特点</p><p>3、能够使用top动态查看进程信息</p><p>4、能够使用ps静态查看进程信息</p><p>5、能够使用kill命令给进程发送信号</p><p>6、能够调整进程的优先级（扩展）</p><h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>​        在运维的日常工作中，监视系统的运行状况是每天例行的工作，在 Windows 中我们可以很直观的使用”任务管理器”来进行进程管理，了解系统的运行状态</p><p>通常，使用”任务管理器”主要有 3 个目的：</p><ol><li>利用”应用程序”和”进程”标签来査看系统中到底运行了哪些程序和进程；</li><li>利用”性能”和”用户”标签来判断服务器的健康状态；</li><li>在”应用程序”和”进程”标签中强制中止任务和进程；</li></ol><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-08-09-jincheng04-6c9da3.jpg" style="width:960px" /><p>​        </p><p>​         在工作中，我们很少会用到Linux的图形化界面，更多时候会使用命令进行进程管理，但是进程管理的主要目的是一样的，即：</p><p>​    <strong>查看系统中运行的程序和进程</strong></p><p>​    <strong>判断服务器的健康状态</strong></p><p>​    <strong>停止不需要的进程。</strong></p><h1 id="一、相关概念"><a href="#一、相关概念" class="headerlink" title="一、相关概念"></a>一、相关概念</h1><h2 id="1、什么是进程和程序？"><a href="#1、什么是进程和程序？" class="headerlink" title="1、什么是进程和程序？"></a>1、什么是进程和程序？</h2><p>​        <strong>进程</strong>是正在执行的一个程序或命令，每个进程都是一个运行的实体，并占用一定的系统资源。<strong>程序</strong>是人使用计算机语言编写的可以实现特定目标或解决特定问题的代码集合。</p><p>​        简单来说，程序是人使用计算机语言编写的，可以实现一定功能，并且可以执行的代码集合。进程是正在执行中的程序。</p><p><strong>举例</strong>：谷歌浏览器是一个程序，当我们打开谷歌浏览器，就会在系统中看到一个浏览器的进程，当程序被执行时，程序的代码都会被加载入内存，操作系统给这个进程分配一个 ID，称为 <strong>PID</strong>（进程 ID）。我们打开多个谷歌浏览器，就有多个浏览器子进程，但是这些进程使用的程序，都是chrome</p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-08-10-jincheng06-5bd54e.jpg" style="width:960px" /><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-08-12-jincheng05-675113.jpg" style="width:960px" /><p>​    </p><h2 id="2、进程管理的内容"><a href="#2、进程管理的内容" class="headerlink" title="2、进程管理的内容"></a>2、进程管理的内容</h2><p>​        进程查看，通过查看，判断健康状态</p><p>​        进程终止</p><p>​        进程优先级控制</p><h1 id="二、进程管理命令"><a href="#二、进程管理命令" class="headerlink" title="二、进程管理命令"></a>二、进程管理命令</h1><p>工作场景：</p><p>​        小黑入职到一家公司，接到的第一项任务，就是监控生产服务器的性能，提到服务器性能，我们首先想到的就是CPU，内存和磁盘。</p><h2 id="1、top查看-CPU使用情况"><a href="#1、top查看-CPU使用情况" class="headerlink" title="1、top查看 CPU使用情况"></a>1、top查看 CPU使用情况</h2><p>命令：top</p><p>作用：查看服务器的进程占用的资源（100%使用）</p><p>语法：# top （动态显示）</p><p>交换操作快捷键：</p><p>M（大写）：表示将结果按照内存（MEM）从高到低进行降序排列；</p><p>P（大写）：，表示将结果按照CPU 使用率从高到低进行降序排列；</p><p>1 ：当服务器拥有多个cpu 的时候可以使用“1”快捷键来切换是否展示显示各个cpu 的详细信息；</p><p>q：退出</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">用法一：top</span><br><span class="line">示例代码：</span><br><span class="line"><span class="comment">#top</span></span><br><span class="line">含义：查看CPU使用情况</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-08-18-top01-d3afdc.jpg" style="width:960px" /><h3 id="1）系统整体信息："><a href="#1）系统整体信息：" class="headerlink" title="1）系统整体信息："></a>1）系统整体信息：</h3><h4 id="①第一行"><a href="#①第一行" class="headerlink" title="①第一行"></a>①第一行</h4><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-09-04-top02-6e443e.jpg" style="width:960px" /><table><thead><tr><th>内 容</th><th>说 明</th></tr></thead><tbody><tr><td>10:12:28</td><td>系统当前时间</td></tr><tr><td>up 13:05</td><td>系统的运行时间.本机己经运行 13 小时 05 分钟</td></tr><tr><td>3 users</td><td>当前登录了三个用户</td></tr><tr><td>load average: 0.00,0.01，0.05</td><td>系统在之前 1 分钟、5 分钟、15 分钟的平均负载。如果 CPU 是单核的，则这个数值超过 1 就是高负载：如果 CPU 是四核的，则这个数值超过 4 就是高负载</td></tr></tbody></table><blockquote><p>扩展：如何获取CPU的总核心数？</p><p>grep ‘core id’ &#x2F;proc&#x2F;cpuinfo |sort -u |wc -l</p></blockquote><h4 id="②第二行"><a href="#②第二行" class="headerlink" title="②第二行"></a>②第二行</h4><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-09-03-top03-da20d2.jpg" style="width:960px" /><table><thead><tr><th>Tasks:   230 total</th><th>系统中的进程总数</th></tr></thead><tbody><tr><td>1 running</td><td>正在运行的进程数</td></tr><tr><td>229 sleeping</td><td>睡眠的进程数</td></tr><tr><td>0 stopped</td><td>正在停止的进程数</td></tr><tr><td>0 zombie</td><td>僵尸进程数。如果不是   0，则需要手工检查僵尸进程</td></tr></tbody></table><h4 id="③第三行"><a href="#③第三行" class="headerlink" title="③第三行"></a>③第三行</h4><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-09-01-top04-265cf0.jpg" style="width:960px" /><table><thead><tr><th>内 容</th><th>说 明</th></tr></thead><tbody><tr><td>Cpu(s): 0.1 %us</td><td>用户模式占用的   CPU 百分比</td></tr><tr><td>0.1%sy</td><td>系统模式占用的   CPU 百分比</td></tr><tr><td>0.0%ni</td><td>改变过优先级的用户进程占用的   CPU 百分比</td></tr><tr><td>99.7%id</td><td>idle缩写，空闲   CPU 占用的 CPU 百分比</td></tr><tr><td>0.1%wa</td><td>等待输入&#x2F;输出的进程占用的   CPU 百分比</td></tr><tr><td>0.0%hi</td><td>硬中断请求服务占用的   CPU 百分比</td></tr><tr><td>0.1%si</td><td>软中断请求服务占用的   CPU 百分比</td></tr><tr><td>0.0%st</td><td>st（steal   time）意为虚拟时间百分比，就是当有虚拟机时，虚拟 CPU 等待实际 CPU 的时间百分比</td></tr></tbody></table><h4 id="问题：如果我的机器有4核CPU，我想查看每一核心分别的负载情况怎能办？"><a href="#问题：如果我的机器有4核CPU，我想查看每一核心分别的负载情况怎能办？" class="headerlink" title="问题：如果我的机器有4核CPU，我想查看每一核心分别的负载情况怎能办？"></a>问题：如果我的机器有4核CPU，我想查看每一核心分别的负载情况怎能办？</h4><p>答：交换快捷键 “1”</p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-08-58-top10-b0be30.jpg" style="width:960px" /><h4 id="④第四行"><a href="#④第四行" class="headerlink" title="④第四行"></a>④第四行</h4><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-08-57-top05-d3b5c8.jpg" style="width:960px" /><table><thead><tr><th>内 容</th><th>说 明</th></tr></thead><tbody><tr><td>Mem: 1863252 total</td><td>物理内存的总量，单位为KB</td></tr><tr><td>829960 used</td><td>己经使用的物理内存数量</td></tr><tr><td>68352 free</td><td>空闲的物理内存数量。我们使用的是虚拟机，共分配了 628MB内存，所以只有53MB的空闲内存</td></tr><tr><td>96490 buff&#x2F;cache</td><td>作为缓冲的内存数量</td></tr></tbody></table><h4 id="⑤第五行"><a href="#⑤第五行" class="headerlink" title="⑤第五行"></a>⑤第五行</h4><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-08-55-top06-3d38bf.jpg" style="width:960px" /><table><thead><tr><th>内 容</th><th>说 明</th></tr></thead><tbody><tr><td>Swap: 2097148 total</td><td>交换分区（虚拟内存）的总大小</td></tr><tr><td>3336 used</td><td>已经使用的交换分区的大小</td></tr><tr><td>2093812 free</td><td>空闲交换分区的大小</td></tr><tr><td>622420 avail Mem</td><td>可用内存</td></tr></tbody></table><p>​        我们通过 top 命令的整体信息部分，就可以判断服务器的健康状态。如果 1 分钟、5 分钟、15 分钟的平均负载高于CPU核数，说明系统压力较大。如果物理内存的空闲内存过小，则也证明系统压力较大。</p><p>问题：根据以上信息，目前我们的系统压力如何？</p><p>问题：如果我们发现CPU负载过大，接下来怎么办？</p><h3 id="2）进程信息："><a href="#2）进程信息：" class="headerlink" title="2）进程信息："></a>2）进程信息：</h3><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-08-53-top07-505e32.jpg" style="width:960px" /><table><thead><tr><th>PID</th><th>进程的 ID。</th></tr></thead><tbody><tr><td>USER</td><td>该进程所属的用户。</td></tr><tr><td>PR</td><td>优先级，数值越小优先级越高。</td></tr><tr><td>NI</td><td>优先级，数值越小优先级越高。</td></tr><tr><td>VIRT</td><td>该进程使用的虚拟内存的大小，单位为 KB。</td></tr><tr><td>RES</td><td>该进程使用的物理内存的大小，单位为 KB。</td></tr><tr><td>SHR</td><td>共享内存大小，单位为 KB。计算一个进程实际使用的内存 &#x3D; 常驻内存（RES）- 共享内存（SHR）</td></tr><tr><td>S</td><td>进程状态。其中S 表示睡眠，R 表示运行</td></tr><tr><td>%CPU</td><td>该进程占用 CPU 的百分比。</td></tr><tr><td>%MEM</td><td>该进程占用内存的百分比。</td></tr><tr><td>TIME+</td><td>该进程共占用的 CPU 时间。</td></tr><tr><td>COMMAND</td><td>进程名</td></tr></tbody></table><h4 id="问题：如果我们发现CPU负载过大，接下来怎么办？"><a href="#问题：如果我们发现CPU负载过大，接下来怎么办？" class="headerlink" title="问题：如果我们发现CPU负载过大，接下来怎么办？"></a>问题：如果我们发现CPU负载过大，接下来怎么办？</h4><p>答：查看占用CPU最多的进程</p><h4 id="问题：如何查看占用CPU最多的进程？"><a href="#问题：如何查看占用CPU最多的进程？" class="headerlink" title="问题：如何查看占用CPU最多的进程？"></a>问题：如何查看占用CPU最多的进程？</h4><p>答：交互操作快捷键P，P（大写）：，表示将结果按照CPU 使用率从高到低进行降序排列</p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-08-51-top08-366eb5.jpg" style="width:960px" /><h4 id="问题：如果我们发现内存可用量很小，接下来怎么办？"><a href="#问题：如果我们发现内存可用量很小，接下来怎么办？" class="headerlink" title="问题：如果我们发现内存可用量很小，接下来怎么办？"></a>问题：如果我们发现内存可用量很小，接下来怎么办？</h4><p>答：查看占用内存最多的进程，使用交互快捷键M（大写）：表示将结果按照内存（MEM）从高到低进行降序排列</p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-08-49-top09-4a05e0.jpg" style="width:960px" /><h4 id="问题：当我们查看完系统状态，需要做什么？"><a href="#问题：当我们查看完系统状态，需要做什么？" class="headerlink" title="问题：当我们查看完系统状态，需要做什么？"></a>问题：当我们查看完系统状态，需要做什么？</h4><p>答：退出，使用q，按键盘上的q，就会回到#提示符的状态。</p><h2 id="2、free查看内存使用情况"><a href="#2、free查看内存使用情况" class="headerlink" title="2、free查看内存使用情况"></a>2、free查看内存使用情况</h2><p>命令：free</p><p>作用：查看内存使用情况</p><p>语法：#free  -m </p><p>选项：-m 表示以mb为单位查看（1g &#x3D; 1024mb，1mb &#x3D; 1024kb）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">用法一：free <span class="literal">-m</span></span><br><span class="line">示例代码：</span><br><span class="line"><span class="comment">#free -m</span></span><br><span class="line">含义：查看内存使用情况</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-09-25-free01-7a182d.jpg" style="width:960px" /><p>​    和Centos6相比，buffer和cached被合成一组，加入了一个available。</p><p>​    关于此available，即系统可用内存，用户不需要去计算buffer&#x2F;cache，即可以看到还有多少内存可用，更加简单直观</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">第<span class="number">1</span>行Mem数据：</span><br><span class="line">total 内存总数: <span class="number">1819</span></span><br><span class="line">used 已经使用的内存数: <span class="number">774</span></span><br><span class="line">free 空闲的内存数: <span class="number">152</span></span><br><span class="line">shared 共享内存数: <span class="number">77</span></span><br><span class="line">buff/Cache块设备缓存区内存数: <span class="number">892</span></span><br><span class="line">available可用内存: <span class="number">746</span></span><br><span class="line"></span><br><span class="line">第<span class="number">2</span>行数据是Swap交换分区，也就是我们通常所说的虚拟内存。可以在内存不够使用的情况下当临时内存来使用，交换分区并不是越大越好，一般话它就等同于实际内存的大小。</span><br></pre></td></tr></table></figure><h1 id=""><a href="#" class="headerlink" title=""></a></h1><h2 id="3、df查看磁盘"><a href="#3、df查看磁盘" class="headerlink" title="3、df查看磁盘"></a>3、df查看磁盘</h2><p>命令：df</p><p>作用：查看磁盘的空间(disk  free)</p><p>语法：# df   [-h]</p><p>选项：-h表示可读性较高的形式展示大小</p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-08-45-df01-33f8b5.jpg" style="width:960px" /><p>这几列依次是：</p><table><thead><tr><th>Filesystem</th><th>磁盘名称</th></tr></thead><tbody><tr><td>Size</td><td>总大小</td></tr><tr><td>Used</td><td>被使用的大小</td></tr><tr><td>Avail</td><td>剩余大小</td></tr><tr><td>Use%</td><td>使用百分比</td></tr><tr><td>Mounted on</td><td>挂载路径（相当于Windows 的磁盘符）</td></tr></tbody></table><p>回到开始的工作场景：</p><p>​        小黑入职到一家公司，接到的第一项任务，就是监控生产服务器的性能，提到服务器性能，我们首先想到的就是CPU，内存和磁盘。</p><h4 id="问题：小黑具体应该如何监控CPU，内存和磁盘？"><a href="#问题：小黑具体应该如何监控CPU，内存和磁盘？" class="headerlink" title="问题：小黑具体应该如何监控CPU，内存和磁盘？"></a>问题：小黑具体应该如何监控CPU，内存和磁盘？</h4><p>总结：CPU：</p><p>​           内存：</p><p>​           磁盘：</p><h4 id="作业1：课下将总结的部分落实到笔记"><a href="#作业1：课下将总结的部分落实到笔记" class="headerlink" title="作业1：课下将总结的部分落实到笔记"></a>作业1：课下将总结的部分落实到笔记</h4><h2 id="4、ps查看进程命令"><a href="#4、ps查看进程命令" class="headerlink" title="4、ps查看进程命令"></a>4、ps查看进程命令</h2><p>命令：ps（process show进程显示）</p><p>语法：ps [参数选项]</p><p>作用：主要是查看服务器的进程信息</p><p>选项含义：</p><p>-e：等价于“-A”，表示列出全部（all）的进程</p><p>-f :   表示full，显示全部的列（显示全字段）</p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-08-43-ps01-d1fba8.jpg" style="width:960px" /><table><thead><tr><th>UID</th><th>该进程执行的用户ID</th></tr></thead><tbody><tr><td>PID</td><td>进程ID</td></tr><tr><td>PPID</td><td>该进程的父级进程ID，如果找不到，则该进程就被称之为僵尸进程（Parent Process ID）</td></tr><tr><td>C</td><td>Cpu的占用率，其形式是百分数</td></tr><tr><td>STIME</td><td>进程的启动时间</td></tr><tr><td>TTY</td><td>终端设备，发起该进程的设备识别符号，如果显示“?”则表示该进程并不是由终端设备发起</td></tr><tr><td>TIME</td><td>进程实际使用CPU的时间</td></tr><tr><td>CMD</td><td>该进程的名称或者对应的路径</td></tr></tbody></table><p>工作场景</p><p>​        小黑用学到的命令，发现某个进程占用CPU很高，希望进一步查看这个简称的信息。</p><p>​        ps -ef 会列出全部进程，但是我们发现进程非常多，我们很难找到自己想要看的进程。这里需要使用过滤命令grep，来过滤掉我们不需要的信息。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">用法：<span class="built_in">ps</span> <span class="literal">-ef</span> |grep 想要看到的进程名</span><br><span class="line">示例代码：</span><br><span class="line"><span class="comment">#ps -ef |grep crond</span></span><br><span class="line">含义：查看crond进程的详细情况</span><br><span class="line">注意：查询结果中，如果只有一条则表示没查到对应的进程（这<span class="number">1</span> 条表示刚才<span class="built_in">ps</span> 指令的自身）。只有查到的结果多余<span class="number">1</span> 条，才表示有对应的进程。</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-08-42-ps03-02b7bb.jpg" style="width:960px" /><blockquote><p>补充：针对上述情况的优化：如果没有对应的进程，则什么都不显示。</p></blockquote><p>思路：在现有的基础之上再次使用管道去处理下（-v 选项表示“排除”）。</p><p>扩展：ps  aux  BSD格式命令，注意没有横杠”-“</p><p>Unix有很多分支，目前主流的显示风格分为System V和BSD，我们之前使用的ps -ef属于system V风格，ps aux是BSD风格，大家可以理解为两种风格只是显示不同。</p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-08-39-ps04-5bb04f.jpg" style="width:960px" /><p>USER：该 process 属于哪个使用者账号<br>PID ：该 process 的ID<br>%CPU：该 process 使用掉的 CPU 资源百分比<br>%MEM：该 process 所占用的物理内存百分比<br>VSZ ：该 process 使用掉的虚拟内存量 (Kbytes)<br>RSS ：该 process 占用的固定的内存量 (Kbytes)<br>TTY ：该 process 是在那个终端机上面运作，若与终端机无关，则显示 ?，另外， tty1-tty6 是本机上面的登入者程序，若为 pts&#x2F;0 等等的，则表示为由网络连接进主机的程序。<br>STAT：该程序目前的状态，主要的状态有<br>​    R ：该程序目前正在运作，或者是可被运作<br>​    S ：该程序目前正在睡眠当中 (可说是 idle 状态)，但可被某些讯号 (signal) 唤醒。<br>​    T ：该程序目前正在侦测或者是停止了<br>​    Z ：该程序应该已经终止，但是其父程序却无法正常的终止他，造成 zombie (疆尸) 程序的状态<br>START：该 process 被触发启动的时间<br>TIME ：该 process 实际使用 CPU 运作的时间<br>COMMAND：该程序的实际指令</p><h2 id="5、netstat查看进程网络访问"><a href="#5、netstat查看进程网络访问" class="headerlink" title="5、netstat查看进程网络访问"></a>5、netstat查看进程网络访问</h2><p>命令：netstat</p><p>作用：查看网络连接状态</p><p>语法：netstat   -tnlp</p><p>选项：-t：表示只列出tcp 协议的连接；</p><p>​   -n：表示将地址从字母组合转化成ip 地址，将协议转化成端口号来显示；</p><p>​   -l ：表示过滤出”state（状态）”列中其值为LISTEN（监听）的连接；</p><p>​   -p：表示显示发起连接的进程pid 和进程名称；</p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-08-37-netstat02-256e37.jpg" style="width:960px" /><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Protocol：协议（tcp、upd、http、https、icmp、ssh…）</span><br><span class="line">Receive：接收</span><br><span class="line">Send：发送</span><br><span class="line">Local Address:本地地址</span><br><span class="line">Foreign：远程地址</span><br><span class="line">State：状态，LISTEN表示侦听来自远方的TCP端口的连接请求</span><br><span class="line">PID/Program name：进程ID和程序名</span><br></pre></td></tr></table></figure><h2 id="6、kill关闭进程"><a href="#6、kill关闭进程" class="headerlink" title="6、kill关闭进程"></a>6、kill关闭进程</h2><p>命令：kill</p><p>语法：kill [信号] PID</p><p>作用：kill 命令会向操作系统内核发送一个信号（多是终止信号）和目标进程的 PID，然后系统内核根据收到的信号类型，对指定进程进行相应的操作</p><p>信号种类：</p><table><thead><tr><th>信号编号</th><th>含义</th></tr></thead><tbody><tr><td>9</td><td>杀死进程，即强制结束进程。</td></tr><tr><td>15</td><td>正常结束进程，是 kill   命令的默认信号。</td></tr></tbody></table><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">用法一：<span class="built_in">kill</span> [信号编号] PID</span><br><span class="line">示例代码：</span><br><span class="line"><span class="comment">#ps -ef |grep crond</span></span><br><span class="line">查询crond进程信息，想知道它的PID，以便使用<span class="built_in">kill</span>终止进程</span><br><span class="line"></span><br><span class="line"><span class="comment">#kill 6925</span></span><br><span class="line">结束<span class="number">6925</span>的进程，这里使用默认信号，正常结束，如果强制结束，就是<span class="built_in">kill</span> <span class="literal">-9</span> <span class="number">6925</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#ps -ef |grep crond</span></span><br><span class="line">查询crond进程信息,这次查询是为了确认crond进程是否被终止了，我们发现<span class="number">6925</span>进程已经没有了</span><br><span class="line"></span><br><span class="line"><span class="comment">#systemctl start crond</span></span><br><span class="line">使用前面学过的systemctl命令，重启crond服务</span><br><span class="line"></span><br><span class="line"><span class="comment">#ps -ef |grep crond</span></span><br><span class="line">查询crond进程信息,这次查询是为了确认crond进程已经重新启动了，我们看到多了一个<span class="number">32934</span>的进程，表明crond已经启动，并且进程ID变化了，这是一个新的进程</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-08-33-ps05-bd0ee7.jpg" style="width:960px" /><blockquote><p>备注：在互联网中，经常看到kill  -9  进程PID，强制杀死某个进程，kill -l</p></blockquote><h2 id="7、killall关闭进程"><a href="#7、killall关闭进程" class="headerlink" title="7、killall关闭进程"></a>7、killall关闭进程</h2><p>命令：killall</p><p>作用：通过程序的&#x3D;&#x3D;进程名&#x3D;&#x3D;来杀死&#x3D;&#x3D;一类&#x3D;&#x3D;进程</p><p>语法：# killall  [信号] 进程名称</p><p>信号种类：和kill相同，这里不再重复</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">用法一：killall [信号编号] 进程名</span><br><span class="line">示例代码：</span><br><span class="line"><span class="comment">#ps -ef |grep crond</span></span><br><span class="line">查询crond进程信息，想知道它的进程名，以便使用killall终止进程</span><br><span class="line"></span><br><span class="line"><span class="comment">#kill 6925</span></span><br><span class="line">结束<span class="number">6925</span>的进程，这里使用默认信号，正常结束，如果强制结束，就是<span class="built_in">kill</span> <span class="literal">-9</span> <span class="number">6925</span></span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-08-33-ps05-bd0ee7.jpg" style="width:960px" /><h1 id="三、进程优先级"><a href="#三、进程优先级" class="headerlink" title="三、进程优先级"></a>三、进程优先级</h1><h2 id="1、什么是进程优先级？"><a href="#1、什么是进程优先级？" class="headerlink" title="1、什么是进程优先级？"></a>1、什么是进程优先级？</h2><p>​        Linux是一个多用户、多任务的操作系统，系统中通常运行着非常多的进程。哪些进程先运行，哪些进程后运行，就由进程优先级来控制</p><h2 id="2、查看进程优先级"><a href="#2、查看进程优先级" class="headerlink" title="2、查看进程优先级"></a>2、查看进程优先级</h2><p>PR  优先级，数值越小优先级越高。<br>NI  优先级，数值越小优先级越高。</p><p>问题：这两个数值是在哪里看到的？</p><p>答：</p><h2 id="3、调整进程优先级"><a href="#3、调整进程优先级" class="headerlink" title="3、调整进程优先级"></a>3、调整进程优先级</h2><h4 id="①-调整-正在运行-进程的优先级-renice"><a href="#①-调整-正在运行-进程的优先级-renice" class="headerlink" title="① 调整&#x3D;&#x3D;正在运行&#x3D;&#x3D;进程的优先级(renice)"></a>① 调整&#x3D;&#x3D;正在运行&#x3D;&#x3D;进程的优先级(renice)</h4><h5 id="1）使用top按”r”来调整"><a href="#1）使用top按”r”来调整" class="headerlink" title="1）使用top按”r”来调整"></a>1）使用top按”r”来调整</h5><p>​      如果要改变某个进程的优先级，就要利用 “r” 交互命令。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">改变NICE<span class="literal">---</span>&gt;PR</span><br><span class="line">优先级的范围：</span><br><span class="line"><span class="literal">-20</span>——<span class="number">19</span>  数字越低，优先级越高，系统会按照更多的cpu时间给该进程</span><br><span class="line">注意：我们能够修改的只有 <span class="built_in">Ni</span> 的优先级，而不能修改 Pr 的优先级。</span><br></pre></td></tr></table></figure><p>步骤1：运行top命令，按r，会提示输入希望修改优先级的进程的PID，这里输入6451，表示想修改firewalld进程的优先级</p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-08-31-youxianji01-b8d0dc.jpg" style="width:960px" /><p>步骤2：输入6451后回车，提示希望修改的具体数字，这个数字是从-20到19，这里输入5，数字越大，优先级别越低，所以，这里是降低了firewalld的优先级</p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-08-29-youxianji02-dd8a9c.jpg" style="width:960px" /><p>步骤3：输入5后，按回车，会发现6451进程的NI, 从0变成了5，PR从20变成了25</p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-08-28-youxianji03-2fa72d.jpg" style="width:960px" /><h5 id="2）命令行使用renice调整"><a href="#2）命令行使用renice调整" class="headerlink" title="2）命令行使用renice调整"></a>2）命令行使用renice调整</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">命令：renice</span><br><span class="line">语法：renice [<span class="type">NI</span>优先级设置的数字] 想调整的进程ID</span><br><span class="line">[<span class="type">root</span>@<span class="type">localhost</span> ~]<span class="comment"># renice -5 6451</span></span><br><span class="line">含义：将<span class="number">6451</span>进程的<span class="built_in">NI</span>优先级设置为<span class="literal">-5</span>，实际效果是提高了<span class="number">6451</span>进程的优先级</span><br><span class="line">注意：这里的<span class="literal">-5</span>代表设置成<span class="literal">-5</span>，不是所谓加减的关系，如果当前<span class="built_in">NI</span>的值是<span class="number">10</span>，当设置成<span class="literal">-5</span>后，<span class="built_in">NI</span>的值会变为<span class="literal">-5</span>.</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-08-26-youxianji04-f1b13d.jpg" style="width:960px" /><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-08-25-youxianji05-f8a3a8.jpg" style="width:960px" /><h4 id="②-程序启动时指定优先级-nice-，只能调整不在运行的程序。"><a href="#②-程序启动时指定优先级-nice-，只能调整不在运行的程序。" class="headerlink" title="② 程序启动时指定优先级(nice)，只能调整不在运行的程序。"></a>② 程序启动时指定优先级(nice)，只能调整不在运行的程序。</h4><p>步骤1：将程序停止</p><p>步骤2：启动并制定优先级</p><p>步骤3：确认优先级（查看优先级）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">命令：nice</span><br><span class="line">语法：nice [<span class="type">NI</span>优先级设置的数字] 想调整的进程名</span><br><span class="line">启动进程时，通常会继承父进程的 nice级别，默认为<span class="number">0</span></span><br><span class="line"><span class="comment">#ps -ef |grep crond</span></span><br><span class="line">含义：查看crond的进程信息</span><br><span class="line">目的：找出crond的PID，用于结束进程</span><br><span class="line"></span><br><span class="line"><span class="comment">#kill -9 crond的进程ID</span></span><br><span class="line">含义：结束crond的进程</span><br><span class="line">目的：nice只能修改不在运行的进程的优先级</span><br><span class="line"></span><br><span class="line"><span class="comment">#ps -ef |grep crond</span></span><br><span class="line">含义:查看crond的进程信息</span><br><span class="line">目的：确认crond进程是不是已经停止了</span><br><span class="line"></span><br><span class="line"><span class="comment">#nice -n -5 crond</span></span><br><span class="line">含义：启动crond进程，将<span class="built_in">NI</span>设置成<span class="literal">-5</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#ps -ef |grep crond</span></span><br><span class="line">含义：查看crond的进程信息</span><br><span class="line">目的：找出crond的PID，用于查看此进程的优先级</span><br><span class="line"></span><br><span class="line"><span class="comment">#top -p crond的进程ID</span></span><br><span class="line">含义：使用TOP命令，只查看和crond进程相关的信息</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="-1"><a href="#-1" class="headerlink" title=""></a></h3>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Linux命令 </tag>
            
            <tag> 进程检测与控制 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux自有服务和软件包</title>
      <link href="/2024/06/25/Linux%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1%E5%92%8C%E8%BD%AF%E4%BB%B6%E5%8C%85/"/>
      <url>/2024/06/25/Linux%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1%E5%92%8C%E8%BD%AF%E4%BB%B6%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<p>自有服务，即不需要用户独立去安装的软件的服务，而是当系统安装好之后就可以直接使用的服务（内置）</p><h1 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h1><p>1、了解systemctl命令用途</p><p>2、掌握使用systemctl开启，关闭，重启服务</p><p>3、了解常见自有服务ntpd,firewalld,crond的作用</p><p>4、掌握ntpdate时间同步原理与实现</p><p>5、掌握防火墙的相关操作（添加和删除简单规则，开启，关闭防火墙）</p><p>6、了解源码包和二进制包的区别</p><p>7、掌握rpm包的卸载、安装以及更新操作</p><p>8、了解计划任务的作用</p><p>9、掌握计划任务的编辑</p><h1 id="一、自有服务概述"><a href="#一、自有服务概述" class="headerlink" title="一、自有服务概述"></a>一、自有服务概述</h1><p>​        服务是一些特定的进程，自有服务就是系统开机后就自动运行的一些进程，一旦客户发出请求，这些进程就自动为他们提供服务，windows系统中，把这些自动运行的进程，称为”服务”<br>​        举例：当我们使用SSH客户端软件连接linux的时候，我们的服务器为什么会对连接做出响应？是因为SSH服务开机就自动运行了。</p><p>​        所谓自有服务，简单来说，可以理解为Linux系统开机自动运行的服务（程序）。</p><p>​        我们如何管理这些自有服务呢？</p><h1 id="二、systemctl管理服务命令"><a href="#二、systemctl管理服务命令" class="headerlink" title="二、systemctl管理服务命令"></a>二、systemctl管理服务命令</h1><p>​        在Centos7之前，通过service 和 chkconfig两个命令来管理服务</p><p>service: 负责启动，停止服务，显示服务状态</p><p>chkconfig: 指定服务是否开机启动</p><p>​        从Centos7开始，统一使用systemctl来管理服务， systemctl同时具有service和chkconfig命令的功能。</p><h2 id="1、显示服务"><a href="#1、显示服务" class="headerlink" title="1、显示服务"></a>1、显示服务</h2><p>命令：systemctl</p><p>作用：管理服务</p><p>语法：#systemctl   [选项]</p><p>选项：list-units –type service –all：列出所有服务（包含启动的和没启动的）</p><p>​           list-units –type service：列出所有启动的服务</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">用法一：systemctl list<span class="literal">-units</span> <span class="literal">--type</span> service <span class="literal">--all</span> 不加具体服务名</span><br><span class="line">示例代码：</span><br><span class="line"><span class="comment">#systemctl list-units --type service --all</span></span><br><span class="line">含义：列出所有服务，包括已运行的和没有运行的</span><br><span class="line">空格可以翻页，q退出</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-00-55-systemctl01-d4045c.jpg" style="width:960px" /><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">用法二：systemctl list<span class="literal">-units</span> <span class="literal">--type</span> service 不加具体服务名</span><br><span class="line">示例代码：</span><br><span class="line"><span class="comment">#systemctl list-units --type service</span></span><br><span class="line">含义：列出已运行的服务</span><br><span class="line">空格可以翻页，q退出</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-00-53-systemctl02-efb1ac.jpg" style="width:960px" /><h2 id="2、查看启动和停止服务"><a href="#2、查看启动和停止服务" class="headerlink" title="2、查看启动和停止服务"></a>2、查看启动和停止服务</h2><p>命令：systemctl</p><p>作用：管理服务</p><p>语法：#systemctl   [选项]  服务名</p><p>选项： status：检查指定服务的运行状况</p><p>​            start：启动指定服务</p><p>​    stop：停止指定服务</p><p>​    restart：重启指定服务</p><p>​    reload：重新加载指定服务的配置文件（并非所有服务都支持reload，通常使用restart)</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">用法三：systemctl 选项 服务名</span><br><span class="line">示例代码：</span><br><span class="line"><span class="comment">#systemctl status crond</span></span><br><span class="line">含义：查看crond服务的状态</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-00-51-systemctl03-fbe81f.jpg" style="width:960px" /><p>Active:active(running) 表示当前crond服务是运行状态。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">用法四：systemctl 选项 服务名</span><br><span class="line">示例代码：</span><br><span class="line"><span class="comment">#systemctl stop crond</span></span><br><span class="line">含义：停止crond服务</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-00-50-systemctl04-66d04d.jpg" style="width:960px" /><p>Inactive,表示crond服务当前是停止状态</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">用法五：systemctl 选项 服务名</span><br><span class="line">示例代码：</span><br><span class="line"><span class="comment">#systemctl start crond</span></span><br><span class="line">含义：启动crond服务</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-00-47-systemctl05-0ca4fb.jpg" style="width:960px" /><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">用法六：systemctl 选项 服务名</span><br><span class="line">示例代码：</span><br><span class="line"><span class="comment">#systemctl restart crond</span></span><br><span class="line">含义：重启crond服务</span><br><span class="line"></span><br><span class="line"><span class="comment">#systemctl reload crond</span></span><br><span class="line">含义：重新加载crond服务配置文件</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-00-46-systemctl06-d53d18.jpg" style="width:960px" /><h2 id="3、服务持久化"><a href="#3、服务持久化" class="headerlink" title="3、服务持久化"></a>3、服务持久化</h2><p>​        所谓服务持久化，就是服务在开机的时候，是否自动启动。</p><p>命令：systemctl</p><p>作用：管理服务</p><p>语法：#systemctl   [选项]  服务名</p><p>选项： enable：指定服务开机自动启动</p><p>​            disable：取消服务开机自动启动</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">用法七：systemctl 选项 服务名</span><br><span class="line">示例代码：</span><br><span class="line"><span class="comment">#systemctl disable crond</span></span><br><span class="line">含义：取消crond服务开机启动</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-00-44-systemctl07-c17911.jpg" style="width:960px" /><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">用法八：systemctl 选项 服务名</span><br><span class="line">示例代码：</span><br><span class="line"><span class="comment">#systemctl disable crond</span></span><br><span class="line">含义：指定crond服务开机启动</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-00-42-systemctl08-1f7a7b.jpg" style="width:960px" /><p>systemctl参数总结</p><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>list-units –type service   –all</td><td>列出所有服务</td></tr><tr><td>list-units –type service</td><td>列出所有启动的服务</td></tr><tr><td>start</td><td>启动指定服务</td></tr><tr><td>stop</td><td>停止指定服务</td></tr><tr><td>status</td><td>检查指定服务的运行状况</td></tr><tr><td>restart</td><td>重启指定服务</td></tr><tr><td>reload</td><td>重新加载指定服务的配置文件（并非所有服务都支持reload，通常使用restart)</td></tr><tr><td>enable</td><td>指定服务开机自动启动</td></tr><tr><td>disable</td><td>取消服务开机自动启动</td></tr></tbody></table><h1 id="三、常用自有服务（ntp-firewalld-crond"><a href="#三、常用自有服务（ntp-firewalld-crond" class="headerlink" title="三、常用自有服务（ntp,firewalld,crond)"></a>三、常用自有服务（ntp,firewalld,crond)</h1><table><thead><tr><th>服务名</th><th>含义</th></tr></thead><tbody><tr><td>ntpd</td><td>用于同步计算机的系统时间的服务</td></tr><tr><td>firewalld</td><td>防火墙服务</td></tr><tr><td>crond</td><td>计划任务服务</td></tr></tbody></table><h2 id="1、ntp时间同步服务"><a href="#1、ntp时间同步服务" class="headerlink" title="1、ntp时间同步服务"></a>1、ntp时间同步服务</h2><p>​        NTP是网络时间协议(Network Time Protocol)，它是用来同步网络中各个计算机的时间的协议。</p><p> 工作场景：</p><p>​        公司开发了一个电商网站，由于访问量很大，网站后端由100台服务器组成集群。50台负责接收订单，50台负责安排发货，接收订单的服务器需要记录用户下订单的具体时间，把数据传给负责发货的服务器，由于100台服务器时间各不相同，记录的时间经常不一致，甚至会出现下单时间是明天，发货时间是昨天的情况。</p><h3 id="1）NTP同步服务器原理"><a href="#1）NTP同步服务器原理" class="headerlink" title="1）NTP同步服务器原理"></a>1）NTP同步服务器原理</h3><p>​        标准时间是哪里来的？</p><p>​        现在的标准时间是由原子钟报时的国际标准时间UTC（Universal Time Coordinated，世界协调时)，所以NTP获得UTC的时间来源可以是原子钟、天文台、卫星，也可以从Internet上获取。</p><p>​        在NTP中，定义了时间按照服务器的等级传播，<strong>Stratum层的总数限制在15以内</strong></p><p>​        工作中，&#x3D;&#x3D;通常我们会直接使用各个组织提供的，现成的NTP服务器&#x3D;&#x3D;</p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-00-40-ntp02-519dad.jpg" style="width:960px" /><h3 id="2）到哪里去找NTP服务器"><a href="#2）到哪里去找NTP服务器" class="headerlink" title="2）到哪里去找NTP服务器"></a>2）到哪里去找NTP服务器</h3><p>​        NTP授时网站：<a href="http://www.ntp.org.cn/pool.php">http://www.ntp.org.cn/pool.php</a></p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-00-38-image-20190109151845806-7018325-9ddbe1.png" style="width:960px" /><h3 id="3）时间同步操作"><a href="#3）时间同步操作" class="headerlink" title="3）时间同步操作"></a>3）时间同步操作</h3><p>同步服务器时间方式有2 个：一次性同步手动同步、通过服务自动同步。</p><p>手动同步</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">用法一：ntpdate 时间服务器IP</span><br><span class="line">示例代码：</span><br><span class="line"><span class="comment">#ntpdate 120.25.108.11</span></span><br><span class="line">含义：从服务器<span class="number">120.25</span>.<span class="number">108.11</span>同步标准网络时间到服务器（<span class="number">120.25</span>.<span class="number">108.11</span>服务器由阿里云提供，可以从http://www.ntp.org.cn/pool.php网站获取）</span><br><span class="line">注意：从网络同步时间，要确保自己的服务器可以访问互联网</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-00-36-ntp03-5edaef.jpg" style="width:960px" /><p>错误信息：no servers can be used</p><p>含义：服务器不可用，这里的服务器是指网络上的时间服务器，不可用，不代表是对方服务器有问题，也有可能是你自己的服务器网络不通，无法连接到网络上的时间服务器。</p><p>自动同步</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">用法二：启动ntpd服务，并配置为开机启动</span><br><span class="line">示例代码：</span><br><span class="line"><span class="comment">#systemctl start ntpd</span></span><br><span class="line"><span class="comment">#systemctl enable ntpd</span></span><br><span class="line">含义：启动ntpd服务，并配置为开机启动，服务启动后，系统会自动同步网络时间</span><br><span class="line">注意：从网络同步时间，要确保自己的服务器可以访问互联网</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-00-34-ntp05-db09ae.jpg" style="width:960px" /><p>问题1：启动ntpd服务后，是不是时间就自动同步了？</p><p>启动后就自动同步了</p><p>问题2：需不需要让ntpd服务，开机自动运行？</p><p>需要</p><p>ntpd服务配置文件位置  &#x2F;etc&#x2F;ntp.conf</p><h2 id="2、firewalld防火墙"><a href="#2、firewalld防火墙" class="headerlink" title="2、firewalld防火墙"></a>2、firewalld防火墙</h2><h3 id="1-什么是防火墙"><a href="#1-什么是防火墙" class="headerlink" title="1)什么是防火墙"></a>1)什么是防火墙</h3><p>防火墙：防范一些网络攻击。有软件防火墙、硬件防火墙之分。</p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-00-33-image-20190109152927209-7018967-b21a26.png" style="width:960px" /><blockquote><p>防火墙选择让正常请求通过，从而保证网络安全性。</p></blockquote><p>Windows防火墙：</p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-00-32-image-20190109152909128-7018949-70d7e3.png" style="width:960px" /><h3 id="2-传统Linux防火墙"><a href="#2-传统Linux防火墙" class="headerlink" title="2)传统Linux防火墙"></a>2)传统Linux防火墙</h3><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-00-30-iptables02-f21c48.png" style="width:960px" /><h2 id="3、firewalld防火墙的概念"><a href="#3、firewalld防火墙的概念" class="headerlink" title="3、firewalld防火墙的概念"></a>3、firewalld防火墙的概念</h2><h3 id="1）区域"><a href="#1）区域" class="headerlink" title="1）区域"></a>1）区域</h3><p>CentOS6x中防火墙叫做iptables</p><p>CentOS7.x 中默认使用的防火墙是firewalld</p><p>​        firewalld增加了区域的概念，所谓区域是指，firewalld<strong>预先准备了几套防火墙策略的集合</strong>，类似于<strong>策略的模板</strong>，用户可以根据需求选择区域。</p><p>常见区域及相应策略规则</p><table><thead><tr><th>区域</th><th>默认策略</th></tr></thead><tbody><tr><td>trusted</td><td>允许所有数据包</td></tr><tr><td>home</td><td>拒绝流入的流量，除非与流出的流量相关，允许ssh,mdns,ippclient,amba-client,dhcpv6-client服务通过</td></tr><tr><td>internal</td><td>等同于home</td></tr><tr><td>work</td><td>拒绝流入的流量，除非与流出的流量相关，允许ssh,ipp-client,dhcpv6-client服务通过</td></tr><tr><td>public</td><td>拒绝流入的流量，除非与流出的流量相关，允许ssh,dhcpv6-client服务通过</td></tr><tr><td>external</td><td>拒绝流入的流量，除非与流出的流量相关，允许ssh服务通过</td></tr><tr><td>dmz</td><td>拒绝流入的流量，除非与流出的流量相关，允许ssh服务通过</td></tr><tr><td>block</td><td>拒绝流入的流量，除非与流出的流量相关，非法流量采取拒绝操作</td></tr><tr><td>drop</td><td>拒绝流入的流量，除非与流出的流量相关，非法流量采取丢弃操作</td></tr></tbody></table><h3 id="2）运行模式和永久模式"><a href="#2）运行模式和永久模式" class="headerlink" title="2）运行模式和永久模式"></a>2）运行模式和永久模式</h3><p>运行模式：此模式下，配置的防火墙策略立即生效，但是不写入配置文件</p><p>永久模式：此模式下，配置的防火墙策略写入配置文件，但是需要reload重新加载才能生效。</p><p>&#x3D;&#x3D;firewalld默认采用运行模式&#x3D;&#x3D;</p><h2 id="4、firewalld防火墙的配置"><a href="#4、firewalld防火墙的配置" class="headerlink" title="4、firewalld防火墙的配置"></a>4、firewalld防火墙的配置</h2><h3 id="1）查看，开启和停止firewalld服务"><a href="#1）查看，开启和停止firewalld服务" class="headerlink" title="1）查看，开启和停止firewalld服务"></a>1）查看，开启和停止firewalld服务</h3><p>命令：systemctl</p><p>作用：管理服务</p><p>语法：#systemctl   [选项]  firewalld</p><p>选项： status：检查指定服务的运行状况</p><p>​            start：启动指定服务</p><p>​    stop：停止指定服务</p><p>​    restart：重启指定服务</p><p>​    reload：重新加载指定服务的配置文件（并非所有服务都支持reload，通常使用restart)</p><p>​        <strong>使用systemctl来管理firewalld的服务，具体命令前面已经讲过，只是服务名换成了firewalld，这里不再赘述</strong></p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-00-28-firewall02-387c8e.jpg" style="width:960px" /><h3 id="2-管理firewall配置"><a href="#2-管理firewall配置" class="headerlink" title="2) 管理firewall配置"></a>2) 管理firewall配置</h3><p>命令：firewall-cmd</p><p>作用：管理firewall具体配置</p><p>语法：#firewall-cmd  [参数选项1] ….[参数选项n]</p><p>常用选项：  </p><h3 id="①查看默认使用的区域"><a href="#①查看默认使用的区域" class="headerlink" title="①查看默认使用的区域"></a>①查看默认使用的区域</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">用法一：firewall<span class="literal">-cmd</span> 选项</span><br><span class="line">示例代码：</span><br><span class="line"><span class="comment">#firewall-cmd --get-default-zone</span></span><br><span class="line">含义：查看默认使用区域，当前默认使用区域为public</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-00-22-firewall03-2702c2.jpg" style="width:960px" /><h3 id="②查看所有可用区域"><a href="#②查看所有可用区域" class="headerlink" title="②查看所有可用区域"></a>②查看所有可用区域</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">用法二：firewall<span class="literal">-cmd</span> 选项</span><br><span class="line">示例代码：</span><br><span class="line"><span class="comment">#firewall-cmd --get-zones</span></span><br><span class="line">含义：查看所有可用区域</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-00-21-firewall05-19586a.jpg" style="width:960px" /><h3 id="③列出当前使用区域配置"><a href="#③列出当前使用区域配置" class="headerlink" title="③列出当前使用区域配置"></a>③列出当前使用区域配置</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">用法三：firewall<span class="literal">-cmd</span> 选项</span><br><span class="line">示例代码：</span><br><span class="line"><span class="comment">#firewall-cmd --list-all</span></span><br><span class="line">含义：查看所有可用区域</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-00-18-firewall06-efd571.jpg" style="width:960px" /><h3 id="④列出所有区域的配置"><a href="#④列出所有区域的配置" class="headerlink" title="④列出所有区域的配置"></a>④列出所有区域的配置</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">用法四：firewall<span class="literal">-cmd</span> 选项</span><br><span class="line">示例代码：</span><br><span class="line"><span class="comment">#firewall-cmd --list-all-zones</span></span><br><span class="line">含义：查看所有可用区域</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-00-17-firewall04-0903a9.jpg" style="width:960px" /><h3 id="⑤添加允许通过的服务或端口"><a href="#⑤添加允许通过的服务或端口" class="headerlink" title="⑤添加允许通过的服务或端口"></a>⑤添加允许通过的服务或端口</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">用法五：firewall<span class="literal">-cmd</span> 选项</span><br><span class="line">示例代码：</span><br><span class="line"><span class="comment">#firewall-cmd --zone=public --add-port=1024/tcp</span></span><br><span class="line">含义:在public区域，添加允许tcp协议的<span class="number">1024</span>端口通过的规则</span><br><span class="line"></span><br><span class="line"><span class="comment">#firewall-cmd --zone=public --add-service=ftp</span></span><br><span class="line">含义:在public区域，添加允许ftp服务通过的规则 =&gt; 必须在/usr/lib/firewalld/services</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-00-09-firewall07-770e39.jpg" style="width:960px" /><h3 id="⑥去掉允许通过的服务或端口"><a href="#⑥去掉允许通过的服务或端口" class="headerlink" title="⑥去掉允许通过的服务或端口"></a>⑥去掉允许通过的服务或端口</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">用法五：firewall<span class="literal">-cmd</span> 选项</span><br><span class="line">示例代码：</span><br><span class="line"><span class="comment">#firewall-cmd --zone=public --remove-port=1024/tcp</span></span><br><span class="line">含义:在public区域，去掉允许tcp协议的<span class="number">1024</span>端口通过的规则</span><br><span class="line"></span><br><span class="line"><span class="comment">#firewall-cmd --zone=public --remove-service=ftp</span></span><br><span class="line">含义:在public区域，去掉允许ftp服务通过的规则</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-00-07-firewall08-4df1ee.jpg" style="width:960px" /><h3 id="⑦永久模式参数permanent"><a href="#⑦永久模式参数permanent" class="headerlink" title="⑦永久模式参数permanent"></a>⑦永久模式参数permanent</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">用法七：firewall<span class="literal">-cmd</span> 选项</span><br><span class="line">示例代码：</span><br><span class="line"><span class="comment"># firewall-cmd --zone=public --add-port=1024/tcp --permanent</span></span><br><span class="line">含义:在public区域，使用permanent参数，永久添加允许<span class="number">1024</span>端口通过的规则</span><br></pre></td></tr></table></figure><h3 id="⑧重新加载配置reload"><a href="#⑧重新加载配置reload" class="headerlink" title="⑧重新加载配置reload"></a>⑧重新加载配置reload</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">用法七：firewall<span class="literal">-cmd</span> 选项</span><br><span class="line">示例代码：</span><br><span class="line"><span class="comment">#firewall-cmd --reload</span></span><br><span class="line">含义:重新加载配置</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-00-04-firewall09-2bd2c7.jpg" style="width:960px" /><h2 id="5、计划任务crontab"><a href="#5、计划任务crontab" class="headerlink" title="5、计划任务crontab"></a>5、计划任务crontab</h2><h3 id="1-计划任务的作用"><a href="#1-计划任务的作用" class="headerlink" title="1)计划任务的作用"></a>1)计划任务的作用</h3><p>作用：操作系统不可能24 小时都有人在操作，有些时候想在指定的时间点去执行任务（例如：每天凌晨 2 点去重新启动httpd&#x3D;&gt;阿帕奇），此时不可能真有人每天夜里 2 点去执行命令，这就可以交给计划任务程序去执行操作了。</p><h3 id="2-查看计划任务"><a href="#2-查看计划任务" class="headerlink" title="2)查看计划任务"></a>2)查看计划任务</h3><p>&#x3D;&#x3D;语法：# crontab   选项&#x3D;&#x3D;</p><p>常用选项：</p><p>&#x3D;&#x3D;-l：list，列出指定用户的计划任务列表&#x3D;&#x3D;</p><p>&#x3D;&#x3D;-e：edit，编辑指定用户的计划任务列表，简单来说，计划任务就是一个文件&#x3D;&#x3D;</p><p>-u：user，指定的用户名，如果不指定，则表示当前用户</p><p>-r：remove，删除指定用户的计划任务列表</p><p>示例代码：列出当前用户的计划任务列表</p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-01-11-image-20190115114136260-7523696-3526f3.png" alt="image-20190115114136260"></p><p>上述的提示，代表 root 用户没有计划任务需要去做。</p><h3 id="3-编辑计划任务（重点）"><a href="#3-编辑计划任务（重点）" class="headerlink" title="3)编辑计划任务（重点）"></a>3)编辑计划任务（重点）</h3><p>进入计划任务编辑文件</p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-00-01-image-20190115114609118-7523969-0ceae8.png" alt="image-20190115114609118"></p><p>打开计划任务编辑文件后，可以在此文件中编写我们自定义的计划任务：</p><p>计划任务的规则语法格式，以行为单位，一行则为一个计划：</p><p>&#x3D;&#x3D;分      时      日      月      周      需要执行的命令&#x3D;&#x3D;</p><p>例如：0 0 * * * reboot，代表每天0时0分执行reboot指令。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">取值范围（常识）：</span><br><span class="line">分：<span class="number">0</span>~<span class="number">59</span></span><br><span class="line">时：<span class="number">0</span>~<span class="number">23</span></span><br><span class="line">日：<span class="number">1</span>~<span class="number">31</span></span><br><span class="line">月：<span class="number">1</span>~<span class="number">12</span></span><br><span class="line">周：<span class="number">0</span>~<span class="number">7</span>，<span class="number">0</span> 和 <span class="number">7</span> 表示星期天</span><br><span class="line"></span><br><span class="line">四个符号：</span><br><span class="line">*：表示取值范围中的每一个数字</span><br><span class="line">-：做连续区间表达式的，要想表示<span class="number">1</span>~<span class="number">7</span>，则可以写成：<span class="number">1</span><span class="literal">-7</span></span><br><span class="line">/：表示每多少个，例如：想每 <span class="number">10</span> 分钟一次，则可以在分的位置写：*/<span class="number">10</span></span><br><span class="line">,：表示多个取值，比如想在 <span class="number">1</span> 点，<span class="number">2</span> 点 <span class="number">6</span> 点执行，则可以在时的位置写：<span class="number">1</span>,<span class="number">2</span>,<span class="number">6</span></span><br></pre></td></tr></table></figure><blockquote><p>特别补充：在Linux系统中，有些命令不能直接在计划任务中使用，使用后，其也不会生效。如useradd命令。如果想让其生效必须使用完整路径。</p></blockquote><p>问题：如何查询一个命令的真实路径在哪个位置？</p><blockquote><p>答：使用whereis  命令名称</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/20-59-59-1554258277505-c4a2c0.png" alt="1554258277505"></p><h3 id="4-几个小案例"><a href="#4-几个小案例" class="headerlink" title="4)几个小案例"></a>4)几个小案例</h3><p>问题1：每月1、10、22 日的4:45 重启network 服务</p><p>问题2：每周六、周日的1:10 重启network 服务</p><p>问题3：每天18:00 至23:00 之间每隔30 分钟重启network 服务</p><p>问题4：每隔两天的上午8 点到11 点的第3 和第15 分钟执行一次重启</p><p>分时日月周  命令或服务</p><p>问题1：45  4  1,10,22   *   *   service   network   restart</p><p>问题2：10  1  *  *  6,7  service   network   restart</p><p>问题3：*&#x2F;30  18-23   *   *   *   service network restart</p><p>问题4：3,15   8-11  *&#x2F;2   *   *   reboot</p><p>案例：每1 分钟往 root 家目录中的 readme.txt 中输一个1，为了看到效果使用追加输出【输出使用echo 命令，语法：# echo 输出的内容】</p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/20-59-53-image-20190115120136784-7524896-d9dc60.png" alt="image-20190115120136784"></p><p>在末行模式下输入<code>:wq</code>保存并退出，使用tail -f查看readme.txt动态变化</p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/20-59-51-image-20190115120402179-7525042-f58df6.png" alt="image-20190115120402179"></p><blockquote><p>注意：在计划任务中，默认最小单位就是分，不能再小了。如果需要做到秒级别则需要配合研发相关代码。</p></blockquote><h3 id="5-扩展"><a href="#5-扩展" class="headerlink" title="5)扩展"></a>5)扩展</h3><h4 id="①-crontab-权限问题"><a href="#①-crontab-权限问题" class="headerlink" title="① crontab 权限问题"></a>① crontab 权限问题</h4><p>crontab是任何用户都可以创建的计划任务，但是超级管理员可以通过配置来设置某些用户不允许设置计划任务 。</p><p>&#x3D;&#x3D;黑名单&#x3D;&#x3D;配置文件位于：<code>/etc/cron.deny</code> 里面写用户名，一行只能写一个</p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/20-59-49-image-20190115120847967-7525328-83db11.png" alt="image-20190115120847967"></p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/20-59-48-image-20190115121037269-7525437-ca2ccd.png" alt="image-20190115121037269"></p><p>保存退出，切换到cndws普通用户，执行crontab命令，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/20-59-46-image-20190115121134052-7525494-39a32f.png" alt="image-20190115121134052"></p><p>&#x3D;&#x3D;白名单&#x3D;&#x3D;还有一个配置文件</p><p>&#x2F;etc&#x2F;cron.allow （本身不存在，自己创建）</p><blockquote><p>注意：白名单优先级高于黑名单，如果一个用户同时存在两个名单文件中，则会被默认允许创建计划任务。</p></blockquote><h4 id="②-查看计划任务文件保存路径"><a href="#②-查看计划任务文件保存路径" class="headerlink" title="② 查看计划任务文件保存路径"></a>② 查看计划任务文件保存路径</h4><p>问题：计划任务文件具体保存在哪里呢？</p><p>答：<code>/var/spool/cron/用户名文件中</code>，如果使用root用户编辑计划任务，则用户文件名为root</p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/20-59-41-image-20190115135145162-7531505-225758.png" alt="image-20190115135145162"></p><h4 id="③-查看计划任务日志信息"><a href="#③-查看计划任务日志信息" class="headerlink" title="③ 查看计划任务日志信息"></a>③ 查看计划任务日志信息</h4><p>问题：在实际应用中，我们如何查看定时任务运行情况？</p><p>答：通过计划任务日志，日志文件位于<code>/var/log/cron</code></p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/20-59-39-image-20190115141951856-7533191-597e01.png" alt="image-20190115141951856"></p><h1 id="四、Linux软件包"><a href="#四、Linux软件包" class="headerlink" title="四、Linux软件包"></a>四、Linux软件包</h1><h2 id="1、软件包概述"><a href="#1、软件包概述" class="headerlink" title="1、软件包概述"></a>1、软件包概述</h2><p>​        这是什么？</p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/20-59-37-rjb01-2868c1.jpg" style="width:960px" /><p>​        Linux下也有很多可以安装的软件，而这些软件的安装包可细分为两种，分别是<strong>源码包</strong>和<strong>二进制包</strong>。</p><h3 id="1）源码包"><a href="#1）源码包" class="headerlink" title="1）源码包"></a>1）源码包</h3><p>​        源码包就是一大堆源代码程序，是由程序员按照特定的格式和语法编写出来的。计算机只能识别机器语言，也就是二进制语言，所以源码包安装之前需要编译。</p><p>​        编译过程耗时较长<br>​        大多数用户不懂开发，编译过程中可能会有各种错误，用户无力解决。</p><p>​        为了解决使用源码包安装的问题，Linux 软件包的安装出现了使用二进制包的安装方式。</p><h3 id="2）二进制包"><a href="#2）二进制包" class="headerlink" title="2）二进制包"></a>2）二进制包</h3><p>​        二进制包，也就是源码包经过成功编译之后产生的包。</p><p>​        二进制包是 Linux 下默认的软件安装包，目前主要有以下 2 大主流的二进制包管理系统：</p><ul><li>&#x3D;&#x3D;RPM 包&#x3D;&#x3D;管理系统：功能强大，安装、升级、査询和卸载非常简单方便，因此很多 Linux 发行版都默认使用此机制作为软件安装的管理方式，例如 Fedora、&#x3D;&#x3D;CentOS&#x3D;&#x3D;、SuSE 等。</li><li>DPKG 包管理系统：由 Debian Linux 所开发的包管理机制，通过 DPKG 包，Debian Linux 就可以进行软件包管理，主要应用在 Debian 和 Ubuntu 中。</li></ul><p>​        <strong>RPM</strong>是RedHat Package Manager（RedHat软件包管理工具）的缩写</p><p>​        作用：rpm 的作用类似于豌豆荚，华为应用市场，App Store，主要作用是对linux 服务器上的软件包进行对应管理操作，管理分为：查询、卸载、安装&#x2F;更新。</p><h2 id="2、如何获取rpm包"><a href="#2、如何获取rpm包" class="headerlink" title="2、如何获取rpm包"></a>2、如何获取rpm包</h2><blockquote><p>要想装软件，和windows 下一样，先得找到安装包：xxx.rpm</p></blockquote><p>软件包的获得方式：</p><p>a. 去官网去下载（<a href="http://rpm.pbone.net);/">http://rpm.pbone.net）；</a></p><p>b. 不介意老版本的话，可以从光盘（或者镜像文件）中读取；</p><h2 id="3、从光盘获取"><a href="#3、从光盘获取" class="headerlink" title="3、从光盘获取"></a>3、从光盘获取</h2><h4 id="3-1-虚拟机中加载光盘"><a href="#3-1-虚拟机中加载光盘" class="headerlink" title="3.1 虚拟机中加载光盘"></a>3.1 虚拟机中加载光盘</h4><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/20-59-35-rpm01-ff354d.png" style="width:960px" /><h4 id="3-2-使用-lsblk（list-block-devices）或者df-T-查看块状设备的信息"><a href="#3-2-使用-lsblk（list-block-devices）或者df-T-查看块状设备的信息" class="headerlink" title="3.2 使用 # lsblk（list block devices）或者df -T 查看块状设备的信息"></a>3.2 使用 # lsblk（list block devices）或者df -T 查看块状设备的信息</h4><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/20-59-34-rpm02-c37f73.jpg" style="width:960px" /><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Name：名称</span><br><span class="line">Size：设备大小</span><br><span class="line"><span class="built_in">Type</span>：类型</span><br><span class="line">MountPoint：挂载点</span><br><span class="line">此界面类似于Windows 下的磁盘管理界面：</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/20-59-32-image-20190109170027122-7024427-61ea58.png" style="width:960px" /><h4 id="3-3-进入-run-media-root-CentOS-7-x86-64-Packages目录"><a href="#3-3-进入-run-media-root-CentOS-7-x86-64-Packages目录" class="headerlink" title="3.3 进入&#x2F;run&#x2F;media&#x2F;root&#x2F;CentOS 7 x86_64&#x2F;Packages目录"></a>3.3 进入&#x2F;run&#x2F;media&#x2F;root&#x2F;CentOS 7 x86_64&#x2F;Packages目录</h4><p>#&#x2F;run&#x2F;media&#x2F;root&#x2F;CentOS 7 x86_64&#x2F;Packages</p><p>#ls</p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/20-59-31-rpm03-25c066.png" style="width:960px" /><h2 id="4、查询某个软件安装情况"><a href="#4、查询某个软件安装情况" class="headerlink" title="4、查询某个软件安装情况"></a>4、查询某个软件安装情况</h2><p>语法：# rpm -qa | grep 软件名称</p><p>选项：</p><p>-q：查询，query</p><p>-a：全部，all</p><p>示例代码：查询firefox浏览器的安装情况，已安装</p><p>#rpm -qa |grep firefox</p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/20-59-29-rpm03-1a1374.jpg" style="width:960px" /><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/20-59-28-rpm04-ec5abc.jpg" style="width:960px" /><p>示例代码：查询qq软件的安装情况，未安装</p><p>#rpm -qa |grep qq</p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/20-59-26-rpm05-be623b.jpg" style="width:960px" /><h2 id="5、卸载某个软件"><a href="#5、卸载某个软件" class="headerlink" title="5、卸载某个软件"></a>5、卸载某个软件</h2><p>卸载某个软件</p><p>语法：# rpm -e 软件的名称（建议写完整的名称，通过-qa 查询）</p><p>案例：卸载火狐浏览器</p><p>#rpm -qa |grep firefox      首先查询firefox软件的完整名称<br>firefox-45.7.0-2.el6.centos.x86_64</p><p>#rpm -e firefox-45.7.0-2.el6.centos.x86_64</p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/20-59-24-rpm06-16753c.jpg" style="width:960px" /><p>卸载完成后，单击firefox浏览器图标，运行结果如下图所示：</p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/20-59-20-rpm07-755499.jpg" style="width:960px" /><h2 id="6、安装某个软件"><a href="#6、安装某个软件" class="headerlink" title="6、安装某个软件"></a>6、安装某个软件</h2><p>命令：rpm</p><p>作用：管理rpm软件包</p><p>语法：# rpm -ivh 软件包完整路径名称</p><p>选项：</p><p>-i：install，安装</p><p>-v：显示进度条</p><p>-h：表示以”#”形式显示进度条</p><p>示例代码：将刚刚卸载的firefox火狐浏览器重新安装（在DVD光盘1中）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">用法：rpm <span class="literal">-ivh</span> 软件包名称</span><br><span class="line">示例代码：</span><br><span class="line"><span class="comment">#cd /run/media/root/CentOS\ 7\ x86_64/Packages/</span></span><br><span class="line">进入光盘Packages目录，里面存放了很多rpm的安装包</span><br><span class="line"></span><br><span class="line"><span class="comment">#ll |grep firefox</span></span><br><span class="line">查看Packages目录下，包含firefox的安装包</span><br><span class="line"></span><br><span class="line"><span class="comment">#rpm -ivh firefox-60.2.2-1.el7.centos.x86_64.rpm</span></span><br><span class="line">使用rpm命令，安装firefox软件包</span><br><span class="line"></span><br><span class="line"><span class="comment">#rpm -qa |grep firefox</span></span><br><span class="line">查询是否安装完成</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/20-59-17-rpm08-d28faa.jpg" style="width:960px" /><p>安装完成后，打开firefox浏览器</p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/20-59-15-rpm04-64e935.jpg" style="width:960px" /><h2 id="7、更新某个软件"><a href="#7、更新某个软件" class="headerlink" title="7、更新某个软件"></a>7、更新某个软件</h2><p>语法：# rpm -Uvh 完整的安装包路径</p><p>选项：</p><p>-U：upgrade，升级</p><p>-v：表示显示进度条</p><p>-h：表示以#形式显示进度条</p><p>这里我会提供给大家firefox的高版本的安装包</p><p>firefox-60.8.0-1.el7.centos.x86_64.rpm    这个包是用来升级的</p><p>firefox-68.4.1-1.el7.centos.x86_64.rpm</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">用法：rpm <span class="literal">-Uvh</span> 软件包名称</span><br><span class="line">示例代码：</span><br><span class="line"><span class="comment">#rpm -qa |grep firefox</span></span><br><span class="line">查询当前firefox的版本</span><br><span class="line"></span><br><span class="line"><span class="comment">#ll</span></span><br><span class="line">查看root目录下，我们刚刚拷到虚机上的RPM安装包的名称</span><br><span class="line"></span><br><span class="line"><span class="comment">#rpm -Uvh firefox-60.8.0-1.el7.centos.x86_64.rpm</span></span><br><span class="line">使用rpm命令，安装<span class="number">60.8</span>.<span class="number">0</span>版本的软件包</span><br><span class="line"></span><br><span class="line"><span class="comment">#rpm -qa |grep firefox</span></span><br><span class="line">查询升级后的firefox版本</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/20-59-12-rpm09-4b2554.jpg" style="width:960px" /><h2 id="8、rpm扩展"><a href="#8、rpm扩展" class="headerlink" title="8、rpm扩展"></a>8、rpm扩展</h2><h4 id="8-1依赖关系"><a href="#8-1依赖关系" class="headerlink" title="8.1依赖关系"></a>8.1依赖关系</h4><p>一个软件必须先有其他软件才能运行，例如之前xmind启动过程中提示的缺少DLL，称之为依赖</p><p>WAMP（Windows + Apache + MySQL + PHP）安装前必须先安装VC++ 2014 x86_64，这种情况就称之为有依赖关系。</p><p>60.8.0的firefox可以更新成功</p><p>下面我们尝试更新到68.4.1的版本</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">用法：rpm <span class="literal">-Uvh</span> 软件包名称</span><br><span class="line"></span><br><span class="line"><span class="comment">#rpm -Uvh firefox-68.4.1-1.el7.centos.x86_64.rpm</span></span><br><span class="line">使用rpm命令，安装<span class="number">68.4</span>.<span class="number">1</span>版本的软件包</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/20-59-10-rpm10-9d0ecc.jpg" style="width:960px" /><p>错误提示：</p><p>error：Failed dependencies:</p><p>提示安装68版本的firefox需要依赖nspr4.21的版本，nss的3.44的版本，这就是我们说的&#x3D;&#x3D;依赖关系&#x3D;&#x3D;。</p><p>为了解决依赖关系的问题，有另外一个管理工具叫做&#x3D;&#x3D;yum&#x3D;&#x3D;，后面我们会讲到</p><h4 id="8-2-查看文件所属的包名（实用）"><a href="#8-2-查看文件所属的包名（实用）" class="headerlink" title="8.2 查看文件所属的包名（实用）"></a>8.2 查看文件所属的包名（实用）</h4><p>语法：# rpm -qf 需要查询的文件路径</p><p>选项：</p><p>-f：查询文件所属包</p><p>示例代码：查询&#x2F;etc&#x2F;ntp.conf 属于哪个软件包？</p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/20-59-09-rpm11-24189c.jpg" style="width:960px" /><h4 id="8-3查询软件安装完成后，生成了哪些文件"><a href="#8-3查询软件安装完成后，生成了哪些文件" class="headerlink" title="8.3查询软件安装完成后，生成了哪些文件"></a>8.3查询软件安装完成后，生成了哪些文件</h4><p>语法：# rpm  -ql   需要查询的软件包名称</p><p>#rpm -ql firefox</p><p>#rpm -ql openssh</p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/20-59-06-rpm12-1a0092.jpg" style="width:960px" /><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">特别说明：软件安装完成后，一共生成了以下几类文件</span><br><span class="line">配置文件类：/etc目录</span><br><span class="line">程序文件本身，二进制文件命令：/usr/sbin目录</span><br><span class="line">文档手册：/usr/share/doc或<span class="built_in">man</span>目录</span><br></pre></td></tr></table></figure><h2 id="9、扩展：光盘的挂载和解挂"><a href="#9、扩展：光盘的挂载和解挂" class="headerlink" title="9、扩展：光盘的挂载和解挂"></a>9、扩展：光盘的挂载和解挂</h2><p>① 解挂操作</p><p>命令：umount</p><p>语法：# umount 当前设备的挂载点（路径）</p><p>例如：</p><p>#umount &#x2F;run&#x2F;media&#x2F;root&#x2F;CentOS\ 7\ x86_64&#x2F;</p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/20-59-04-mount01-760e3f.jpg" style="width:960px" /><p>② 挂载光盘</p><p>首先新建一个挂载点，然后使用mount命令进行挂在，挂载点可以理解为就是一个空目录</p><p>命令：mount</p><p>语法：# mount  设备文件原始地址（&#x2F;dev目录）  要挂载的位置路径（盘符）</p><p>设备原始地址：地址统一都在&#x2F;dev 下，然后根据大小确定具体name 值，拼凑在一起组成原</p><p>始地址，例如当前：”&#x2F;dev&#x2F;sr0”</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">用法：<span class="built_in">mount</span> 设备 挂载点</span><br><span class="line">示例代码：</span><br><span class="line"><span class="comment">#mkdir /mnt/dvd</span></span><br><span class="line">新建一个目录作为挂载点</span><br><span class="line"></span><br><span class="line"><span class="comment">#mount /dev/sr0 /mnt/dvd</span></span><br><span class="line">将光驱设备/dev/sr0 挂载到 /mnt/dvd这个挂载点</span><br><span class="line"></span><br><span class="line"><span class="comment">#df -T</span></span><br><span class="line">可以看到已经成功挂载</span><br></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/20-59-00-mount02-00c013.jpg" style="width:960px" /><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/21-05-13-9cdc45b70b1d804c9facf80821f4dc29-081d0e.png" alt="9cdc45b70b1d804c9facf80821f4dc29"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Linux命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringCloud微服务以及集成Gogs+Jenkins</title>
      <link href="/2024/06/25/SpringCloud%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%BB%A5%E5%8F%8A%E9%9B%86%E6%88%90Gogs-Jenkins/"/>
      <url>/2024/06/25/SpringCloud%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%BB%A5%E5%8F%8A%E9%9B%86%E6%88%90Gogs-Jenkins/</url>
      
        <content type="html"><![CDATA[<h2 id="第一步：环境准备"><a href="#第一步：环境准备" class="headerlink" title="第一步：环境准备"></a>第一步：环境准备</h2><blockquote><p>系统环境：Centos7.6</p></blockquote><h3 id="①部署规划"><a href="#①部署规划" class="headerlink" title="①部署规划"></a>①部署规划</h3><table><thead><tr><th align="center">编号</th><th align="center">主机名称</th><th align="center">IP地址</th><th align="center">角色</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">sh1</td><td align="center">192.168.31.151</td><td align="center">SpringCloud01服务器</td></tr><tr><td align="center">2</td><td align="center">sh2</td><td align="center">192.168.31.152</td><td align="center">SpringCloud02服务器</td></tr></tbody></table><h3 id="②软件列表"><a href="#②软件列表" class="headerlink" title="②软件列表"></a>②软件列表</h3><table><thead><tr><th>软件名称</th><th>安装方式</th><th>进度</th></tr></thead><tbody><tr><td>JDK17</td><td>SHELL脚本</td><td>√</td></tr><tr><td>MVN</td><td>SHELL脚本</td><td>√</td></tr><tr><td>DOCKER</td><td>SHELL脚本</td><td>√</td></tr><tr><td>GOGS</td><td>SHELL脚本</td><td>√</td></tr><tr><td>DOCKER-COMPOSE</td><td>SHELL脚本</td><td>√</td></tr></tbody></table><h3 id="0-微服务环境准备"><a href="#0-微服务环境准备" class="headerlink" title="0.微服务环境准备"></a>0.微服务环境准备</h3><h4 id="①克隆母鸡或模板机，生产sh1服务器和sh2服务器"><a href="#①克隆母鸡或模板机，生产sh1服务器和sh2服务器" class="headerlink" title="①克隆母鸡或模板机，生产sh1服务器和sh2服务器"></a>①克隆母鸡或模板机，生产sh1服务器和sh2服务器</h4><h4 id="②更改主机名称，采用FQDN格式【这里不采用】"><a href="#②更改主机名称，采用FQDN格式【这里不采用】" class="headerlink" title="②更改主机名称，采用FQDN格式【这里不采用】"></a>②更改主机名称，采用FQDN格式【这里不采用】</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#192.168.31.151 </span></span><br><span class="line">hostnamectl <span class="built_in">set-hostname</span> sh1</span><br><span class="line">su</span><br><span class="line"></span><br><span class="line"><span class="comment">#192.168.31.152</span></span><br><span class="line">hostnamectl <span class="built_in">set-hostname</span> sh2</span><br><span class="line">su</span><br></pre></td></tr></table></figure><h4 id="③更改服务器的IP地址（使用静态模式）"><a href="#③更改服务器的IP地址（使用静态模式）" class="headerlink" title="③更改服务器的IP地址（使用静态模式）"></a>③更改服务器的IP地址（使用静态模式）</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/sysconfig/network-scripts/ifcfg-ens33</span></span><br><span class="line">...</span><br><span class="line">IPADDR=<span class="string">&quot;192.168.31.151&quot;</span></span><br><span class="line">NETMASK=<span class="string">&quot;255.255.255.0&quot;</span></span><br><span class="line">GATEWAY=<span class="string">&quot;192.168.31.2&quot;</span></span><br><span class="line">DNS1=<span class="string">&quot;114.114.114.114&quot;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="1-JDK17环境安装"><a href="#1-JDK17环境安装" class="headerlink" title="1.JDK17环境安装"></a>1.JDK17环境安装</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># -------------------------------------------------</span></span><br><span class="line"><span class="comment"># Script Name: java.sh</span></span><br><span class="line"><span class="comment"># Author: Flaw</span></span><br><span class="line"><span class="comment"># -------------------------------------------------</span></span><br><span class="line"><span class="comment"># 欢迎语</span></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;\033[36m</span></span><br><span class="line"><span class="string">███╗   ██╗ ██████╗     ██╗  ██╗ ██████╗ ███╗   ███╗███████╗    ██╗     ██╗██╗  ██╗███████╗    </span></span><br><span class="line"><span class="string">████╗  ██║██╔═══██╗    ██║  ██║██╔═══██╗████╗ ████║██╔════╝    ██║     ██║██║ ██╔╝██╔════╝    </span></span><br><span class="line"><span class="string">██╔██╗ ██║██║   ██║    ███████║██║   ██║██╔████╔██║█████╗      ██║     ██║█████╔╝ █████╗      </span></span><br><span class="line"><span class="string">██║╚██╗██║██║   ██║    ██╔══██║██║   ██║██║╚██╔╝██║██╔══╝      ██║     ██║██╔═██╗ ██╔══╝      </span></span><br><span class="line"><span class="string">██║ ╚████║╚██████╔╝    ██║  ██║╚██████╔╝██║ ╚═╝ ██║███████╗    ███████╗██║██║  ██╗███████╗    </span></span><br><span class="line"><span class="string">╚═╝  ╚═══╝ ╚═════╝     ╚═╝  ╚═╝ ╚═════╝ ╚═╝     ╚═╝╚══════╝    ╚══════╝╚═╝╚═╝  ╚═╝╚══════╝    </span></span><br><span class="line"><span class="string">                                                                                              </span></span><br><span class="line"><span class="string"> ██╗██████╗ ███████╗    ██████╗     ██████╗     ██╗                                           </span></span><br><span class="line"><span class="string">███║╚════██╗╚════██║   ██╔═████╗   ██╔═████╗   ███║                                           </span></span><br><span class="line"><span class="string">╚██║ █████╔╝    ██╔╝   ██║██╔██║   ██║██╔██║   ╚██║                                           </span></span><br><span class="line"><span class="string"> ██║██╔═══╝    ██╔╝    ████╔╝██║   ████╔╝██║    ██║                                           </span></span><br><span class="line"><span class="string"> ██║███████╗   ██║  ██╗╚██████╔╝██╗╚██████╔╝██╗ ██║                                           </span></span><br><span class="line"><span class="string"> ╚═╝╚══════╝   ╚═╝  ╚═╝ ╚═════╝ ╚═╝ ╚═════╝ ╚═╝ ╚═╝</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">BY: \033[32mFlaw\033[0m</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查用户是否为root</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$</span>(id -u)&quot;</span> != <span class="string">&quot;0&quot;</span> ]; then</span><br><span class="line">        <span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;\033[31m脚本运行中需要root权限,请提权后重试\033[0m&quot;</span> <span class="number">1</span>&gt;&amp;<span class="number">2</span></span><br><span class="line">        <span class="keyword">exit</span> <span class="number">1</span></span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="built_in">clear</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查是否已安装必要的命令</span></span><br><span class="line">required_commands=(<span class="string">&quot;wget&quot;</span> <span class="string">&quot;rpm&quot;</span> <span class="string">&quot;tar&quot;</span> <span class="string">&quot;ln&quot;</span> <span class="string">&quot;sed&quot;</span> <span class="string">&quot;iptables&quot;</span> <span class="string">&quot;systemctl&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> cmd <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$</span>&#123;required_commands[@]&#125;&quot;</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> ! command <span class="literal">-v</span> <span class="string">&quot;<span class="variable">$cmd</span>&quot;</span> &gt;/dev/null <span class="number">2</span>&gt;&amp;<span class="number">1</span>; then</span><br><span class="line">        <span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;\033[33m检测到缺少 <span class="variable">$cmd</span> 命令,正在安装...\033[0m&quot;</span></span><br><span class="line">        yum install <span class="literal">-y</span> <span class="string">&quot;<span class="variable">$cmd</span>&quot;</span></span><br><span class="line">    fi</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查本地是否已安装 Java 环境</span></span><br><span class="line">installed_java=<span class="variable">$</span>(rpm <span class="literal">-qa</span> | grep <span class="literal">-E</span> <span class="string">&#x27;^java-|^jdk-&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> [ -<span class="type">n</span> <span class="string">&quot;<span class="variable">$installed_java</span>&quot;</span> ]; then</span><br><span class="line">    <span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;\033[33m检测到本地已安装 Java 环境,正在卸载...\033[0m&quot;</span></span><br><span class="line">    rpm <span class="literal">-e</span> <span class="literal">--nodeps</span> <span class="variable">$installed_java</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;\033[32m卸载完成\033[0m&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;\033[32m本地未安装 Java 环境\033[0m&quot;</span></span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载 JDK 安装包</span></span><br><span class="line">jdk_file=<span class="string">&quot;/opt/jdk-17.0.10_linux-x64_bin.tar.gz&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ ! -<span class="type">f</span> <span class="string">&quot;<span class="variable">$jdk_file</span>&quot;</span> ]; then</span><br><span class="line">    <span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;\033[33m正在下载 JDK 安装包...\033[0m&quot;</span></span><br><span class="line">    <span class="built_in">wget</span>  https://fj.ly93.cc/<span class="number">16</span>/<span class="number">1555991507</span>/jdk<span class="literal">-17</span>.<span class="number">0.10</span>_linux<span class="literal">-x64_bin</span>.tar.gz <span class="literal">-O</span> <span class="variable">$jdk_file</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;\033[32m下载完成\033[0m&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;\033[32m检测到 JDK 安装包已存在\033[0m&quot;</span></span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;\033[33m正在安装 JDK...\033[0m&quot;</span></span><br><span class="line">tar <span class="literal">-zxf</span> <span class="variable">$jdk_file</span> <span class="literal">-C</span> /usr/local/ &gt;/dev/null <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">ln <span class="literal">-sf</span> /usr/local/jdk<span class="literal">-17</span>.<span class="number">0.10</span> /usr/local/jdk</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;\033[33m正在配置环境变量...\033[0m&quot;</span></span><br><span class="line">touch /opt/temp.txt</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;JAVA_HOME=/usr/local/jdk&#x27;</span> &gt;&gt;/opt/temp.txt</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;PATH=$JAVA_HOME/bin:$PATH&#x27;</span> &gt;&gt;/opt/temp.txt</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;CLASSPATH=$JAVA_HOME/jre/lib/ext:$JAVA_HOME/lib/tools.jar&#x27;</span> &gt;&gt;/opt/temp.txt</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;export PATH JAVA_HOME CLASSPATH&#x27;</span> &gt;&gt;/opt/temp.txt</span><br><span class="line">sed <span class="literal">-i</span> <span class="literal">-e</span> <span class="string">&#x27;$r /opt/temp.txt&#x27;</span> /etc/profile</span><br><span class="line"><span class="built_in">rm</span> <span class="operator">-f</span> /opt/temp.txt</span><br><span class="line">source /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;\033[32m JDK 安装完成\033[0m&quot;</span></span><br><span class="line"></span><br><span class="line">setenforce <span class="number">0</span> &gt;/dev/null <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">iptables <span class="operator">-F</span> &gt;/dev/null <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">systemctl stop firewalld &gt;/dev/null <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">systemctl disable firewalld &gt;/dev/null <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">systemctl stop NetworkManager &gt;/dev/null <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">systemctl disable NetworkManager &gt;/dev/null <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;\033[32m防火墙和网络管理器已关闭\033[0m&quot;</span></span><br></pre></td></tr></table></figure><h3 id="2-MVN安装"><a href="#2-MVN安装" class="headerlink" title="2.MVN安装"></a>2.MVN安装</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义变量</span></span><br><span class="line">MAVEN_VERSION=<span class="number">3.8</span>.<span class="number">6</span></span><br><span class="line">MAVEN_HOME=/opt/maven</span><br><span class="line">MAVEN_DOWNLOAD_LINK=<span class="string">&quot;/mnt/data/2024-06-25-22-SYcqwLwPatpwx6jhP2UR.gz&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 彩色输出函数</span></span><br><span class="line">echo_red() &#123; <span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;\033[31m<span class="variable">$1</span>\033[0m&quot;</span>; &#125;</span><br><span class="line">echo_green() &#123; <span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;\033[32m<span class="variable">$1</span>\033[0m&quot;</span>; &#125;</span><br><span class="line">echo_blue() &#123; <span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;\033[34m<span class="variable">$1</span>\033[0m&quot;</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第一步：上传并解压 Maven 到 /opt</span></span><br><span class="line">echo_blue <span class="string">&quot;第一步：上传并解压 Maven 到 /opt...&quot;</span></span><br><span class="line">sudo <span class="built_in">cp</span> <span class="variable">$MAVEN_DOWNLOAD_LINK</span> /opt</span><br><span class="line"><span class="built_in">cd</span> /opt</span><br><span class="line">sudo tar <span class="literal">-zxvf</span> <span class="variable">$</span>(basename <span class="variable">$MAVEN_DOWNLOAD_LINK</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第二步：移动解压文件夹到 maven</span></span><br><span class="line">echo_blue <span class="string">&quot;第二步：移动解压文件夹到 maven...&quot;</span></span><br><span class="line">sudo <span class="built_in">mv</span> apache<span class="literal">-maven-</span><span class="variable">$MAVEN_VERSION</span> maven</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第三步：设置环境变量</span></span><br><span class="line">echo_blue <span class="string">&quot;第三步：设置环境变量...&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;MAVEN_HOME=<span class="variable">$</span>&#123;MAVEN_HOME&#125;&quot;</span> | sudo <span class="built_in">tee</span> <span class="literal">-a</span> /etc/profile</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;export PATH=$&#123;MAVEN_HOME&#125;/bin:$&#123;PATH&#125;&#x27;</span> | sudo <span class="built_in">tee</span> <span class="literal">-a</span> /etc/profile</span><br><span class="line">source /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第四步：验证安装结果</span></span><br><span class="line">echo_blue <span class="string">&quot;第四步：验证安装结果...&quot;</span></span><br><span class="line">mvn <span class="literal">-version</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示完成信息</span></span><br><span class="line">echo_green <span class="string">&quot;Maven 安装脚本完成。&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-Docker安装"><a href="#3-Docker安装" class="headerlink" title="3.Docker安装"></a>3.Docker安装</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查并清理现有的Docker环境</span></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;\033[34m检查并清理现有的Docker环境...\033[0m&quot;</span></span><br><span class="line"><span class="keyword">if</span> command <span class="literal">-v</span> docker &amp;&gt;/dev/null; then</span><br><span class="line">    <span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;\033[33m发现现有Docker环境，准备清理...\033[0m&quot;</span></span><br><span class="line">    sudo systemctl stop docker</span><br><span class="line">    sudo yum remove docker<span class="literal">-ce</span> docker<span class="literal">-ce-cli</span> containerd.io docker<span class="literal">-buildx-plugin</span> docker<span class="literal">-compose-plugin</span> docker<span class="literal">-ce-rootless-extras</span></span><br><span class="line">    sudo <span class="built_in">rm</span> <span class="literal">-rf</span> /var/lib/docker</span><br><span class="line">    sudo <span class="built_in">rm</span> <span class="literal">-rf</span> /var/lib/containerd</span><br><span class="line">    <span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;\033[32m现有Docker环境已清理完成。\033[0m&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;\033[32m没有发现现有Docker环境。\033[0m&quot;</span></span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.1 安装Docker</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># （1）更新yum包到最新</span></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;\033[34m更新yum包到最新...\033[0m&quot;</span></span><br><span class="line">sudo yum update <span class="literal">-y</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># （2）安装必要的软件包</span></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;\033[34m安装必要的软件包...\033[0m&quot;</span></span><br><span class="line">sudo yum install <span class="literal">-y</span> yum<span class="literal">-utils</span> device<span class="literal">-mapper-persistent-data</span> lvm2</span><br><span class="line"></span><br><span class="line"><span class="comment"># （3）设置yum源为阿里云</span></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;\033[34m设置yum源为阿里云...\033[0m&quot;</span></span><br><span class="line">sudo yum<span class="literal">-config-manager</span> <span class="literal">--add-repo</span> http://mirrors.aliyun.com/docker<span class="literal">-ce</span>/linux/centos/docker<span class="literal">-ce</span>.repo</span><br><span class="line"></span><br><span class="line"><span class="comment"># （4）安装docker</span></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;\033[34m安装docker...\033[0m&quot;</span></span><br><span class="line">sudo yum install docker<span class="literal">-ce</span> <span class="literal">-y</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># （5）安装后查看docker版本</span></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;\033[34m查看docker版本...\033[0m&quot;</span></span><br><span class="line">docker <span class="literal">-v</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.2 设置ustc的镜像</span></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;\033[34m配置ustc镜像加速器...\033[0m&quot;</span></span><br><span class="line"><span class="comment"># 创建或编辑daemon.json文件</span></span><br><span class="line">sudo mkdir <span class="literal">-p</span> /etc/docker</span><br><span class="line">sudo <span class="built_in">tee</span> /etc/docker/daemon.json &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.3 Docker的启动与停止</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动docker</span></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;\033[34m启动docker服务...\033[0m&quot;</span></span><br><span class="line">sudo systemctl <span class="built_in">start</span> docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可选：设置Docker开机自启</span></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;\033[34m设置Docker开机自启...\033[0m&quot;</span></span><br><span class="line">sudo systemctl enable docker</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;\033[32mDocker安装与配置完成！\033[0m&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;\033[34m当前Docker安装版本\033[0m&quot;</span></span><br><span class="line">docker <span class="literal">-v</span></span><br></pre></td></tr></table></figure><h3 id="4-安装docker-compose"><a href="#4-安装docker-compose" class="headerlink" title="4.安装docker-compose"></a>4.安装docker-compose</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;\033[33m正在安装wget...\033[0m&quot;</span></span><br><span class="line">yum install <span class="built_in">wget</span> <span class="literal">-y</span></span><br><span class="line"><span class="comment"># 检查是否已安装docker-compose</span></span><br><span class="line"><span class="keyword">if</span> command <span class="literal">-v</span> docker<span class="literal">-compose</span> &amp;&gt; /dev/null</span><br><span class="line">then</span><br><span class="line">    <span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;\e[1;32mDocker Compose 已经安装，版本信息如下：\e[0m&quot;</span></span><br><span class="line">    docker<span class="literal">-compose</span> <span class="literal">-v</span></span><br><span class="line">    <span class="keyword">exit</span> <span class="number">0</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;\e[1;31m未检测到Docker Compose，开始安装...\e[0m&quot;</span></span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载docker-compose</span></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;\e[1;34m正在下载 Docker Compose...\e[0m&quot;</span></span><br><span class="line"><span class="built_in">wget</span> <span class="literal">-O</span> /opt/docker<span class="literal">-compose-linux-x86_64</span> https://fj.ly93.cc/<span class="number">16</span>/<span class="number">1561839396</span>/docker<span class="literal">-compose-linux-x86_64</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改权限</span></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;\e[1;34m修改权限...\e[0m&quot;</span></span><br><span class="line">chmod +x /opt/docker<span class="literal">-compose-linux-x86_64</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 移动到/usr/bin</span></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;\e[1;34m移动文件到 /usr/bin 目录...\e[0m&quot;</span></span><br><span class="line"><span class="built_in">mv</span> /opt/docker<span class="literal">-compose-linux-x86_64</span> /usr/bin/docker<span class="literal">-compose</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证安装结果</span></span><br><span class="line"><span class="keyword">if</span> command <span class="literal">-v</span> docker<span class="literal">-compose</span> &amp;&gt; /dev/null</span><br><span class="line">then</span><br><span class="line">    <span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;\e[1;32mDocker Compose 安装成功，版本信息如下：\e[0m&quot;</span></span><br><span class="line">    docker<span class="literal">-compose</span> <span class="literal">-v</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;\e[1;31mDocker Compose 安装失败，请检查脚本和网络连接。\e[0m&quot;</span></span><br><span class="line">    <span class="keyword">exit</span> <span class="number">1</span></span><br><span class="line">fi</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="5-搭建私有化仓库并上传JAVA8"><a href="#5-搭建私有化仓库并上传JAVA8" class="headerlink" title="5.搭建私有化仓库并上传JAVA8"></a>5.搭建私有化仓库并上传JAVA8</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取本机IP地址</span></span><br><span class="line">LOCAL_IP=<span class="variable">$</span>(hostname <span class="literal">-I</span> | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义颜色变量</span></span><br><span class="line">RED=<span class="string">&#x27;\033[0;31m&#x27;</span></span><br><span class="line">GREEN=<span class="string">&#x27;\033[0;32m&#x27;</span></span><br><span class="line">YELLOW=<span class="string">&#x27;\033[0;33m&#x27;</span></span><br><span class="line">BLUE=<span class="string">&#x27;\033[0;34m&#x27;</span></span><br><span class="line">PURPLE=<span class="string">&#x27;\033[0;35m&#x27;</span></span><br><span class="line">CYAN=<span class="string">&#x27;\033[0;36m&#x27;</span></span><br><span class="line">RESET=<span class="string">&#x27;\033[0m&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印标题</span></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;<span class="variable">$</span>&#123;PURPLE&#125;==========搭建私有仓库并上传JAVA:8-jre镜像===========<span class="variable">$</span>&#123;RESET&#125;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 步骤1</span></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;<span class="variable">$</span>&#123;BLUE&#125;[1] 上传registry.tar至/opt目录下<span class="variable">$</span>&#123;RESET&#125;&quot;</span></span><br><span class="line"><span class="built_in">wget</span> https://fj.ly93.cc/<span class="number">16</span>/<span class="number">1562156614</span>/registry.tar <span class="literal">-P</span> /opt/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 步骤2</span></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;<span class="variable">$</span>&#123;BLUE&#125;[2] 开启docker服务<span class="variable">$</span>&#123;RESET&#125;&quot;</span></span><br><span class="line">systemctl <span class="built_in">start</span> docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 步骤3</span></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;<span class="variable">$</span>&#123;BLUE&#125;[3] 导入镜像<span class="variable">$</span>&#123;RESET&#125;&quot;</span></span><br><span class="line">docker load <span class="literal">-i</span> /opt/registry.tar</span><br><span class="line"></span><br><span class="line"><span class="comment"># 步骤4</span></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;<span class="variable">$</span>&#123;BLUE&#125;[4] 启动私有仓库容器<span class="variable">$</span>&#123;RESET&#125;&quot;</span></span><br><span class="line">docker run <span class="literal">-di</span> <span class="literal">--name</span>=registry <span class="literal">-p</span> <span class="number">5000</span>:<span class="number">5000</span> registry</span><br><span class="line"></span><br><span class="line"><span class="comment"># 步骤5</span></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;<span class="variable">$</span>&#123;BLUE&#125;[5] 打开浏览器验证<span class="variable">$</span>&#123;RESET&#125;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;<span class="variable">$</span>&#123;YELLOW&#125;输入地址http://<span class="variable">$</span>&#123;LOCAL_IP&#125;:5000/v2/_catalog看到&#123;&quot;</span>repositories<span class="string">&quot;:[]&#125; 表示私有仓库搭建成功并且内容为空<span class="variable">$</span>&#123;RESET&#125;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 步骤6</span></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;<span class="variable">$</span>&#123;BLUE&#125;[6] 修改daemon.json<span class="variable">$</span>&#123;RESET&#125;&quot;</span></span><br><span class="line">printf <span class="string">&#x27;&#123;&quot;insecure-registries&quot;:[&quot;%s:5000&quot;]&#125;&#x27;</span> <span class="string">&quot;<span class="variable">$</span>&#123;LOCAL_IP&#125;&quot;</span> &gt; /etc/docker/daemon.json</span><br><span class="line"></span><br><span class="line"><span class="comment"># 步骤7</span></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;<span class="variable">$</span>&#123;BLUE&#125;[7] 重启docker服务<span class="variable">$</span>&#123;RESET&#125;&quot;</span></span><br><span class="line">systemctl restart docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 步骤8</span></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;<span class="variable">$</span>&#123;BLUE&#125;[8] 上传java.tar至/opt目录下,导入镜像<span class="variable">$</span>&#123;RESET&#125;&quot;</span></span><br><span class="line"><span class="built_in">wget</span> https://fj.ly93.cc/<span class="number">16</span>/<span class="number">1562405515</span>/java.tar <span class="literal">-P</span> /opt/</span><br><span class="line">docker load <span class="literal">-i</span> /opt/java.tar</span><br><span class="line"></span><br><span class="line"><span class="comment"># 步骤9</span></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;<span class="variable">$</span>&#123;BLUE&#125;[9] 标记此镜像为私有仓库的镜像<span class="variable">$</span>&#123;RESET&#125;&quot;</span></span><br><span class="line">docker tag <span class="number">192.168</span>.<span class="number">31.151</span>:<span class="number">5000</span>/java:<span class="number">8</span><span class="literal">-jre</span> <span class="variable">$</span>&#123;LOCAL_IP&#125;:<span class="number">5000</span>/java:<span class="number">8</span><span class="literal">-jre</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 步骤10</span></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;<span class="variable">$</span>&#123;BLUE&#125;[10] 再次启动私服容器<span class="variable">$</span>&#123;RESET&#125;&quot;</span></span><br><span class="line">docker <span class="built_in">start</span> registry</span><br><span class="line"></span><br><span class="line"><span class="comment"># 步骤11</span></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;<span class="variable">$</span>&#123;BLUE&#125;[11] 上传标记的镜像<span class="variable">$</span>&#123;RESET&#125;&quot;</span></span><br><span class="line">docker push <span class="variable">$</span>&#123;LOCAL_IP&#125;:<span class="number">5000</span>/java:<span class="number">8</span><span class="literal">-jre</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 步骤12</span></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;<span class="variable">$</span>&#123;BLUE&#125;[12] 浏览器验证<span class="variable">$</span>&#123;RESET&#125;,<span class="variable">$</span>&#123;YELLOW&#125;输入地址http://<span class="variable">$</span>&#123;LOCAL_IP&#125;:5000/v2/_catalog&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;<span class="variable">$</span>&#123;GREEN&#125;搭建私有仓库并上传JAVA:8-jre镜像成功!<span class="variable">$</span>&#123;RESET&#125;&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>环境都安装成功</p><p>JDK17</p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/24/21-17-36-image-20240624190324668-790ccc.png" alt="image-20240624190324668"></p><p>MAVEN</p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/24/21-17-39-image-20240624191136345-f1d325.png" alt="image-20240624191136345"></p><p>Docker_compose</p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/24/21-17-42-image-20240624191254676-789598.png" alt="image-20240624191254676"></p><p>私有化仓库</p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/22-43-25-image-20240625224325791-b917c8.png" alt="image-20240625224325791"></p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/23-16-08-image-20240625231608008-536b20.png" alt="image-20240625231608008"></p></blockquote><h2 id="第二步：代码环境准备"><a href="#第二步：代码环境准备" class="headerlink" title="第二步：代码环境准备"></a>第二步：代码环境准备</h2><blockquote><p>源码文件下载地址：<a href="https://fj.ly93.cc/16/1562681168/microservice.zip">https://fj.ly93.cc/16/1562681168/microservice.zip</a><br>（如果觉得这部分自己手动操作麻烦可以直接跳转到一键摆脱双手模式） <a href="#%E4%B8%80%E9%94%AE%E5%8C%96%E8%84%9A%E6%9C%AC%E5%BD%BB%E5%BA%95%E6%91%86%E8%84%B1%E5%8F%8C%E6%89%8B%E6%93%8D%E4%BD%9C">跳转</a></p></blockquote><h3 id="1-修改pom配置文件"><a href="#1-修改pom配置文件" class="headerlink" title="1.修改pom配置文件"></a>1.修改pom配置文件</h3><p>全局替换pom文件里的私有仓库地址的IP地址为自己的IP地址</p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/23-37-38-0d13bbbefe768d0e3469394a4281e04-a797cd.png" alt="0d13bbbefe768d0e3469394a4281e04"></p><h3 id="2-四个子模块分别添加Dockerfile文件"><a href="#2-四个子模块分别添加Dockerfile文件" class="headerlink" title="2.四个子模块分别添加Dockerfile文件"></a>2.四个子模块分别添加Dockerfile文件</h3><h4 id="①microservice-eureka-server"><a href="#①microservice-eureka-server" class="headerlink" title="①microservice-eureka-server"></a>①microservice-eureka-server</h4><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> <span class="number">192.168</span>.<span class="number">31.151</span>:<span class="number">5000</span>/java:<span class="number">8</span>-jre</span><br><span class="line"><span class="keyword">MAINTAINER</span> sh &lt;<span class="number">3300519161</span>@qq.com&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ADD</span><span class="language-bash"> ./target/microservice-eureka-server-0.0.1-SNAPSHOT.jar /app/microservice-eureka-service.jar</span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;java&quot;</span>, <span class="string">&quot;-Xmx200m&quot;</span>, <span class="string">&quot;-jar&quot;</span>, <span class="string">&quot;/app/microservice-eureka-service.jar&quot;</span>]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">8761</span></span><br></pre></td></tr></table></figure><h4 id="②microservice-gateway-zuul"><a href="#②microservice-gateway-zuul" class="headerlink" title="②microservice-gateway-zuul"></a>②microservice-gateway-zuul</h4><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> <span class="number">192.168</span>.<span class="number">31.151</span>:<span class="number">5000</span>/java:<span class="number">8</span>-jre</span><br><span class="line"><span class="keyword">MAINTAINER</span> sh &lt;<span class="number">3300519161</span>@qq.com&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ADD</span><span class="language-bash"> ./target/microservice-gateway-zuul-0.0.1-SNAPSHOT.jar /app/microservice-gateway-zuul.jar</span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;java&quot;</span>, <span class="string">&quot;-Xmx200m&quot;</span>, <span class="string">&quot;-jar&quot;</span>, <span class="string">&quot;/app/microservice-gateway-zuul.jar&quot;</span>]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">8050</span></span><br></pre></td></tr></table></figure><h4 id="③microservice-orderservice"><a href="#③microservice-orderservice" class="headerlink" title="③microservice-orderservice"></a>③microservice-orderservice</h4><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> <span class="number">192.168</span>.<span class="number">31.151</span>:<span class="number">5000</span>/java:<span class="number">8</span>-jre</span><br><span class="line"><span class="keyword">MAINTAINER</span> sh &lt;<span class="number">3300519161</span>@qq.com&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ADD</span><span class="language-bash"> ./target/microservice-orderservice-0.0.1-SNAPSHOT.jar /app/microservice-orderservice.jar</span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;java&quot;</span>, <span class="string">&quot;-Xmx200m&quot;</span>, <span class="string">&quot;-jar&quot;</span>, <span class="string">&quot;/app/microservice-orderservice.jar&quot;</span>]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">7900</span></span><br></pre></td></tr></table></figure><h4 id="④microservice-userservice"><a href="#④microservice-userservice" class="headerlink" title="④microservice-userservice"></a>④microservice-userservice</h4><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> <span class="number">192.168</span>.<span class="number">31.151</span>:<span class="number">5000</span>/java:<span class="number">8</span>-jre</span><br><span class="line"><span class="keyword">MAINTAINER</span> sh &lt;<span class="number">3300519161</span>@qq.com&gt;</span><br><span class="line"><span class="keyword">ADD</span><span class="language-bash"> ./target/microservice-userservice-0.0.1-SNAPSHOT.jar \</span></span><br><span class="line"><span class="language-bash">     /app/microservice-userservice.jar</span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;java&quot;</span>, <span class="string">&quot;-Xmx200m&quot;</span>, <span class="string">&quot;-jar&quot;</span>, <span class="string">&quot;/app/microservice-userservice.jar&quot;</span>]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">8030</span></span><br></pre></td></tr></table></figure><h3 id="3-修改docker-compose-xml-（替换成自己的IP地址以及数据库密码）"><a href="#3-修改docker-compose-xml-（替换成自己的IP地址以及数据库密码）" class="headerlink" title="3.修改docker-compose.xml （替换成自己的IP地址以及数据库密码）"></a>3.修改docker-compose.xml （替换成自己的IP地址以及数据库密码）</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">&quot;3&quot;</span></span><br><span class="line">services:</span><br><span class="line">  mysql:</span><br><span class="line">    image: mysql:<span class="number">5.6</span></span><br><span class="line">    restart: on-failure</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="number">3306</span>:<span class="number">3306</span></span><br><span class="line">    volumes:</span><br><span class="line">      - microservice-mysql:/var/lib/mysql</span><br><span class="line">    networks:</span><br><span class="line">      - microservice-net</span><br><span class="line">    environment:</span><br><span class="line">      MYSQL_ROOT_PASSWORD: <span class="number">215830</span></span><br><span class="line">      MYSQL_DATABASE: microservice_mallmanagement</span><br><span class="line">    deploy:</span><br><span class="line">      replicas: <span class="number">1</span></span><br><span class="line">      restart_policy:</span><br><span class="line">        condition: on-failure</span><br><span class="line">      placement:</span><br><span class="line">        constraints: [node.role == manager]</span><br><span class="line"></span><br><span class="line">  eureka-server:</span><br><span class="line">    image: <span class="number">192.168</span>.<span class="number">31.151</span>:<span class="number">5000</span>/microservice-eureka-server:<span class="number">0.0</span>.<span class="number">1</span>-SNAPSHOT</span><br><span class="line">    restart: on-failure</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="number">8761</span>:<span class="number">8761</span></span><br><span class="line">    networks:</span><br><span class="line">      - microservice-net</span><br><span class="line">    deploy:</span><br><span class="line">      replicas: <span class="number">1</span></span><br><span class="line">      restart_policy:</span><br><span class="line">        condition: on-failure</span><br><span class="line"></span><br><span class="line">  gateway-zuul:</span><br><span class="line">    image: <span class="number">192.168</span>.<span class="number">31.151</span>:<span class="number">5000</span>/microservice-gateway-zuul:<span class="number">0.0</span>.<span class="number">1</span>-SNAPSHOT</span><br><span class="line">    restart: on-failure</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="number">8050</span>:<span class="number">8050</span></span><br><span class="line">    networks:</span><br><span class="line">      - microservice-net</span><br><span class="line">    depends_on:</span><br><span class="line">      - eureka-server</span><br><span class="line">    deploy:</span><br><span class="line">      replicas: <span class="number">1</span></span><br><span class="line">      restart_policy:</span><br><span class="line">        condition: on-failure</span><br><span class="line">      placement:</span><br><span class="line">        constraints: [node.role == manager]</span><br><span class="line"></span><br><span class="line">  order-service:</span><br><span class="line">    image: <span class="number">192.168</span>.<span class="number">31.151</span>:<span class="number">5000</span>/microservice-orderservice:<span class="number">0.0</span>.<span class="number">1</span>-SNAPSHOT</span><br><span class="line">    restart: on-failure</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="number">7900</span>:<span class="number">7900</span></span><br><span class="line">    networks:</span><br><span class="line">      - microservice-net</span><br><span class="line">    depends_on:</span><br><span class="line">      - mysql</span><br><span class="line">      - eureka-server</span><br><span class="line">    deploy:</span><br><span class="line">      replicas: <span class="number">2</span></span><br><span class="line">      restart_policy:</span><br><span class="line">        condition: on-failure</span><br><span class="line"></span><br><span class="line">  <span class="keyword">user</span>-service:</span><br><span class="line">    image: <span class="number">192.168</span>.<span class="number">31.151</span>:<span class="number">5000</span>/microservice-userservice:<span class="number">0.0</span>.<span class="number">1</span>-SNAPSHOT</span><br><span class="line">    restart: on-failure</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="number">8030</span>:<span class="number">8030</span></span><br><span class="line">    networks:</span><br><span class="line">      - microservice-net</span><br><span class="line">    depends_on:</span><br><span class="line">      - mysql</span><br><span class="line">      - eureka-server</span><br><span class="line">    deploy:</span><br><span class="line">      replicas: <span class="number">2</span></span><br><span class="line">      restart_policy:</span><br><span class="line">        condition: on-failure</span><br><span class="line"></span><br><span class="line">  visualizer:</span><br><span class="line">    image: dockersamples/visualizer:stable</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="number">8081</span>:<span class="number">8080</span></span><br><span class="line">    volumes:</span><br><span class="line">      - /var/<span class="keyword">run</span><span class="language-bash">/docker.sock:/var/run/docker.sock</span></span><br><span class="line">    deploy:</span><br><span class="line">      placement:</span><br><span class="line">        constraints: [node.role == manager]</span><br><span class="line">    networks:</span><br><span class="line">      - microservice-net</span><br><span class="line"></span><br><span class="line">networks:</span><br><span class="line">  microservice-net:</span><br><span class="line">volumes:</span><br><span class="line">  microservice-mysql:</span><br></pre></td></tr></table></figure><h3 id="4-将源码文件打包上传虚拟机"><a href="#4-将源码文件打包上传虚拟机" class="headerlink" title="4.将源码文件打包上传虚拟机"></a>4.将源码文件打包上传虚拟机</h3><blockquote><p>利用虚拟机里面的maven工具构建镜像。</p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /micreservice</span><br><span class="line"><span class="built_in">cd</span> /micreservice</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/23-56-49-2b0d720b50d20c0797fb2ac29b43d07-7cae3e.png" alt="2b0d720b50d20c0797fb2ac29b43d07"></p><h4 id="利用maven工具构建镜像脚本"><a href="#利用maven工具构建镜像脚本" class="headerlink" title="利用maven工具构建镜像脚本"></a>利用maven工具构建镜像脚本</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取本机静态 IP 地址</span></span><br><span class="line">LOCAL_IP=<span class="variable">$</span>(hostname <span class="literal">-I</span> | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 彩色输出函数</span></span><br><span class="line">print_color() &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;\033[<span class="variable">$</span>&#123;1&#125;m<span class="variable">$</span>&#123;2&#125;\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建目录</span></span><br><span class="line">print_color <span class="string">&quot;34&quot;</span> <span class="string">&quot;1、创建目录 /microservice&quot;</span></span><br><span class="line">mkdir /microservice</span><br><span class="line"><span class="built_in">cd</span> /microservice</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上传压缩包</span></span><br><span class="line">print_color <span class="string">&quot;34&quot;</span> <span class="string">&quot;2、上传 microservice.zip 至 /microservice 目录&quot;</span></span><br><span class="line"><span class="comment"># 这里需要手动上传 microservice.zip 压缩包</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压文件</span></span><br><span class="line">print_color <span class="string">&quot;34&quot;</span> <span class="string">&quot;3、解压 microservice.zip&quot;</span></span><br><span class="line"><span class="keyword">if</span> ! command <span class="literal">-v</span> unzip &amp;&gt; /dev/null; then</span><br><span class="line">    print_color <span class="string">&quot;33&quot;</span> <span class="string">&quot;未安装 unzip,正在安装...&quot;</span></span><br><span class="line">    yum <span class="literal">-y</span> install unzip</span><br><span class="line">fi</span><br><span class="line">unzip microservice.zip</span><br><span class="line"></span><br><span class="line"><span class="comment">#进入解压文件夹</span></span><br><span class="line">printf <span class="string">&quot;<span class="variable">$</span>&#123;YELLOW&#125;切入microservice-mallmanagement文件夹。。。<span class="variable">$</span>&#123;NC&#125;\n&quot;</span></span><br><span class="line"><span class="built_in">cd</span> microservice<span class="literal">-mallmanagement</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 Maven 使用阿里云镜像源</span></span><br><span class="line">printf <span class="string">&quot;<span class="variable">$</span>&#123;YELLOW&#125;设置 Maven 使用阿里云镜像源...<span class="variable">$</span>&#123;NC&#125;\n&quot;</span></span><br><span class="line">mvn mirror:go <span class="literal">-Dmirror</span>.url=https://maven.aliyun.com/repository/public</span><br><span class="line"></span><br><span class="line"><span class="comment"># 构建镜像</span></span><br><span class="line">print_color <span class="string">&quot;34&quot;</span> <span class="string">&quot;4、进入 microservice 目录并构建镜像&quot;</span></span><br><span class="line"><span class="built_in">cd</span> microservice</span><br><span class="line">mvn install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证结果</span></span><br><span class="line">print_color <span class="string">&quot;34&quot;</span> <span class="string">&quot;5、验证构建结果&quot;</span></span><br><span class="line">print_color <span class="string">&quot;32&quot;</span> <span class="string">&quot;访问 http://<span class="variable">$</span>&#123;LOCAL_IP&#125;:5000/v2/_catalog 查看镜像库&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="一键化脚本彻底摆脱双手操作"><a href="#一键化脚本彻底摆脱双手操作" class="headerlink" title="一键化脚本彻底摆脱双手操作"></a>一键化脚本彻底摆脱双手操作</h2><blockquote><p>MAINTAINER sh <a href="mailto:&#x33;&#51;&#x30;&#48;&#x35;&#49;&#57;&#49;&#54;&#x31;&#x40;&#113;&#113;&#46;&#99;&#x6f;&#x6d;">&#x33;&#51;&#x30;&#48;&#x35;&#49;&#57;&#49;&#54;&#x31;&#x40;&#113;&#113;&#46;&#99;&#x6f;&#x6d;</a> 替换成自己的信息，随便什么这里是写作者的信息的。。。</p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义颜色变量</span></span><br><span class="line">RED=<span class="string">&#x27;\033[0;31m&#x27;</span></span><br><span class="line">GREEN=<span class="string">&#x27;\033[0;32m&#x27;</span></span><br><span class="line">YELLOW=<span class="string">&#x27;\033[0;33m&#x27;</span></span><br><span class="line">BLUE=<span class="string">&#x27;\033[0;34m&#x27;</span></span><br><span class="line">NC=<span class="string">&#x27;\033[0m&#x27;</span> <span class="comment"># No Color</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取本机 IP 地址</span></span><br><span class="line">LOCAL_IP=<span class="variable">$</span>(hostname <span class="literal">-I</span> | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印开始信息</span></span><br><span class="line">printf <span class="string">&quot;<span class="variable">$</span>&#123;GREEN&#125;开始执行脚本...<span class="variable">$</span>&#123;NC&#125;\n&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建 microservice 目录并进入</span></span><br><span class="line">printf <span class="string">&quot;<span class="variable">$</span>&#123;YELLOW&#125;创建 microservice 目录...<span class="variable">$</span>&#123;NC&#125;\n&quot;</span></span><br><span class="line">mkdir <span class="literal">-p</span> /microservice</span><br><span class="line"><span class="built_in">cd</span> /microservice</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载源码文件</span></span><br><span class="line">printf <span class="string">&quot;<span class="variable">$</span>&#123;YELLOW&#125;下载源码文件...<span class="variable">$</span>&#123;NC&#125;\n&quot;</span></span><br><span class="line"><span class="built_in">wget</span> https://fj.ly93.cc/<span class="number">16</span>/<span class="number">1562883351</span>/microservice.zip</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查是否安装了 unzip 工具</span></span><br><span class="line"><span class="keyword">if</span> ! command <span class="literal">-v</span> unzip &amp;&gt; /dev/null; then</span><br><span class="line">    printf <span class="string">&quot;<span class="variable">$</span>&#123;YELLOW&#125;未安装 unzip 工具,开始安装...<span class="variable">$</span>&#123;NC&#125;\n&quot;</span></span><br><span class="line">    sudo yum install <span class="literal">-y</span> unzip</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压源码文件</span></span><br><span class="line">printf <span class="string">&quot;<span class="variable">$</span>&#123;YELLOW&#125;解压源码文件...<span class="variable">$</span>&#123;NC&#125;\n&quot;</span></span><br><span class="line">unzip microservice.zip</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入解压文件夹</span></span><br><span class="line">printf <span class="string">&quot;<span class="variable">$</span>&#123;YELLOW&#125;切入 microservice-mallmanagement 文件夹...<span class="variable">$</span>&#123;NC&#125;\n&quot;</span></span><br><span class="line"><span class="built_in">cd</span> microservice<span class="literal">-mallmanagement</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 替换 pom.xml 文件中的 IP 地址</span></span><br><span class="line">printf <span class="string">&quot;<span class="variable">$</span>&#123;YELLOW&#125;替换 pom.xml 文件中的 IP 地址...<span class="variable">$</span>&#123;NC&#125;\n&quot;</span></span><br><span class="line">sed <span class="literal">-i</span> <span class="string">&quot;s/192.168.31.151/<span class="variable">$LOCAL_IP</span>/g&quot;</span> microservice<span class="literal">-eureka-server</span>/pom.xml</span><br><span class="line">sed <span class="literal">-i</span> <span class="string">&quot;s/192.168.31.151/<span class="variable">$LOCAL_IP</span>/g&quot;</span> microservice<span class="literal">-gateway-zuul</span>/pom.xml</span><br><span class="line">sed <span class="literal">-i</span> <span class="string">&quot;s/192.168.31.151/<span class="variable">$LOCAL_IP</span>/g&quot;</span> microservice<span class="literal">-orderservice</span>/pom.xml</span><br><span class="line">sed <span class="literal">-i</span> <span class="string">&quot;s/192.168.31.151/<span class="variable">$LOCAL_IP</span>/g&quot;</span> microservice<span class="literal">-userservice</span>/pom.xml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 Dockerfile 文件中的 IP 地址</span></span><br><span class="line">printf <span class="string">&quot;<span class="variable">$</span>&#123;YELLOW&#125;修改 Dockerfile 文件中的 IP 地址...<span class="variable">$</span>&#123;NC&#125;\n&quot;</span></span><br><span class="line">sed <span class="literal">-i</span> <span class="string">&quot;s/192.168.31.151/<span class="variable">$LOCAL_IP</span>/g&quot;</span> microservice<span class="literal">-eureka-server</span>/Dockerfile</span><br><span class="line">sed <span class="literal">-i</span> <span class="string">&quot;s/192.168.31.151/<span class="variable">$LOCAL_IP</span>/g&quot;</span> microservice<span class="literal">-gateway-zuul</span>/Dockerfile</span><br><span class="line">sed <span class="literal">-i</span> <span class="string">&quot;s/192.168.31.151/<span class="variable">$LOCAL_IP</span>/g&quot;</span> microservice<span class="literal">-orderservice</span>/Dockerfile</span><br><span class="line">sed <span class="literal">-i</span> <span class="string">&quot;s/192.168.31.151/<span class="variable">$LOCAL_IP</span>/g&quot;</span> microservice<span class="literal">-userservice</span>/Dockerfile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 替换 docker-compose.yml 文件中的 IP 地址</span></span><br><span class="line">printf <span class="string">&quot;<span class="variable">$</span>&#123;YELLOW&#125;替换 docker-compose.yml 文件中的 IP 地址...<span class="variable">$</span>&#123;NC&#125;\n&quot;</span></span><br><span class="line">sed <span class="literal">-i</span> <span class="string">&quot;s/192.168.31.151/<span class="variable">$LOCAL_IP</span>/g&quot;</span> docker<span class="literal">-compose</span>.yml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 替换 docker-compose-swarm.yml 文件中的 IP 地址</span></span><br><span class="line">printf <span class="string">&quot;<span class="variable">$</span>&#123;YELLOW&#125;替换 docker-compose-swarm.yml 文件中的 IP 地址...<span class="variable">$</span>&#123;NC&#125;\n&quot;</span></span><br><span class="line">sed <span class="literal">-i</span> <span class="string">&quot;s/192.168.31.151/<span class="variable">$LOCAL_IP</span>/g&quot;</span> docker<span class="literal">-compose-swarm</span>.yml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 Maven 使用阿里云镜像源</span></span><br><span class="line">printf <span class="string">&quot;<span class="variable">$</span>&#123;YELLOW&#125;设置 Maven 使用阿里云镜像源...<span class="variable">$</span>&#123;NC&#125;\n&quot;</span></span><br><span class="line">mvn mirror:go <span class="literal">-Dmirror</span>.url=https://maven.aliyun.com/repository/public</span><br><span class="line"></span><br><span class="line"><span class="comment"># 构建镜像</span></span><br><span class="line">printf <span class="string">&quot;<span class="variable">$</span>&#123;YELLOW&#125;开始构建镜像...<span class="variable">$</span>&#123;NC&#125;\n&quot;</span></span><br><span class="line">mvn clean install <span class="literal">-Dmaven</span>.test.skip=true</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证镜像库</span></span><br><span class="line">printf <span class="string">&quot;<span class="variable">$</span>&#123;GREEN&#125;验证镜像库...<span class="variable">$</span>&#123;NC&#125;\n&quot;</span></span><br><span class="line"><span class="built_in">curl</span> http://<span class="variable">$LOCAL_IP:5000</span>/v2/_catalog</span><br><span class="line"></span><br><span class="line">printf <span class="string">&quot;<span class="variable">$</span>&#123;GREEN&#125;脚本执行完成！<span class="variable">$</span>&#123;NC&#125;\n&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>验证成功：</p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/26/01-48-40-image-20240626014840148-1b01bc.png" alt="image-20240626014840148"></p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/26/01-01-39-01-00-25-image-20240626010025515-2c17b8-4426e9.png" alt="image-20240626010025515"></p></blockquote><h2 id="第三步：使用docker-compose工具启动项目"><a href="#第三步：使用docker-compose工具启动项目" class="headerlink" title="第三步：使用docker-compose工具启动项目"></a>第三步：使用docker-compose工具启动项目</h2><blockquote><p>老样子使用shell脚本构建</p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取本机IP地址</span></span><br><span class="line">LOCAL_IP=<span class="variable">$</span>(hostname <span class="literal">-I</span> | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置颜色变量</span></span><br><span class="line">RED=<span class="string">&#x27;\033[0;31m&#x27;</span></span><br><span class="line">GREEN=<span class="string">&#x27;\033[0;32m&#x27;</span></span><br><span class="line">BLUE=<span class="string">&#x27;\033[0;34m&#x27;</span></span><br><span class="line">NC=<span class="string">&#x27;\033[0m&#x27;</span> <span class="comment"># 无颜色</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载MySQL镜像</span></span><br><span class="line">printf <span class="string">&quot;<span class="variable">$</span>&#123;BLUE&#125;下载MySQL镜像...<span class="variable">$</span>&#123;NC&#125;\n&quot;</span></span><br><span class="line"><span class="built_in">wget</span> <span class="literal">-O</span> /opt/mysql.tar https://fj.ly93.cc/<span class="number">16</span>/<span class="number">1562156665</span>/mysql.tar</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$</span>? -<span class="type">eq</span> <span class="number">0</span> ]; then</span><br><span class="line">    printf <span class="string">&quot;<span class="variable">$</span>&#123;GREEN&#125;MySQL镜像下载成功!<span class="variable">$</span>&#123;NC&#125;\n\n&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    printf <span class="string">&quot;<span class="variable">$</span>&#123;RED&#125;MySQL镜像下载失败,请检查网络连接。<span class="variable">$</span>&#123;NC&#125;\n&quot;</span></span><br><span class="line">    <span class="keyword">exit</span> <span class="number">1</span></span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入MySQL镜像</span></span><br><span class="line">printf <span class="string">&quot;<span class="variable">$</span>&#123;BLUE&#125;导入MySQL镜像...<span class="variable">$</span>&#123;NC&#125;\n&quot;</span></span><br><span class="line">docker load <span class="literal">-i</span> /opt/mysql.tar</span><br><span class="line">printf <span class="string">&quot;<span class="variable">$</span>&#123;GREEN&#125;MySQL镜像导入成功!<span class="variable">$</span>&#123;NC&#125;\n\n&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;<span class="variable">$</span>&#123;BLUE&#125;标记此镜像为私有仓库的镜像<span class="variable">$</span>&#123;RESET&#125;&quot;</span></span><br><span class="line">docker tag mysql:<span class="number">5.6</span> <span class="variable">$</span>&#123;LOCAL_IP&#125;:<span class="number">5000</span>/mysql:<span class="number">5.6</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 步骤10</span></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;<span class="variable">$</span>&#123;BLUE&#125;再次启动私服容器<span class="variable">$</span>&#123;RESET&#125;&quot;</span></span><br><span class="line">docker <span class="built_in">start</span> registry</span><br><span class="line"></span><br><span class="line"><span class="comment"># 步骤11</span></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;<span class="variable">$</span>&#123;BLUE&#125;上传标记的镜像<span class="variable">$</span>&#123;RESET&#125;&quot;</span></span><br><span class="line">docker push <span class="variable">$</span>&#123;LOCAL_IP&#125;:<span class="number">5000</span>/mysql:<span class="number">5.6</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载Visualizer镜像</span></span><br><span class="line">printf <span class="string">&quot;<span class="variable">$</span>&#123;BLUE&#125;下载Visualizer镜像...<span class="variable">$</span>&#123;NC&#125;\n&quot;</span></span><br><span class="line"><span class="built_in">wget</span> <span class="literal">-O</span> /opt/visualizer.tar https://fj.ly93.cc/<span class="number">16</span>/<span class="number">1563405042</span>/visualizer.tar</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$</span>? -<span class="type">eq</span> <span class="number">0</span> ]; then</span><br><span class="line">    printf <span class="string">&quot;<span class="variable">$</span>&#123;GREEN&#125;Visualizer镜像下载成功!<span class="variable">$</span>&#123;NC&#125;\n\n&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    printf <span class="string">&quot;<span class="variable">$</span>&#123;RED&#125;Visualizer镜像下载失败,请检查网络连接。<span class="variable">$</span>&#123;NC&#125;\n&quot;</span></span><br><span class="line">    <span class="keyword">exit</span> <span class="number">1</span></span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入Visualizer镜像</span></span><br><span class="line">printf <span class="string">&quot;<span class="variable">$</span>&#123;BLUE&#125;导入Visualizer镜像...<span class="variable">$</span>&#123;NC&#125;\n&quot;</span></span><br><span class="line">docker load <span class="literal">-i</span> /opt/visualizer.tar</span><br><span class="line">printf <span class="string">&quot;<span class="variable">$</span>&#123;GREEN&#125;Visualizer镜像导入成功!<span class="variable">$</span>&#123;NC&#125;\n\n&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;<span class="variable">$</span>&#123;BLUE&#125;标记此镜像为私有仓库的镜像<span class="variable">$</span>&#123;RESET&#125;&quot;</span></span><br><span class="line">docker tag dockersamples/visualizer:stable <span class="variable">$</span>&#123;LOCAL_IP&#125;:<span class="number">5000</span>/dockersamples/visualizer:stable</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上传Visualizer镜像</span></span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-e</span> <span class="string">&quot;<span class="variable">$</span>&#123;BLUE&#125;上传Visualizer镜像<span class="variable">$</span>&#123;RESET&#125;&quot;</span></span><br><span class="line">docker push <span class="variable">$</span>&#123;LOCAL_IP&#125;:<span class="number">5000</span>/dockersamples/visualizer:stable</span><br><span class="line"></span><br><span class="line"><span class="comment"># 替换 docker-compose.yml 文件中的 mysql:5.6 和 dockersamples/visualizer:stable</span></span><br><span class="line">sed <span class="literal">-i</span> <span class="string">&quot;s|mysql:5.6|<span class="variable">$</span>&#123;LOCAL_IP&#125;:5000/mysql:5.6|g&quot;</span> /microservice/microservice<span class="literal">-mallmanagement</span>/docker<span class="literal">-compose</span>.yml</span><br><span class="line">sed <span class="literal">-i</span> <span class="string">&quot;s|dockersamples/visualizer:stable|<span class="variable">$</span>&#123;LOCAL_IP&#125;:5000/dockersamples/visualizer:stable|g&quot;</span> /microservice/microservice<span class="literal">-mallmanagement</span>/docker<span class="literal">-compose</span>.yml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入项目目录并启动Docker Compose</span></span><br><span class="line">printf <span class="string">&quot;<span class="variable">$</span>&#123;BLUE&#125;进入项目目录并启动Docker Compose...<span class="variable">$</span>&#123;NC&#125;\n&quot;</span></span><br><span class="line"><span class="built_in">cd</span> /microservice/microservice<span class="literal">-mallmanagement</span></span><br><span class="line">docker<span class="literal">-compose</span> up <span class="literal">-d</span></span><br><span class="line">printf <span class="string">&quot;<span class="variable">$</span>&#123;GREEN&#125;Docker Compose启动成功!<span class="variable">$</span>&#123;NC&#125;\n\n&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看容器状态</span></span><br><span class="line">printf <span class="string">&quot;<span class="variable">$</span>&#123;BLUE&#125;查看容器状态...<span class="variable">$</span>&#123;NC&#125;\n&quot;</span></span><br><span class="line">docker <span class="built_in">ps</span></span><br><span class="line">printf <span class="string">&quot;<span class="variable">$</span>&#123;GREEN&#125;容器已成功启动!<span class="variable">$</span>&#123;NC&#125;\n\n&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 浏览器访问</span></span><br><span class="line">printf <span class="string">&quot;<span class="variable">$</span>&#123;BLUE&#125;浏览器访问: http://<span class="variable">$</span>&#123;LOCAL_IP&#125;:8761<span class="variable">$</span>&#123;NC&#125;\n&quot;</span></span><br><span class="line">printf <span class="string">&quot;<span class="variable">$</span>&#123;GREEN&#125;请在浏览器中访问上述链接,验证是否成功启动。<span class="variable">$</span>&#123;NC&#125;\n&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>启动成功：</p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/26/02-23-22-image-20240626022321985-d79c2d.png" alt="image-20240626022321985"></p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/26/02-24-21-image-20240626022421016-43c47c.png" alt="image-20240626022421016"></p></blockquote><h2 id="第四步：构建gogs-jenkins实现自动化部署"><a href="#第四步：构建gogs-jenkins实现自动化部署" class="headerlink" title="第四步：构建gogs+jenkins实现自动化部署"></a>第四步：构建gogs+jenkins实现自动化部署</h2><h3 id="1-先删除之前构建的镜像以及docker-compose容器"><a href="#1-先删除之前构建的镜像以及docker-compose容器" class="headerlink" title="1.先删除之前构建的镜像以及docker-compose容器"></a>1.先删除之前构建的镜像以及docker-compose容器</h3><h4 id="①停止并删除运行容器"><a href="#①停止并删除运行容器" class="headerlink" title="①停止并删除运行容器"></a>①停止并删除运行容器</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker stop <span class="variable">$</span>(docker <span class="built_in">ps</span> <span class="literal">-aq</span>)</span><br><span class="line">docker <span class="built_in">rm</span> <span class="variable">$</span>(docker <span class="built_in">ps</span> <span class="literal">-aq</span>)</span><br></pre></td></tr></table></figure><h4 id="②删除其他有关microservice的镜像"><a href="#②删除其他有关microservice的镜像" class="headerlink" title="②删除其他有关microservice的镜像"></a>②删除其他有关microservice的镜像</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#删除命令</span></span><br><span class="line">docker rmi [<span class="type">IMAGE</span> <span class="type">ID</span>]</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/26/02-34-20-image-20240626023420650-7eeb19.png" alt="image-20240626023420650"></p><h3 id="2-重新启动私有仓库容器并上传java-jre-8"><a href="#2-重新启动私有仓库容器并上传java-jre-8" class="headerlink" title="2.重新启动私有仓库容器并上传java:jre-8"></a>2.重新启动私有仓库容器并上传java:jre-8</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run <span class="literal">-di</span> <span class="literal">--name</span>=registry <span class="literal">-p</span> <span class="number">5000</span>:<span class="number">5000</span> registry</span><br><span class="line">docker push <span class="number">192.168</span>.<span class="number">31.151</span>:<span class="number">5000</span>/java:<span class="number">8</span><span class="literal">-jre</span>  <span class="comment">#注意替换IP</span></span><br></pre></td></tr></table></figure><h2 id="第五步：搭建gogs服务器（可再开一台机子【sh2】）"><a href="#第五步：搭建gogs服务器（可再开一台机子【sh2】）" class="headerlink" title="第五步：搭建gogs服务器（可再开一台机子【sh2】）"></a>第五步：搭建gogs服务器（可再开一台机子【sh2】）</h2><h3 id="①导入gogs镜像"><a href="#①导入gogs镜像" class="headerlink" title="①导入gogs镜像"></a>①导入gogs镜像</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt</span><br><span class="line"><span class="built_in">wget</span> https://fj.ly93.cc/<span class="number">16</span>/<span class="number">1562400565</span>/gogs.tar </span><br><span class="line">docker load <span class="literal">-i</span> /opt/gogs.tar </span><br></pre></td></tr></table></figure><h3 id="②启动容器"><a href="#②启动容器" class="headerlink" title="②启动容器"></a>②启动容器</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run <span class="literal">-d</span> <span class="literal">-p</span> <span class="number">10022</span>:<span class="number">22</span> <span class="literal">-p</span> <span class="number">13000</span>:<span class="number">3000</span> <span class="literal">-v</span> /var/gogs:/<span class="keyword">data</span> gogs/gogs</span><br></pre></td></tr></table></figure><h3 id="③浏览器访问ip-13000，进行初始化设置"><a href="#③浏览器访问ip-13000，进行初始化设置" class="headerlink" title="③浏览器访问ip:13000，进行初始化设置"></a>③浏览器访问ip:13000，进行初始化设置</h3><blockquote><p>注意IP地址替换成二机的其他端口自定义</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/26/03-15-34-image-20240626031534758-da6159.png" alt="image-20240626031534758"></p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/26/02-57-06-image-20240626025706260-6fb6dd.png" alt="image-20240626025706260"></p><h3 id="④配置好后点击立即安装"><a href="#④配置好后点击立即安装" class="headerlink" title="④配置好后点击立即安装"></a>④配置好后点击立即安装</h3><h2 id="第六步：创建仓库并上传代码"><a href="#第六步：创建仓库并上传代码" class="headerlink" title="第六步：创建仓库并上传代码"></a>第六步：创建仓库并上传代码</h2><h3 id="①-创建仓库"><a href="#①-创建仓库" class="headerlink" title="① 创建仓库"></a>① 创建仓库</h3><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/26/02-59-07-image-20240626025907845-3ec68b.png" alt="image-20240626025907845"></p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/26/03-00-05-image-20240626030005074-01f5e5.png" alt="image-20240626030005074"></p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/26/03-06-33-image-20240626030633762-ddf177.png" alt="image-20240626030633762"></p><h3 id="②回到sh1机子上传代码"><a href="#②回到sh1机子上传代码" class="headerlink" title="②回到sh1机子上传代码"></a>②回到sh1机子上传代码</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装git</span></span><br><span class="line">yum install <span class="literal">-y</span> git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换到项目目录</span></span><br><span class="line"><span class="built_in">cd</span> /microservice/microservice<span class="literal">-mallmanagement</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#移除原先存在的.git文件</span></span><br><span class="line"><span class="built_in">rm</span> <span class="literal">-rf</span> .git</span><br><span class="line"><span class="comment"># 初始化git仓库</span></span><br><span class="line">git init</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加所有文件到暂存区</span></span><br><span class="line">git add .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置全局用户名</span></span><br><span class="line">git config <span class="literal">--global</span> user.name <span class="string">&quot;root&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置全局电子邮件地址</span></span><br><span class="line">git config <span class="literal">--global</span> user.email <span class="string">&quot;root@qq.com&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交更改，附带提交信息</span></span><br><span class="line">git commit <span class="literal">-m</span> <span class="string">&quot;first commit&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加远程仓库，注意这里的git地址是上面上传项目生成的地址！</span></span><br><span class="line">git remote add origin http://<span class="number">192.168</span>.<span class="number">31.152</span>:<span class="number">13000</span>/root/microservice.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 推送代码到远程仓库的master分支，并设置默认上游分支</span></span><br><span class="line">git push <span class="literal">-u</span> origin master</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果需要验证密码，请输入管理员账号密码,账号密码就是刚才创建的管理员账号密码</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>提交成功</p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/26/03-22-58-image-20240626032258194-cc0b0c.png" alt="image-20240626032258194"></p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/26/03-23-15-image-20240626032315748-7eff29.png" alt="image-20240626032315748"></p></blockquote><h2 id="第七步：构建jenkins（sh1）"><a href="#第七步：构建jenkins（sh1）" class="headerlink" title="第七步：构建jenkins（sh1）"></a>第七步：构建jenkins（sh1）</h2><h3 id="①jenkins准备"><a href="#①jenkins准备" class="headerlink" title="①jenkins准备"></a>①jenkins准备</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建jenkins目录</span></span><br><span class="line">mkdir /opt/jenkins</span><br><span class="line"><span class="built_in">cd</span> /opt/jenkins</span><br><span class="line"><span class="comment">#下载jenkins.war文件</span></span><br><span class="line"><span class="built_in">wget</span> https://fj.ly93.cc/<span class="number">16</span>/<span class="number">1563555373</span>/jenkins.war </span><br><span class="line"><span class="comment">#提权</span></span><br><span class="line">chmod +x /opt/jenkins/jenkins.war</span><br></pre></td></tr></table></figure><h3 id="②启动jenkiins"><a href="#②启动jenkiins" class="headerlink" title="②启动jenkiins"></a>②启动jenkiins</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#下载字体库</span></span><br><span class="line">yum install dejavu<span class="literal">-sans-fonts</span> <span class="literal">-y</span></span><br><span class="line">yum install fontconfig <span class="literal">-y</span></span><br><span class="line"><span class="built_in">fc</span><span class="literal">-cache</span> <span class="literal">--force</span></span><br><span class="line"><span class="comment">#原神启动</span></span><br><span class="line">java <span class="literal">-jar</span> /opt/jenkins/jenkins.war <span class="literal">--httpPort</span>=<span class="number">9090</span></span><br></pre></td></tr></table></figure><h3 id="④浏览器访问-http-你的IP-9090"><a href="#④浏览器访问-http-你的IP-9090" class="headerlink" title="④浏览器访问 http:&#x2F;&#x2F;你的IP:9090&#x2F;"></a>④浏览器访问 http:&#x2F;&#x2F;你的IP:9090&#x2F;</h3><blockquote><p>运行完后会生成密码</p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/26/03-35-47-image-20240626033547246-e21be2.png" alt="image-20240626033547246"></p></blockquote><h3 id="⑤将生成的密码贴入首页"><a href="#⑤将生成的密码贴入首页" class="headerlink" title="⑤将生成的密码贴入首页"></a>⑤将生成的密码贴入首页</h3><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/26/03-36-15-image-20240626033615850-01f960.png" alt="image-20240626033615850"></p><h3 id="⑥选择插件安装"><a href="#⑥选择插件安装" class="headerlink" title="⑥选择插件安装"></a>⑥选择插件安装</h3><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/26/03-37-12-image-20240626033712004-78b06a.png" alt="image-20240626033712004"></p><h3 id="⑦选择”无“，然后安装"><a href="#⑦选择”无“，然后安装" class="headerlink" title="⑦选择”无“，然后安装"></a>⑦选择”无“，然后安装</h3><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/26/03-37-50-image-20240626033750382-504d90.png" alt="image-20240626033750382"></p><h3 id="⑧创建用户-点击保存并完成"><a href="#⑧创建用户-点击保存并完成" class="headerlink" title="⑧创建用户-点击保存并完成"></a>⑧创建用户-点击保存并完成</h3><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/26/03-38-18-image-20240626033818236-ddfb93.png" alt="image-20240626033818236"></p><h3 id="⑨实例配置-点击现在不要"><a href="#⑨实例配置-点击现在不要" class="headerlink" title="⑨实例配置-点击现在不要"></a>⑨实例配置-点击现在不要</h3><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/26/03-39-17-image-20240626033917776-9413af.png" alt="image-20240626033917776"></p><h3 id="⑩开始使用jenkins"><a href="#⑩开始使用jenkins" class="headerlink" title="⑩开始使用jenkins"></a>⑩开始使用jenkins</h3><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/26/03-39-45-image-20240626033945364-bcb0e6.png" alt="image-20240626033945364"></p><h2 id="第八步：安装插件"><a href="#第八步：安装插件" class="headerlink" title="第八步：安装插件"></a>第八步：安装插件</h2><h3 id="①首页点击Manager-Jenkins"><a href="#①首页点击Manager-Jenkins" class="headerlink" title="①首页点击Manager Jenkins"></a>①首页点击Manager Jenkins</h3><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/26/03-40-48-image-20240626034048170-1a90e6.png" alt="image-20240626034048170"></p><h3 id="②安装插件"><a href="#②安装插件" class="headerlink" title="②安装插件"></a>②安装插件</h3><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/26/03-41-12-image-20240626034112507-dc2be3.png" alt="image-20240626034112507"></p><h3 id="③换清华源"><a href="#③换清华源" class="headerlink" title="③换清华源"></a>③换清华源</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/<span class="built_in">update-center</span>.json</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/26/03-42-25-image-20240626034224934-c0ef65.png" alt="image-20240626034224934"></p><h3 id="④安装maven插件"><a href="#④安装maven插件" class="headerlink" title="④安装maven插件"></a>④安装maven插件</h3><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/26/03-43-26-image-20240626034326718-cb4faa.png" alt="image-20240626034326718"></p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/26/03-45-43-image-20240626034543149-2fa871.png" alt="image-20240626034543149"></p><h3 id="⑤安装git"><a href="#⑤安装git" class="headerlink" title="⑤安装git"></a>⑤安装git</h3><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/26/03-46-26-image-20240626034626357-cc098f.png" alt="image-20240626034626357"></p><h3 id="⑥配置Java环境和Mvn环境"><a href="#⑥配置Java环境和Mvn环境" class="headerlink" title="⑥配置Java环境和Mvn环境"></a>⑥配置Java环境和Mvn环境</h3><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/26/03-50-29-image-20240626035029246-7bfac8.png" alt="image-20240626035029246"></p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/26/03-52-11-image-20240626035211324-55ad63.png" alt="image-20240626035211324"></p><h3 id="⑦创建工程"><a href="#⑦创建工程" class="headerlink" title="⑦创建工程"></a>⑦创建工程</h3><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/26/03-52-44-image-20240626035244495-7e253a.png" alt="image-20240626035244495"></p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/26/03-53-03-image-20240626035303926-014b24.png" alt="image-20240626035303926"></p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/26/03-53-55-image-20240626035354986-8a17e1.png" alt="image-20240626035354986"></p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/26/03-54-30-image-20240626035430046-c54304.png" alt="image-20240626035430046"></p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/26/03-54-52-image-20240626035452855-739d44.png" alt="image-20240626035452855"></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker<span class="literal">-compose</span> up <span class="literal">-d</span></span><br></pre></td></tr></table></figure><h3 id="⑧保存退出"><a href="#⑧保存退出" class="headerlink" title="⑧保存退出"></a>⑧保存退出</h3><h2 id="第九步：构建项目"><a href="#第九步：构建项目" class="headerlink" title="第九步：构建项目"></a>第九步：构建项目</h2><h3 id="①构建项目"><a href="#①构建项目" class="headerlink" title="①构建项目"></a>①构建项目</h3><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/26/03-55-56-image-20240626035556266-664b22.png" alt="image-20240626035556266"></p><h3 id="②查看控制台输出"><a href="#②查看控制台输出" class="headerlink" title="②查看控制台输出"></a>②查看控制台输出</h3><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/26/03-56-33-image-20240626035633888-9817aa.png" alt="image-20240626035633888"></p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/26/04-14-46-image-20240626041446556-2a7bab.png" alt="image-20240626041446556"></p><h3 id="③构建成功"><a href="#③构建成功" class="headerlink" title="③构建成功"></a>③构建成功</h3><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/26/04-09-11-image-20240626040911373-930fd9.png" alt="image-20240626040911373"></p><p>④访问 IP：8761 验证</p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/26/04-09-47-image-20240626040947433-a5df7c.png" alt="image-20240626040947433"></p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/26/04-24-43-image-20240626042443503-dc148b.png" alt="image-20240626042443503"></p><p><img src="https://img1.wallspic.com/previews/4/1/7/6/4/146714/146714-hei_se_de-bai_se-da_hai-jian_yue-feng_bo-x750.jpg" alt="简约, 白色, 黑色的, 大海, 风波 壁纸 4857x3238 允许"></p>]]></content>
      
      
      <categories>
          
          <category> 全栈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringCloud </tag>
            
            <tag> Gogs </tag>
            
            <tag> Jenkins </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker</title>
      <link href="/2024/06/25/Docker/"/>
      <url>/2024/06/25/Docker/</url>
      
        <content type="html"><![CDATA[<p>学习目标：</p><ul><li><p>掌握Docker基础知识，能够理解Docker镜像与容器的概念</p></li><li><p>完成Docker安装与启动</p></li><li><p>掌握Docker镜像与容器相关命令</p></li><li><p>掌握Tomcat Nginx 等软件的常用应用的安装</p></li><li><p>掌握docker迁移与备份相关命令</p></li><li><p>能够运用Dockerfile编写创建容器的脚本</p></li><li><p>能够搭建与使用docker私有仓库</p></li></ul><h1 id="1-Docker简介"><a href="#1-Docker简介" class="headerlink" title="1 Docker简介"></a>1 Docker简介</h1><h2 id="1-1-什么是虚拟化"><a href="#1-1-什么是虚拟化" class="headerlink" title="1.1 什么是虚拟化"></a>1.1 什么是虚拟化</h2><p>​在计算机中，虚拟化（英语：Virtualization）是一种资源管理技术，是将计算机的各种实体资源，如服务器、网络、内存及存储等，予以抽象、转换后呈现出来，打破实体结构间的不可切割的障碍，使用户可以比原本的组态更好的方式来应用这些资源。这些资源的新虚拟部份是不受现有资源的架设方式，地域或物理组态所限制。一般所指的虚拟化资源包括计算能力和资料存储。</p><p>​在实际的生产环境中，虚拟化技术主要用来解决高性能的物理硬件产能过剩和老的旧的硬件产能过低的重组重用，透明化底层物理硬件，从而最大化的利用物理硬件   对资源充分利用</p><p>​虚拟化技术种类很多，例如：软件虚拟化、硬件虚拟化、内存虚拟化、网络虚拟化(vip)、桌面虚拟化、服务虚拟化、虚拟机等等。</p><h2 id="1-2-什么是Docker"><a href="#1-2-什么是Docker" class="headerlink" title="1.2 什么是Docker"></a>1.2 什么是Docker</h2><p>​Docker 是一个开源项目，诞生于 2013 年初，最初是 dotCloud 公司内部的一个业余项目。它基于 Google 公司推出的 Go 语言实现。 项目后来加入了 Linux 基金会，遵从了 Apache 2.0 协议，项目代码在 <a href="https://github.com/docker/docker">GitHub</a> 上进行维护。</p><p>​<img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/08-58-01-1-3-8839ca.png"></p><p>​Docker 自开源后受到广泛的关注和讨论，以至于 dotCloud 公司后来都改名为 Docker Inc。Redhat 已经在其 RHEL6.5 中集中支持 Docker；Google 也在其 PaaS 产品中广泛应用。</p><p>​Docker 项目的目标是实现轻量级的操作系统虚拟化解决方案。 Docker 的基础是 Linux 容器（LXC）等技术。</p><p>​在 LXC 的基础上 Docker 进行了进一步的封装，让用户不需要去关心容器的管理，使得操作更为简便。用户操作 Docker 的容器就像操作一个快速轻量级的虚拟机一样简单。</p><p>为什么选择Docker?</p><p>（1）上手快。</p><p>​用户只需要几分钟，就可以把自己的程序“Docker化”。Docker依赖于“写时复制”（copy-on-write）模型，使修改应用程序也非常迅速，可以说达到“随心所致，代码即改”的境界。</p><p>         随后，就可以创建容器来运行应用程序了。大多数Docker容器只需要不到1秒中即可启动。由于去除了管理程序的开销，Docker容器拥有很高的性能，同时同一台宿主机中也可以运行更多的容器，使用户尽可能的充分利用系统资源。</p><p>（2）职责的逻辑分类</p><p>​使用Docker，开发人员只需要关心容器中运行的应用程序，而运维人员只需要关心如何管理容器。Docker设计的目的就是要加强开发人员写代码的开发环境与应用程序要部署的生产环境一致性。从而降低那种“开发时一切正常，肯定是运维的问题（测试环境都是正常的，上线后出了问题就归结为肯定是运维的问题）”</p><p>（3）快速高效的开发生命周期</p><p>​Docker的目标之一就是缩短代码从开发、测试到部署、上线运行的周期，让你的应用程序具备可移植性，易于构建，并易于协作。（通俗一点说，Docker就像一个盒子，里面可以装很多物件，如果需要这些物件的可以直接将该大盒子拿走，而不需要从该盒子中一件件的取。）</p><p>（4）鼓励使用面向服务的架构</p><p>​Docker还鼓励面向服务的体系结构和微服务架构。Docker推荐单个容器只运行一个应用程序或进程，这样就形成了一个分布式的应用程序模型，在这种模型下，应用程序或者服务都可以表示为一系列内部互联的容器，从而使分布式部署应用程序，扩展或调试应用程序都变得非常简单，同时也提高了程序的内省性。（当然，可以在一个容器中运行多个应用程序）</p><h2 id="1-3-容器与虚拟机比较"><a href="#1-3-容器与虚拟机比较" class="headerlink" title="1.3 容器与虚拟机比较"></a>1.3 容器与虚拟机比较</h2><p>​下面的图片比较了 Docker 和传统虚拟化方式的不同之处，可见容器是在操作系统层面上实现虚拟化，直接复用本地主机的操作系统，而传统方式则是在硬件层面实现。</p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/08-58-03-1-1-c33ea8.png"></p><p>与传统的虚拟机相比，Docker优势体现为启动速度快、占用体积小。</p><h2 id="1-4-Docker-组件"><a href="#1-4-Docker-组件" class="headerlink" title="1.4 Docker 组件"></a>1.4 Docker 组件</h2><h3 id="1-4-1-Docker服务器与客户端"><a href="#1-4-1-Docker服务器与客户端" class="headerlink" title="1.4.1 Docker服务器与客户端"></a>1.4.1 Docker服务器与客户端</h3><p>​Docker是一个客户端-服务器（C&#x2F;S）架构程序。Docker客户端只需要向Docker服务器或者守护进程发出请求，服务器或者守护进程将完成所有工作并返回结果。Docker提供了一个命令行工具Docker以及一整套RESTful API。你可以在同一台宿主机上运行Docker守护进程和客户端，也可以从本地的Docker客户端连接到运行在另一台宿主机上的远程Docker守护进程。</p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/25/08-58-05-1-2-7675df.png"></p><h3 id="1-4-2-Docker镜像与容器"><a href="#1-4-2-Docker镜像与容器" class="headerlink" title="1.4.2 Docker镜像与容器"></a>1.4.2 Docker镜像与容器</h3><p>​镜像是构建Docker的基石。用户基于镜像来运行自己的容器。镜像也是Docker生命周期中的“构建”部分。镜像是基于联合文件系统的一种层式结构，由一系列指令一步一步构建出来。例如：</p><p>添加一个文件；</p><p>执行一个命令；</p><p>打开一个窗口。</p><p>也可以将镜像当作容器的“源代码”。镜像体积很小，非常“便携”，易于分享、存储和更新。</p><p>​Docker可以帮助你构建和部署容器，你只需要把自己的应用程序或者服务打包放进容器即可。容器是基于镜像启动起来的，容器中可以运行一个或多个进程。我们可以认为，镜像是Docker生命周期中的构建或者打包阶段，而容器则是启动或者执行阶段。  容器基于镜像启动，一旦容器启动完成后，我们就可以登录到容器中安装自己需要的软件或者服务。</p><p>所以Docker容器就是：</p><p>​一个镜像格式；</p><p>​一些列标准操作；</p><p>​一个执行环境。</p><p>​Docker借鉴了标准集装箱的概念。标准集装箱将货物运往世界各地，Docker将这个模型运用到自己的设计中，唯一不同的是：集装箱运输货物，而Docker运输软件。</p><p>         和集装箱一样，Docker在执行上述操作时，并不关心容器中到底装了什么，它不管是web服务器，还是数据库，或者是应用程序服务器什么的。所有的容器都按照相同的方式将内容“装载”进去。</p><p>         Docker也不关心你要把容器运到何方：我们可以在自己的笔记本中构建容器，上传到Registry，然后下载到一个物理的或者虚拟的服务器来测试，在把容器部署到具体的主机中。像标准集装箱一样，Docker容器方便替换，可以叠加，易于分发，并且尽量通用。</p><h3 id="1-4-3-Registry（注册中心）"><a href="#1-4-3-Registry（注册中心）" class="headerlink" title="1.4.3 Registry（注册中心）"></a>1.4.3 Registry（注册中心）</h3><p>​Docker用Registry来保存用户构建的镜像。Registry分为公共和私有两种。Docker公司运营公共的Registry叫做Docker Hub。用户可以在Docker Hub注册账号，分享并保存自己的镜像（说明：在Docker Hub下载镜像巨慢，可以自己构建私有的Registry）。</p><p>​<a href="https://hub.docker.com/">https://hub.docker.com/</a></p><h1 id="2-Docker安装与启动"><a href="#2-Docker安装与启动" class="headerlink" title="2 Docker安装与启动"></a>2 Docker安装与启动</h1><h2 id="2-1-安装Docker"><a href="#2-1-安装Docker" class="headerlink" title="2.1 安装Docker"></a>2.1 安装Docker</h2><p>​Docker官方建议在Ubuntu中安装，因为Docker是基于Ubuntu发布的，而且一般Docker出现的问题Ubuntu是最先更新或者打补丁的。在很多版本的CentOS中是不支持更新最新的一些补丁包的。</p><p>​由于我们学习的环境都使用的是CentOS，因此这里我们将Docker安装到CentOS上。注意：这里建议安装在CentOS7.x以上的版本，在CentOS6.x的版本中，安装前需要安装其他很多的环境而且Docker很多补丁不支持更新。</p><p>​请直接挂载课程配套的Centos7.x镜像</p><p>（1）yum 包更新到最新</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum update</span><br></pre></td></tr></table></figure><p>（2）安装需要的软件包， yum-util 提供yum-config-manager功能，另外两个是devicemapper驱动依赖的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure><p>（3）设置yum源为阿里云</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><p>（4）安装docker</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install docker-ce</span><br></pre></td></tr></table></figure><p>（5）安装后查看docker版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker -v</span><br></pre></td></tr></table></figure><h2 id="2-2-设置ustc的镜像"><a href="#2-2-设置ustc的镜像" class="headerlink" title="2.2 设置ustc的镜像"></a>2.2 设置ustc的镜像</h2><p>ustc是老牌的linux镜像服务提供者了，还在遥远的ubuntu 5.04版本的时候就在用。ustc的docker镜像加速器速度很快。ustc docker mirror的优势之一就是不需要注册，是真正的公共服务。</p><p><a href="https://lug.ustc.edu.cn/wiki/mirrors/help/docker">https://lug.ustc.edu.cn/wiki/mirrors/help/docker</a></p><p>编辑该文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/docker/daemon.json  </span><br></pre></td></tr></table></figure><p>在该文件中输入如下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;registry-mirrors&quot;: [&quot;https://docker.mirrors.ustc.edu.cn&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-3-Docker的启动与停止"><a href="#2-3-Docker的启动与停止" class="headerlink" title="2.3 Docker的启动与停止"></a>2.3 Docker的启动与停止</h2><p><strong>systemctl</strong>命令是系统服务管理器指令</p><p>启动docker：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure><p>停止docker：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop docker</span><br></pre></td></tr></table></figure><p>重启docker：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><p>查看docker状态：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status docker</span><br></pre></td></tr></table></figure><p>开机启动：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable docker</span><br></pre></td></tr></table></figure><p>查看docker概要信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker info</span><br></pre></td></tr></table></figure><p>查看docker帮助文档</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker --help</span><br></pre></td></tr></table></figure><h1 id="3-常用命令"><a href="#3-常用命令" class="headerlink" title="3 常用命令"></a>3 常用命令</h1><h2 id="3-1-镜像相关命令"><a href="#3-1-镜像相关命令" class="headerlink" title="3.1 镜像相关命令"></a>3.1 镜像相关命令</h2><h3 id="3-1-1-查看镜像"><a href="#3-1-1-查看镜像" class="headerlink" title="3.1.1 查看镜像"></a>3.1.1 查看镜像</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><p>REPOSITORY：镜像名称</p><p>TAG：镜像标签</p><p>IMAGE ID：镜像ID</p><p>CREATED：镜像的创建日期（不是获取该镜像的日期）</p><p>SIZE：镜像大小</p><p>这些镜像都是存储在Docker宿主机的&#x2F;var&#x2F;lib&#x2F;docker目录下</p><h3 id="3-1-2-搜索镜像"><a href="#3-1-2-搜索镜像" class="headerlink" title="3.1.2 搜索镜像"></a>3.1.2 搜索镜像</h3><p>如果你需要从网络中查找需要的镜像，可以通过以下命令搜索</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker search 镜像名称</span><br></pre></td></tr></table></figure><p>NAME：仓库名称</p><p>DESCRIPTION：镜像描述</p><p>STARS：用户评价，反应一个镜像的受欢迎程度</p><p>OFFICIAL：是否官方</p><p>AUTOMATED：自动构建，表示该镜像由Docker Hub自动构建流程创建的</p><h3 id="3-1-3-拉取镜像"><a href="#3-1-3-拉取镜像" class="headerlink" title="3.1.3 拉取镜像"></a>3.1.3 拉取镜像</h3><p>拉取镜像就是从中央仓库中下载镜像到本地</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull 镜像名称</span><br></pre></td></tr></table></figure><p>例如，我要下载centos7镜像</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull centos:7</span><br></pre></td></tr></table></figure><h3 id="3-1-4-删除镜像"><a href="#3-1-4-删除镜像" class="headerlink" title="3.1.4 删除镜像"></a>3.1.4 删除镜像</h3><p>按镜像ID删除镜像</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi 镜像ID</span><br></pre></td></tr></table></figure><p>删除所有镜像</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi `docker images -q`</span><br></pre></td></tr></table></figure><h2 id="3-2-容器相关命令"><a href="#3-2-容器相关命令" class="headerlink" title="3.2 容器相关命令"></a>3.2 容器相关命令</h2><h3 id="3-2-1-查看容器"><a href="#3-2-1-查看容器" class="headerlink" title="3.2.1 查看容器"></a>3.2.1 查看容器</h3><p>查看正在运行的容器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure><p>查看所有容器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps –a</span><br></pre></td></tr></table></figure><p>查看最后一次运行的容器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps –l</span><br></pre></td></tr></table></figure><p>查看停止的容器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -f status=exited</span><br></pre></td></tr></table></figure><h3 id="3-2-2-创建与启动容器"><a href="#3-2-2-创建与启动容器" class="headerlink" title="3.2.2 创建与启动容器"></a>3.2.2 创建与启动容器</h3><p>创建容器常用的参数说明：</p><p>创建容器命令：docker run</p><p> -i：表示运行容器</p><p> -t：表示容器启动后会进入其命令行。加入这两个参数后，容器创建就能登录进去。即分配一个伪终端。</p><p> –name :为创建的容器命名。</p><p> -v：表示目录映射关系（前者是宿主机目录，后者是映射到宿主机上的目录），可以使用多个－v做多个目录或文件映射。注意：最好做目录映射，在宿主机上做修改，然后共享到容器上。</p><p> -d：在run后面加上-d参数,则会创建一个守护式容器在后台运行（这样创建容器后不会自动登录容器，如果只加-i -t两个参数，创建后就会自动进去容器）。</p><p> -p：表示端口映射，前者是宿主机端口，后者是容器内的映射端口。可以使用多个-p做多个端口映射</p><p>（1）交互式方式创建容器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --name=容器名称 镜像名称:标签 /bin/bash</span><br></pre></td></tr></table></figure><p>这时我们通过ps命令查看，发现可以看到启动的容器，状态为启动状态  </p><p>退出当前容器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br></pre></td></tr></table></figure><p>（2）守护式方式创建容器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -di --name=容器名称 镜像名称:标签</span><br></pre></td></tr></table></figure><p>登录守护式容器方式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it 容器名称 (或者容器ID)  /bin/bash</span><br></pre></td></tr></table></figure><h3 id="3-2-3-停止与启动容器"><a href="#3-2-3-停止与启动容器" class="headerlink" title="3.2.3 停止与启动容器"></a>3.2.3 停止与启动容器</h3><p>停止容器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop 容器名称（或者容器ID）</span><br></pre></td></tr></table></figure><p>启动容器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker start 容器名称（或者容器ID）</span><br></pre></td></tr></table></figure><h3 id="3-2-4-文件拷贝"><a href="#3-2-4-文件拷贝" class="headerlink" title="3.2.4 文件拷贝"></a>3.2.4 文件拷贝</h3><p>如果我们需要将文件拷贝到容器内可以使用cp命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker cp 需要拷贝的文件或目录 容器名称:容器目录</span><br></pre></td></tr></table></figure><p>也可以将文件从容器内拷贝出来</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker cp 容器名称:容器目录 需要拷贝的文件或目录</span><br></pre></td></tr></table></figure><h3 id="3-2-5-目录挂载"><a href="#3-2-5-目录挂载" class="headerlink" title="3.2.5 目录挂载"></a>3.2.5 目录挂载</h3><p>我们可以在创建容器的时候，将宿主机的目录与容器内的目录进行映射，这样我们就可以通过修改宿主机某个目录的文件从而去影响容器。<br>创建容器 添加-v参数 后边为   宿主机目录:容器目录，例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -di -v /usr/local/myhtml:/usr/local/myhtml --name=mycentos3 centos:7</span><br></pre></td></tr></table></figure><p>如果你共享的是多级的目录，可能会出现权限不足的提示。</p><p>这是因为CentOS7中的安全模块selinux把权限禁掉了，我们需要添加参数  –privileged&#x3D;true  来解决挂载的目录没有权限的问题</p><h3 id="3-2-6-查看容器IP地址"><a href="#3-2-6-查看容器IP地址" class="headerlink" title="3.2.6 查看容器IP地址"></a>3.2.6 查看容器IP地址</h3><p>我们可以通过以下命令查看容器运行的各种数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker inspect 容器名称（容器ID） </span><br></pre></td></tr></table></figure><p>也可以直接执行下面的命令直接输出IP地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker inspect --format=&#x27;&#123;&#123;.NetworkSettings.IPAddress&#125;&#125;&#x27; 容器名称（容器ID）</span><br></pre></td></tr></table></figure><h3 id="3-2-7-删除容器"><a href="#3-2-7-删除容器" class="headerlink" title="3.2.7 删除容器"></a>3.2.7 删除容器</h3><p>删除指定的容器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm 容器名称（容器ID）</span><br></pre></td></tr></table></figure><h1 id="4-应用部署"><a href="#4-应用部署" class="headerlink" title="4 应用部署"></a>4 应用部署</h1><h2 id="4-1-MySQL部署"><a href="#4-1-MySQL部署" class="headerlink" title="4.1 MySQL部署"></a>4.1 MySQL部署</h2><p>（1）拉取mysql镜像</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull centos/mysql-57-centos7</span><br></pre></td></tr></table></figure><p>（2）创建容器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -di --name=tensquare_mysql -p 33306:3306 -e MYSQL_ROOT_PASSWORD=123456 mysql</span><br></pre></td></tr></table></figure><p>-p 代表端口映射，格式为  宿主机映射端口:容器运行端口</p><p>-e 代表添加环境变量  MYSQL_ROOT_PASSWORD  是root用户的登陆密码</p><p>（3）远程登录mysql</p><p>连接宿主机的IP  ,指定端口为33306 </p><h2 id="4-2-tomcat部署"><a href="#4-2-tomcat部署" class="headerlink" title="4.2 tomcat部署"></a>4.2 tomcat部署</h2><p>（1）拉取镜像</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull tomcat:7-jre7</span><br></pre></td></tr></table></figure><p>（2）创建容器</p><p>创建容器  -p表示地址映射</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -di --name=mytomcat -p 9000:8080 </span><br><span class="line">-v /usr/local/webapps:/usr/local/tomcat/webapps tomcat:7-jre7</span><br></pre></td></tr></table></figure><h2 id="4-3-Nginx部署"><a href="#4-3-Nginx部署" class="headerlink" title="4.3 Nginx部署"></a>4.3 Nginx部署</h2><p>（1）拉取镜像</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull nginx</span><br></pre></td></tr></table></figure><p>（2）创建Nginx容器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -di --name=mynginx -p 80:80 nginx</span><br></pre></td></tr></table></figure><h2 id="4-4-Redis部署"><a href="#4-4-Redis部署" class="headerlink" title="4.4 Redis部署"></a>4.4 Redis部署</h2><p>（1）拉取镜像</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull redis</span><br></pre></td></tr></table></figure><p>（2）创建容器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -di --name=myredis -p 6379:6379 redis</span><br></pre></td></tr></table></figure><h1 id="5-迁移与备份"><a href="#5-迁移与备份" class="headerlink" title="5 迁移与备份"></a>5 迁移与备份</h1><h2 id="5-1-容器保存为镜像"><a href="#5-1-容器保存为镜像" class="headerlink" title="5.1 容器保存为镜像"></a>5.1 容器保存为镜像</h2><p>我们可以通过以下命令将容器保存为镜像</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker commit mynginx mynginx_i</span><br></pre></td></tr></table></figure><h2 id="5-2-镜像备份"><a href="#5-2-镜像备份" class="headerlink" title="5.2 镜像备份"></a>5.2 镜像备份</h2><p>我们可以通过以下命令将镜像保存为tar 文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker  save -o mynginx.tar mynginx_i</span><br></pre></td></tr></table></figure><h2 id="5-3-镜像恢复与迁移"><a href="#5-3-镜像恢复与迁移" class="headerlink" title="5.3 镜像恢复与迁移"></a>5.3 镜像恢复与迁移</h2><p>首先我们先删除掉mynginx_img镜像  然后执行此命令进行恢复</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker load -i mynginx.tar</span><br></pre></td></tr></table></figure><p>-i 输入的文件</p><p>执行后再次查看镜像，可以看到镜像已经恢复</p><h1 id="6-Dockerfile"><a href="#6-Dockerfile" class="headerlink" title="6 Dockerfile"></a>6 Dockerfile</h1><h2 id="6-1-什么是Dockerfile"><a href="#6-1-什么是Dockerfile" class="headerlink" title="6.1 什么是Dockerfile"></a>6.1 什么是Dockerfile</h2><p>Dockerfile是由一系列命令和参数构成的脚本，这些命令应用于基础镜像并最终创建一个新的镜像。</p><p>1、对于开发人员：可以为开发团队提供一个完全一致的开发环境；<br>2、对于测试人员：可以直接拿开发时所构建的镜像或者通过Dockerfile文件构建一个新的镜像开始工作了；<br>3、对于运维人员：在部署时，可以实现应用的无缝移植。</p><h2 id="6-2-常用命令"><a href="#6-2-常用命令" class="headerlink" title="6.2 常用命令"></a>6.2 常用命令</h2><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>FROM image_name:tag</td><td>定义了使用哪个基础镜像启动构建流程</td></tr><tr><td>MAINTAINER user_name</td><td>声明镜像的创建者</td></tr><tr><td>ENV key value</td><td>设置环境变量 (可以写多条)</td></tr><tr><td>RUN command</td><td>是Dockerfile的核心部分(可以写多条)</td></tr><tr><td>ADD source_dir&#x2F;file dest_dir&#x2F;file</td><td>将宿主机的文件复制到容器内，如果是一个压缩文件，将会在复制后自动解压</td></tr><tr><td>COPY source_dir&#x2F;file dest_dir&#x2F;file</td><td>和ADD相似，但是如果有压缩文件并不能解压</td></tr><tr><td>WORKDIR path_dir</td><td>设置工作目录</td></tr></tbody></table><h2 id="6-3-使用脚本创建镜像"><a href="#6-3-使用脚本创建镜像" class="headerlink" title="6.3 使用脚本创建镜像"></a>6.3 使用脚本创建镜像</h2><p>步骤：</p><p>（1）创建目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir –p /usr/local/dockerjdk8</span><br></pre></td></tr></table></figure><p>（2）下载jdk-8u171-linux-x64.tar.gz并上传到服务器（虚拟机）中的&#x2F;usr&#x2F;local&#x2F;dockerjdk8目录</p><p>（3）创建文件Dockerfile  <code>vi Dockerfile</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#依赖镜像名称和ID</span><br><span class="line">FROM centos:7</span><br><span class="line">#指定镜像创建者信息</span><br><span class="line">MAINTAINER ITCAST</span><br><span class="line">#切换工作目录</span><br><span class="line">WORKDIR /usr</span><br><span class="line">RUN mkdir  /usr/local/java</span><br><span class="line">#ADD 是相对路径jar,把java添加到容器中</span><br><span class="line">ADD jdk-8u171-linux-x64.tar.gz /usr/local/java/</span><br><span class="line"></span><br><span class="line">#配置java环境变量</span><br><span class="line">ENV JAVA_HOME /usr/local/java/jdk1.8.0_171</span><br><span class="line">ENV JRE_HOME $JAVA_HOME/jre</span><br><span class="line">ENV CLASSPATH $JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib:$CLASSPATH</span><br><span class="line">ENV PATH $JAVA_HOME/bin:$PATH</span><br></pre></td></tr></table></figure><p>（4）执行命令构建镜像</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t=&#x27;jdk1.8&#x27; .</span><br></pre></td></tr></table></figure><p>注意后边的空格和点，不要省略</p><p>（5）查看镜像是否建立完成</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><h1 id="7-Docker私有仓库"><a href="#7-Docker私有仓库" class="headerlink" title="7 Docker私有仓库"></a>7 Docker私有仓库</h1><h2 id="7-1-私有仓库搭建与配置"><a href="#7-1-私有仓库搭建与配置" class="headerlink" title="7.1 私有仓库搭建与配置"></a>7.1 私有仓库搭建与配置</h2><p>（1）拉取私有仓库镜像（此步省略）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull registry</span><br></pre></td></tr></table></figure><p>（2）启动私有仓库容器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -di --name=registry -p 5000:5000 registry</span><br></pre></td></tr></table></figure><p>（3）打开浏览器 输入地址<a href="http://192.168.184.141:5000/v2/_catalog%E7%9C%8B%E5%88%B0%60%7B%22repositories%22:[]%7D%60">http://192.168.184.141:5000/v2/_catalog看到`{&quot;repositories&quot;:[]}`</a> 表示私有仓库搭建成功并且内容为空</p><p>（4）修改daemon.json</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/docker/daemon.json</span><br></pre></td></tr></table></figure><p>添加以下内容，保存退出。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;insecure-registries&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;192.168.184.141:5000&quot;</span><span class="punctuation">]</span><span class="punctuation">&#125;</span> </span><br></pre></td></tr></table></figure><p>此步用于让 docker信任私有仓库地址</p><p>（5）重启docker 服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h2 id="7-2-镜像上传至私有仓库"><a href="#7-2-镜像上传至私有仓库" class="headerlink" title="7.2 镜像上传至私有仓库"></a>7.2 镜像上传至私有仓库</h2><p>（1）标记此镜像为私有仓库的镜像</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker tag jdk1.8 192.168.184.141:5000/jdk1.8</span><br></pre></td></tr></table></figure><p>（2）再次启动私服容器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker start registry</span><br></pre></td></tr></table></figure><p>（3）上传标记的镜像</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker push 192.168.184.141:5000/jdk1.8</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 全栈 </category>
          
          <category> 软件类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Docker安装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySql的几种安装方式</title>
      <link href="/2024/06/23/MySql%E7%9A%84%E5%87%A0%E7%A7%8D%E5%AE%89%E8%A3%85%E6%96%B9%E5%BC%8F/"/>
      <url>/2024/06/23/MySql%E7%9A%84%E5%87%A0%E7%A7%8D%E5%AE%89%E8%A3%85%E6%96%B9%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="MySql安装与配置概览"><a href="#MySql安装与配置概览" class="headerlink" title="MySql安装与配置概览"></a>MySql安装与配置概览</h2><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/23/16-42-21-Screenshotundefined2024-06-23undefinedatundefined16-41-45undefined-21adbc.png"></p><h2 id="1、MySQL安装方式"><a href="#1、MySQL安装方式" class="headerlink" title="1、MySQL安装方式"></a>1、MySQL安装方式</h2><p>二进制软件包安装</p><p>① yum安装或rpm安装（略）</p><p>② glibc版本安装（相当于Windows中的绿色软件）</p><p>命名：&#x3D;&#x3D;mysql-5.7.31-linux-glibc2.12-x86_64.tar.gz&#x3D;&#x3D; </p><p>依赖[^glibc]库，可以安装在通用的Linux系统下</p><p>源码包编译安装</p><p>命名：mysql-5.7.31.tar.gz，通用的Linux下都可以编译安装。</p><h2 id="2、三种安装方式的区别"><a href="#2、三种安装方式的区别" class="headerlink" title="2、三种安装方式的区别"></a>2、三种安装方式的区别</h2><table><thead><tr><th>安装方式</th><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>rpm</td><td>安装卸载简单</td><td>可定制性差</td></tr><tr><td>glibc</td><td>可定制性相比rpm包灵活些</td><td>安装相比rpm包复杂些，需要手动初始化数据库</td></tr><tr><td>源码安装</td><td>可定制性最强，根据需求和功能定制</td><td>安装麻烦，需要手动初始化数据库</td></tr></tbody></table><blockquote><p>在企业中，数据库的安装很少使用rpm方式，大部分都是基于源码安装以及glibc安装！</p></blockquote><h2 id="3、区分数据库与数据库实例"><a href="#3、区分数据库与数据库实例" class="headerlink" title="3、区分数据库与数据库实例"></a>3、区分数据库与数据库实例</h2><h4 id="㈠-什么是MySQL数据库？"><a href="#㈠-什么是MySQL数据库？" class="headerlink" title="㈠ 什么是MySQL数据库？"></a>㈠ 什么是MySQL数据库？</h4><p><strong>数据库（database）：</strong> 操作系统或存储上的&#x3D;&#x3D;数据文件的集合&#x3D;&#x3D;。mysql数据库中，数据库文件可以是* .frm、*.MYD、*.MYI、*.ibd等结尾的文件， 不同存储引擎文件类型不同。</p><h4 id="㈡-什么是MySQL数据库实例？"><a href="#㈡-什么是MySQL数据库实例？" class="headerlink" title="㈡ 什么是MySQL数据库实例？"></a>㈡ 什么是MySQL数据库实例？</h4><p><strong>数据库实例（instance）：</strong> 由&#x3D;&#x3D;后台进程或者线程&#x3D;&#x3D;以及一个&#x3D;&#x3D;共享内存区&#x3D;&#x3D;组成。共享内存可以被运行的后台线程所共享。 数据库实例才是真正操作数据库的。</p><p>注意：MySQL的后台守护程序&#x3D;&#x3D;mysqld&#x3D;&#x3D;是单进程多线程的工作模式。</p><h4 id="㈢-什么是MySQL数据库服务器？"><a href="#㈢-什么是MySQL数据库服务器？" class="headerlink" title="㈢ 什么是MySQL数据库服务器？"></a>㈢ 什么是MySQL数据库服务器？</h4><p><strong>数据库服务器(database server)：</strong>部署&#x3D;&#x3D;安装数据库实例&#x3D;&#x3D;的服务器。</p><h4 id="㈣-数据库和数据库实例之间的关系是什么？"><a href="#㈣-数据库和数据库实例之间的关系是什么？" class="headerlink" title="㈣ 数据库和数据库实例之间的关系是什么？"></a>㈣ 数据库和数据库实例之间的关系是什么？</h4><p>通常情况下，数据库实例和数据库是一一对应的关系，也就是&#x3D;&#x3D;一个数据库实例对应一个数据库&#x3D;&#x3D;； 但是，在集群环境中存在&#x3D;&#x3D;多个数据库实例共同使用一个数据库&#x3D;&#x3D;。oracle RAC</p><h1 id="四、MySQL的GLIBC版本安装"><a href="#四、MySQL的GLIBC版本安装" class="headerlink" title="四、MySQL的GLIBC版本安装"></a>四、MySQL的GLIBC版本安装</h1><h2 id="1、获取MySQL-GLIBC版本"><a href="#1、获取MySQL-GLIBC版本" class="headerlink" title="1、获取MySQL GLIBC版本"></a>1、获取MySQL GLIBC版本</h2><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/23/16-29-06-16-28-33-image-20200824114350352-af6fc8-d69769.png" alt="image-20200824114350352"></p><h2 id="2、学会看官方文档"><a href="#2、学会看官方文档" class="headerlink" title="2、学会看官方文档"></a>2、学会看官方文档</h2><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/23/16-29-15-16-28-33-image-20200824114911039-0aace9-d70b28.png" alt="image-20200824114911039"></p><h2 id="3、安装MySQL依赖库软件"><a href="#3、安装MySQL依赖库软件" class="headerlink" title="3、安装MySQL依赖库软件"></a>3、安装MySQL依赖库软件</h2><p>第一步：克隆模板机，生成MySQL服务器</p><p>第二步：启动系统</p><p>第三步：更改主机名称为mysql.itcast.cn，然后重启网络</p><p>第四步：拍摄快照</p><p>第五步：安装依赖库libaio库</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install libaio -y</span></span><br></pre></td></tr></table></figure><h2 id="4、上传软件包解压，了解目录结构"><a href="#4、上传软件包解压，了解目录结构" class="headerlink" title="4、上传软件包解压，了解目录结构"></a>4、上传软件包解压，了解目录结构</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tar -xf mysql-5.7.31-linux-glibc2.12-x86_64.tar.gz</span></span><br><span class="line"><span class="comment"># ls mysql-5.7.31-linux-glibc2.12-x86_64</span></span><br></pre></td></tr></table></figure><p>解压完成后，目录结构如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/23/16-29-16-image-20200824115716608-cc8d61.png" alt="image-20200824115716608"></p><p>安装需求：</p><table><thead><tr><th>选项</th><th>值（自定义也可以采用默认形式）</th></tr></thead><tbody><tr><td>安装路径</td><td>&#x2F;mysql_3306</td></tr><tr><td>数据路径</td><td>&#x2F;mysql_3306&#x2F;data</td></tr><tr><td>端口号</td><td>3306</td></tr></tbody></table><h2 id="5、软件的安装（查看官方说明）"><a href="#5、软件的安装（查看官方说明）" class="headerlink" title="5、软件的安装（查看官方说明）"></a>5、软件的安装（查看官方说明）</h2><p><a href="https://dev.mysql.com/doc/refman/5.7/en/binary-installation.html">https://dev.mysql.com/doc/refman/5.7/en/binary-installation.html</a></p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/23/16-29-17-image-20200824120143999-3b43b8.png" alt="image-20200824120143999"></p><p>第一步：创建一个数据库专用账号mysql（其所属组也为mysql）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># useradd -r -s /sbin/nologin mysql</span></span><br><span class="line"><span class="comment"># id mysql</span></span><br></pre></td></tr></table></figure><p>第二步：清空系统中的原有mariadb的配置文件(&#x2F;etc&#x2F;my.cnf)</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rm -rf /etc/my.cnf</span></span><br></pre></td></tr></table></figure><p>第三步：把mysql解压后的压缩包（GBLIC版本）移动到&#x2F;根目录下，然后更名为mysql_3306</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mv mysql-5.7.31-linux-glibc2.12-x86_64 /mysql_3306</span></span><br></pre></td></tr></table></figure><p>第四步：切换到mysql工作目录&#x2F;mysql_3306，创建一个mysql-files</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd /mysql_3306</span></span><br><span class="line"><span class="comment"># mkdir mysql-files</span></span><br></pre></td></tr></table></figure><p>第五步：更改mysql-files权限</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chown mysql:mysql mysql-files</span></span><br><span class="line"><span class="comment"># chmod 750 mysql-files</span></span><br></pre></td></tr></table></figure><p>第六步：初始化数据库（可以实现数据库的初始化，而且会产生一个&#x3D;&#x3D;随机密码&#x3D;&#x3D;）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># bin/mysqld --initialize --user=mysql --basedir=/mysql_3306</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">--initialize</span>  初始化（真正开始干活）</span><br><span class="line"><span class="literal">--user</span>=mysql  以mysql用户的身份初始化数据库，产生文件都是mysql作为拥有者</span><br><span class="line"><span class="literal">--basedir</span>=xxx    mysql其安装目录，非常重要</span><br><span class="line"></span><br><span class="line">运行完毕后，观察最后一行，保存root账号的密码，以备后期使用。</span><br><span class="line"><span class="number">2020</span><span class="literal">-08-24T06</span>:<span class="number">46</span>:<span class="number">24.889735</span>Z <span class="number">1</span> [<span class="type">Note</span>] A temporary password is generated <span class="keyword">for</span> root@localhost: (cn_jS+*n2wh</span><br></pre></td></tr></table></figure><blockquote><p>经验之谈：想查看mysql软件有没有初始化成功，主要看mysql目录下有没有产生data文件夹且文件夹中至少要有一个mysql的文件夹。</p></blockquote><p>第七步：设置安全加密连接（SSL），数据传输会采用加密形式，适合敏感数据</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># bin/mysql_ssl_rsa_setup --datadir=/mysql_3306/data</span></span><br></pre></td></tr></table></figure><p>第八步：启动MySQL数据库</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cp support-files/mysql.server /etc/init.d/mysql_3306</span></span><br></pre></td></tr></table></figure><blockquote><p>注：默认情况下，GBLIC版本的数据库要求安装到&#x2F;usr&#x2F;local&#x2F;mysql目录，其mysql.server脚本中对应的目录也是&#x2F;usr&#x2F;local&#x2F;mysql，这会导致mysql无法启动。所以可以更改其basedir以及datadir两个变量</p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/init.d/mysql_3306</span></span><br><span class="line"><span class="number">46</span>行 basedir=/mysql_3306</span><br><span class="line"><span class="number">47</span>行 datadir=/mysql_3306/<span class="keyword">data</span></span><br></pre></td></tr></table></figure><p>第九步：启动MySQL数据库（不能使用systemctl，只能使用service）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># service mysql_3306 start</span></span><br><span class="line">Starting MySQL.Logging to <span class="string">&#x27;/mysql_3306/data/mysql.itcast.cn.err&#x27;</span>.</span><br></pre></td></tr></table></figure><blockquote><p>特别说明：当MySQL启动成功后，其日志会自动写入到data数据目录中的主机名称.err文件中，这个文件一定要多看，涉及MySQL无法启动、启动报错，其详细的原因99%在.err文件中可以找到问题所在！</p></blockquote><h2 id="6、软件的安装常见问题答疑"><a href="#6、软件的安装常见问题答疑" class="headerlink" title="6、软件的安装常见问题答疑"></a>6、软件的安装常见问题答疑</h2><p>问题1：为什么一定要删除&#x2F;etc&#x2F;my.cnf文件，不删除有何影响？</p><p>答：&#x2F;etc&#x2F;my.cnf文件是操作系统为mariadb软件预留的配置的文件，之所以一定要删除这个文件，主要原因在于数据库在初始化时，首先在自己的安装目录下寻找有没有my.cnf配置文件，如果有，会自动根据里面的配置信息进行初始化。如果找不到，则到&#x2F;etc目录下寻找my.cnf文件，如果有，依然会按照其内部的配置进行初始化，但是由于&#x2F;etc目录下的my.cnf文件是mariadb的，这会导致我们的初始化如果按照mariadb的配置，会导致初始化失败。</p><p>问题2：mysql-files文件夹到底干什么的？</p><p>答：目前mysql-files没有什么用，但是你必须要创建，因为GLIBC属于二进制软件包，其很多配置已经默认了，包括mysql-files文件夹，如果没有这个文件夹可能导致mysql无法启动。</p><blockquote><p>mysql-files：主要用于数据文件的导入与导出（备份与还原），MySQL的备份会产生一个文件，可以xxx.sql或xxx.txt。mysql-files就是导入与导出时，所指定的默认目录。</p></blockquote><p>问题3：到底怎么判断数据库是否初始化成功了？</p><p>答：数据库的安装容易出错的地方就是初始化，一旦初始化失败了，数据库100%启动报错。如何确认数据库是否初始化成功了呢？主要看安装目录下有没有生成一个&#x3D;&#x3D;data&#x3D;&#x3D;的文件夹。</p><blockquote><p>一定要看准一点，文件夹名称叫data（数据目录），不是date（时间）</p></blockquote><p>问题4：为什么一定要把mysql.server放在&#x2F;etc&#x2F;init.d目录下，不放行不行？</p><p>答：不放也可以，但是这个时候就不能使用service命令启动以及添加到开机启动项了。只能通过bin&#x2F;mysqld_safe脚本启动数据库。</p><blockquote><p>&#x2F;etc&#x2F;init.d是CentOS6以及早期版本中的服务脚本目录，只要把Shell启动脚本放在这个目录下，你就可以使用service进行管理。</p></blockquote><p>问题5：为什么一定要改变&#x2F;etc&#x2F;init.d&#x2F;mysql_3306中的basedir与datadir？</p><p>答：GLIBC版本属于二进制版本，默认已经配置了很多内容，包括默认的安装路径&#x2F;usr&#x2F;local&#x2F;mysql，一旦你的mysql没有安装在这个目录下，则必须手工设置basedir以及datadir其位置，否则脚本无法启动mysql程序</p><p>问题6：如何让mysql自动启动？</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chkconfig --list查询系统中的所有开机启动项</span></span><br><span class="line"><span class="comment"># chkconfig --add mysql_3306    必须与/etc/init.d目录下的脚本名称一致</span></span><br><span class="line"><span class="comment"># chkconfig mysql_3306 on把2345四种模式全部开启（3字符界面，5图形界面）</span></span><br></pre></td></tr></table></figure><blockquote><p>CentOS6及以前版本中，控制服务的开机启动的</p></blockquote><h2 id="7、MySQL-GLIBC版本后续配置"><a href="#7、MySQL-GLIBC版本后续配置" class="headerlink" title="7、MySQL GLIBC版本后续配置"></a>7、MySQL GLIBC版本后续配置</h2><p>第一步：更改管理员root账号的密码</p><ul><li><strong>方法1：</strong></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">node1</span> <span class="type">mysql_3306</span>]<span class="comment"># bin/mysqladmin -uroot password &#x27;123&#x27; -p</span></span><br><span class="line">Enter password:输入刚刚初始化产生的临时密码</span><br></pre></td></tr></table></figure><ul><li><strong>方法2</strong></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">set</span> password=password(<span class="string">&#x27;456&#x27;</span>);   //未来版本将会弃用</span><br><span class="line">或者</span><br><span class="line">mysql&gt; <span class="built_in">set</span> password=<span class="string">&#x27;123&#x27;</span>;//推荐</span><br><span class="line"></span><br><span class="line">重置完成后，建议刷新权限，让其立即生效</span><br><span class="line">mysql&gt; flush privielges;</span><br></pre></td></tr></table></figure><p>第二步：把mysql客户端命令添加到环境变量，以后随时可以访问</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># echo &#x27;export PATH=$PATH:/mysql_3306/bin&#x27; &gt;&gt; /etc/profile</span></span><br><span class="line"><span class="comment"># source /etc/profile</span></span><br><span class="line"></span><br><span class="line">设置完成后，我们可以在任意位置调用mysql客户端命令</span><br><span class="line"><span class="comment"># mysql -uroot -p</span></span><br><span class="line">Enter password:<span class="number">123</span></span><br></pre></td></tr></table></figure><p>第三步：手工定义MySQL的配置文件（非常重要）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /mysql_3306/my.cnf</span></span><br><span class="line">[<span class="type">mysqld</span>]</span><br><span class="line">basedir=/mysql_3306</span><br><span class="line">datadir=/mysql_3306/<span class="keyword">data</span></span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line">选项说明：</span><br><span class="line">[<span class="type">mysqld</span>]代表针对服务器端进行配置</span><br><span class="line">basedir代表数据库的安装目录</span><br><span class="line">datadir代表数据目录，以后专门用于存放数据文件的（核心目录）</span><br><span class="line">socket代表套接字文件，专门为客户端与服务器端连接提供一个桥梁</span><br><span class="line"></span><br><span class="line"><span class="comment"># service mysql_3306 restart</span></span><br></pre></td></tr></table></figure><blockquote><p>C(Client) &#x3D;&#x3D;&#x3D; mysql命令   连（socket套接字）接   mysqld服务器端程序</p></blockquote><p>第四步：安全配置（对于生产环境比较重要）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysql_secure_installation</span></span><br></pre></td></tr></table></figure><p>一路Y，搞定！</p><blockquote><p>其主要就是是否启动密码脚尖器、是否设置root密码、是否允许root远程连接、是否移除测试数据库等等一系列功能。</p></blockquote><p>常见问题：如何关闭MySQL密码强度检测？</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /mysql_3306/my.cnf</span></span><br><span class="line">[<span class="type">mysqld</span>]</span><br><span class="line">...</span><br><span class="line">validate_password=OFF</span><br><span class="line"></span><br><span class="line"><span class="comment"># service mysql_3306 restart</span></span><br></pre></td></tr></table></figure><h1 id="五、MySQL的源码编译安装"><a href="#五、MySQL的源码编译安装" class="headerlink" title="五、MySQL的源码编译安装"></a>五、MySQL的源码编译安装</h1><h2 id="1、参考MySQL源码安装官方文档"><a href="#1、参考MySQL源码安装官方文档" class="headerlink" title="1、参考MySQL源码安装官方文档"></a>1、参考MySQL源码安装官方文档</h2><p>官方文档：<a href="https://dev.mysql.com/doc/refman/5.7/en/source-configuration-options.html">https://dev.mysql.com/doc/refman/5.7/en/source-configuration-options.html</a></p><p><strong>源码安装三步曲：配置——&gt;编译——&gt;安装</strong></p><p>####㈠ 安装须知</p><ul><li>软件包介绍</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="literal">-boost-5</span>.<span class="number">7.31</span>.tar.gz可在任意发行版的Linux下安装</span><br></pre></td></tr></table></figure><h4 id="㈡-安装需求"><a href="#㈡-安装需求" class="headerlink" title="㈡  安装需求"></a>㈡  安装需求</h4><table><thead><tr><th>安装需求</th><th>具体配置</th></tr></thead><tbody><tr><td>安装目录（basedir）</td><td>&#x2F;mysql_3307</td></tr><tr><td>数据目录（datadir）</td><td>&#x2F;mysql_3307&#x2F;data</td></tr><tr><td>端口号</td><td>3307</td></tr><tr><td>socket文件位置</td><td>$basedir&#x2F;mysql.sock</td></tr><tr><td>字符集</td><td>utf8mb4</td></tr></tbody></table><p>####㈢ &#x3D;&#x3D;了解配置选项&#x3D;&#x3D;</p><ul><li>常用配置选项</li></ul><table><thead><tr><th>配置选项</th><th>描述</th><th>默认值</th><th>建议值</th></tr></thead><tbody><tr><td>CMAKE_INSTALL_PREFIX</td><td>安装基目录(basedir)</td><td>&#x2F;usr&#x2F;local&#x2F;mysql</td><td>根据需求</td></tr><tr><td>MYSQL_DATADIR</td><td>数据目录(datadir)</td><td>$basedir&#x2F;data</td><td>根据需求</td></tr><tr><td>SYSCONFDIR</td><td>默认配置文件my.cnf路径</td><td></td><td>&#x2F;etc</td></tr><tr><td>MYSQL_TCP_PORT</td><td>TCP&#x2F;IP端口</td><td>3306</td><td>非默认端口</td></tr><tr><td>MYSQL_UNIX_ADDR</td><td>套接字socket文件路径</td><td>&#x2F;tmp&#x2F;mysql.sock</td><td>$basedir&#x2F;</td></tr><tr><td>DEFAULT_CHARSET</td><td>默认字符集</td><td>latin1</td><td><strong>utf8mb4</strong></td></tr><tr><td>DEFAULT_COLLATION</td><td>默认校验规则</td><td>latin1_swedish_ci</td><td>utf8mb4_general_ci</td></tr><tr><td>WITH_EXTRA_CHARSETS</td><td>扩展字符集</td><td>all</td><td>all</td></tr><tr><td>ENABLED_LOCAL_INFILE</td><td>是否启用本地加载外部数据文件功能</td><td>OFF</td><td>建议开启</td></tr><tr><td>WITH_SSL</td><td>SSL支持类型</td><td>system</td><td>建议显式指定</td></tr><tr><td>WITH_BOOST</td><td>Boost库源代码的位置</td><td></td><td>Boost库是构建MySQL所必需的,建议事先下载</td></tr></tbody></table><ul><li>存储引擎相关配置项</li></ul><p><strong>说明：</strong></p><p>以下选项值均为布尔值，0或1；0代表不编译到服务器中，1代表编译，建议都静态编译到服务器中。</p><p>其他的存储引擎可以根据实际需求在安装时通过WITH_xxxx_STORAGE_ENGINE&#x3D;1的方式编译到服务器中。</p><table><thead><tr><th>配置选项</th><th>描述</th></tr></thead><tbody><tr><td>WITH_INNOBASE_STORAGE_ENGINE</td><td>将InnoDB存储引擎插件构建为静态模块编译到服务器中；建议编译到服务器中</td></tr><tr><td>WITH_PARTITION_STORAGE_ENGINE</td><td>是否支持分区</td></tr><tr><td>WITH_FEDERATED_STORAGE_ENGINE</td><td>本地数据库是否可以访问远程mysql数据</td></tr><tr><td>WITH_BLACKHOLE_STORAGE_ENGINE</td><td>黑洞存储引擎，接收数据，但不存储，直接丢弃</td></tr><tr><td>WITH_MYISAM_STORAGE_ENGINE</td><td>将MYISAM存储引擎静态编译到服务器中</td></tr></tbody></table><h2 id="2、MySQL的源码编译安装"><a href="#2、MySQL的源码编译安装" class="headerlink" title="2、MySQL的源码编译安装"></a>2、MySQL的源码编译安装</h2><blockquote><p>建议大家在源码编译安装之前，先拍摄一个快照</p></blockquote><p>第一步：安装MySQL编译需要用到的依赖库</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install ncurses-devel cmake libaio-devel openssl-devel</span></span><br></pre></td></tr></table></figure><p>第二步：上传软件到服务器端并解压</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tar -xf mysql-boost-5.7.31.tar.gz</span></span><br><span class="line"><span class="comment"># cd mysql-5.7.31</span></span><br></pre></td></tr></table></figure><p>第三步：配置（基于cmake进行配置）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim myconfig.sh</span></span><br><span class="line">cmake . \</span><br><span class="line"><span class="literal">-DCMAKE_INSTALL_PREFIX</span>=/mysql_3307 \</span><br><span class="line"><span class="literal">-DMYSQL_DATADIR</span>=/mysql_3307/<span class="keyword">data</span> \</span><br><span class="line"><span class="literal">-DMYSQL_TCP_PORT</span>=<span class="number">3307</span> \</span><br><span class="line"><span class="literal">-DMYSQL_UNIX_ADDR</span>=/mysql_3307/mysql.sock \</span><br><span class="line"><span class="literal">-DWITH_INNOBASE_STORAGE_ENGINE</span>=<span class="number">1</span> \</span><br><span class="line"><span class="literal">-DWITH_PARTITION_STORAGE_ENGINE</span>=<span class="number">1</span> \</span><br><span class="line"><span class="literal">-DWITH_FEDERATED_STORAGE_ENGINE</span>=<span class="number">1</span> \</span><br><span class="line"><span class="literal">-DWITH_BLACKHOLE_STORAGE_ENGINE</span>=<span class="number">1</span> \</span><br><span class="line"><span class="literal">-DWITH_MYISAM_STORAGE_ENGINE</span>=<span class="number">1</span> \</span><br><span class="line"><span class="literal">-DENABLED_LOCAL_INFILE</span>=<span class="number">1</span> \</span><br><span class="line"><span class="literal">-DEXTRA_CHARSETS</span>=all \</span><br><span class="line"><span class="literal">-DDEFAULT_CHARSET</span>=utf8mb4 \</span><br><span class="line"><span class="literal">-DDEFAULT_COLLATION</span>=utf8mb4_general_ci \</span><br><span class="line"><span class="literal">-DWITH_SSL</span>=system \</span><br><span class="line"><span class="literal">-DWITH_BOOST</span>=boost</span><br><span class="line"><span class="comment"># chmod +x myconfig.sh</span></span><br><span class="line"><span class="comment"># ./myconfig.sh</span></span><br><span class="line"></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-DCMAKE_INSTALL_PREFIX</span> ：安装路径</span><br><span class="line"><span class="literal">-DMYSQL_DATADIR</span> ：数据目录</span><br><span class="line"><span class="literal">-DMYSQL_TCP_PORT</span> ：端口号</span><br><span class="line"><span class="literal">-DMYSQL_UNIX_ADDR</span> ：套接字文件位置</span><br></pre></td></tr></table></figure><p>第四步：编译安装</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># make -j2 &amp;&amp; make install</span></span><br><span class="line">选项说明：</span><br><span class="line"><span class="literal">-j2</span> ：代表同时开启多个线程共同实现编译操作</span><br></pre></td></tr></table></figure><h2 id="3、编译报错常见问题解析"><a href="#3、编译报错常见问题解析" class="headerlink" title="3、编译报错常见问题解析"></a>3、编译报错常见问题解析</h2><p>问题1：没有boost导致安装失败</p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/23/16-29-37-image-20200824170915430-9999ed.png" alt="image-20200824170915430"></p><p>问题2：编译安装中途报错</p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/23/16-29-43-image-20200824170953774-8cecac.png" alt="image-20200824170953774"></p><p>解决方案：只能重新编译一下</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rm -f CMakeCache.txt</span></span><br><span class="line"><span class="comment"># make -j2 &amp;&amp; make install</span></span><br></pre></td></tr></table></figure><h2 id="4、MySQL数据库的初始化"><a href="#4、MySQL数据库的初始化" class="headerlink" title="4、MySQL数据库的初始化"></a>4、MySQL数据库的初始化</h2><p><strong>注意：</strong>进入到&#x3D;&#x3D;安装目录&#x3D;&#x3D;里&#x2F;mysql_3307</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd /mysql_3307</span></span><br></pre></td></tr></table></figure><p>第一步：创建mysql-files目录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">创建系统变量`secure_file_priv`限制导入导出目录并修改权限</span><br><span class="line"><span class="comment"># mkdir mysql-files</span></span><br><span class="line"><span class="comment"># chown -R mysql:mysql /mysql_3307</span></span><br><span class="line"><span class="comment"># chmod 750 mysql-files</span></span><br></pre></td></tr></table></figure><p>第二步：数据库初始化操作</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># bin/mysqld --initialize --user=mysql --basedir=/mysql_3307 --datadir=/mysql_3307/data</span></span><br><span class="line">...</span><br><span class="line"><span class="number">2020</span><span class="literal">-08-24T11</span>:<span class="number">07</span>:<span class="number">37.621346</span>Z <span class="number">1</span> [<span class="type">Note</span>] A temporary password is generated <span class="keyword">for</span> root@localhost: O6.iHqrZgzz7</span><br></pre></td></tr></table></figure><p>第三步：拷贝mysql.server脚本到&#x2F;etc&#x2F;init.d目录，然后启动数据库</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cp support-files/mysql.server /etc/init.d/mysql_3307</span></span><br><span class="line"><span class="comment"># service mysql_3307 start</span></span><br></pre></td></tr></table></figure><p>启动异常的解决方案：</p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/23/16-29-50-image-20200824191029474-de3369.png" alt="image-20200824191029474"></p><p>查看mysql.itcast.cn.err这个错误日志</p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/23/16-29-52-16-28-34-image-20200824191502358-1b7986-ba9701.png" alt="image-20200824191502358"></p><p>出现以上问题的主要原因在于mysql这个用户对&#x2F;mysql_3307目录没有写入文件的权限，写入mysql_socket套接字文件。</p><p>解决方案：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chown -R mysql.mysql /mysql_3307</span></span><br></pre></td></tr></table></figure><h2 id="5、MySQL源码编译安装后的后续配置"><a href="#5、MySQL源码编译安装后的后续配置" class="headerlink" title="5、MySQL源码编译安装后的后续配置"></a>5、MySQL源码编译安装后的后续配置</h2><p>第一步：编写MySQL配置文件，my.cnf</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /mysql_3307/my.cnf</span></span><br><span class="line">[<span class="type">mysqld</span>]</span><br><span class="line">basedir=/mysql_3307</span><br><span class="line">datadir=/mysql_3307/<span class="keyword">data</span></span><br><span class="line">socket=/mysql_3307/mysql.sock</span><br><span class="line"></span><br><span class="line"><span class="comment"># service mysql_3307 restart</span></span><br></pre></td></tr></table></figure><p>第二步：设置管理员的密码</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># bin/mysqladmin -uroot password &#x27;123&#x27; -p</span></span><br><span class="line">Enter password:O6.iHqrZgzz7</span><br></pre></td></tr></table></figure><p>第三步：安全设置</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># bin/mysql_secure_installation</span></span><br></pre></td></tr></table></figure><p>第四步：添加mysql_3307到开机启动项</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chkconfig --add mysql_3307</span></span><br><span class="line"><span class="comment"># chkconfig mysql_3307 on</span></span><br></pre></td></tr></table></figure><h1 id="六、MySQL常见问题解决方案"><a href="#六、MySQL常见问题解决方案" class="headerlink" title="六、MySQL常见问题解决方案"></a>六、MySQL常见问题解决方案</h1><h2 id="1、如何访问不同的数据库？"><a href="#1、如何访问不同的数据库？" class="headerlink" title="1、如何访问不同的数据库？"></a>1、如何访问不同的数据库？</h2><p><strong>方法一：</strong>直接使用&#x3D;&#x3D;<strong>对应的客户</strong>&#x3D;&#x3D;端软件访问</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">访问<span class="number">5.7</span>.<span class="number">31</span>版本数据库：</span><br><span class="line">[<span class="type">root</span>@<span class="type">node1</span> ~]<span class="comment"># /mysql_3306/bin/mysql -uroot -p</span></span><br><span class="line">Enter password:</span><br><span class="line">Welcome to the MySQL monitor.  Commands <span class="keyword">end</span> with ; or \g.</span><br><span class="line">Your MySQL connection id is <span class="number">3</span></span><br><span class="line">Server version: <span class="number">5.7</span>.<span class="number">31</span> MySQL Community Server (GPL)</span><br><span class="line"></span><br><span class="line">访问<span class="number">5.7</span>.<span class="number">31</span>版本数据库：</span><br><span class="line">[<span class="type">root</span>@<span class="type">node1</span> ~]<span class="comment"># /mysql_3307/bin/mysql -uroot -p</span></span><br><span class="line">Enter password:</span><br><span class="line">Welcome to the MySQL monitor.  Commands <span class="keyword">end</span> with ; or \g.</span><br><span class="line">Your MySQL connection id is <span class="number">7</span></span><br><span class="line">Server version: <span class="number">5.7</span>.<span class="number">31</span> Source distribution</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>方法二：</strong>&#x3D;&#x3D;定义别名&#x3D;&#x3D;的方式访问</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">node1</span> ~]<span class="comment"># alias mysql_3306=&quot;/mysql_3306/bin/mysql&quot;</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">node1</span> ~]<span class="comment"># alias mysql_3307=&quot;/mysql_3307/bin/mysql&quot;</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">node1</span> ~]<span class="comment"># mysql_3306 -uroot -p</span></span><br><span class="line">Enter password:</span><br><span class="line">Welcome to the MySQL monitor.  Commands <span class="keyword">end</span> with ; or \g.</span><br><span class="line">Your MySQL connection id is <span class="number">4</span></span><br><span class="line">Server version: <span class="number">5.7</span>.<span class="number">31</span> MySQL Community Server (GPL)</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">node1</span> ~]<span class="comment"># mysql_3307 -uroot -p</span></span><br><span class="line">Enter password:</span><br><span class="line">Welcome to the MySQL monitor.  Commands <span class="keyword">end</span> with ; or \g.</span><br><span class="line">Your MySQL connection id is <span class="number">8</span></span><br><span class="line">Server version: <span class="number">5.7</span>.<span class="number">27</span> Source distribution</span><br></pre></td></tr></table></figure><p><strong>方法三：</strong>&#x3D;&#x3D;拷贝相应命令&#x3D;&#x3D;到PATH可以识别的路径下&#x3D;&#x3D;并重命名&#x3D;&#x3D;</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">node1</span> ~]<span class="comment"># unalias mysql_3306</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">node1</span> ~]<span class="comment"># unalias mysql_3307</span></span><br><span class="line">+++++++++++++++++++++我是华丽分隔符+++++++++++++++++++++++++++</span><br><span class="line">[<span class="type">root</span>@<span class="type">node1</span> ~]<span class="comment"># cp /mysql_3306/bin/mysql /usr/bin/mysql_3306</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">node1</span> ~]<span class="comment"># cp /mysql_3307/bin/mysql /usr/bin/mysql_3307</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">node1</span> ~]<span class="comment"># which mysql_3306</span></span><br><span class="line">/usr/bin/mysql_3306</span><br><span class="line">[<span class="type">root</span>@<span class="type">node1</span> ~]<span class="comment"># which mysql_3307</span></span><br><span class="line">/usr/bin/mysql_3307</span><br></pre></td></tr></table></figure><p><strong>深度思考：</strong>我们之所以能够连接到数据库里的**&#x3D;&#x3D;本质&#x3D;&#x3D;**是什么？答：套接字</p><h2 id="2、MySQL忘记密码的解决方案"><a href="#2、MySQL忘记密码的解决方案" class="headerlink" title="2、MySQL忘记密码的解决方案"></a>2、MySQL忘记密码的解决方案</h2><p><strong>敲黑板：</strong>找问题的解决方法很重要！</p><h3 id="1、跳过授权表（通用）"><a href="#1、跳过授权表（通用）" class="headerlink" title="1、跳过授权表（通用）"></a>1、跳过授权表（通用）</h3><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/23/16-30-01-image-20200824193937756-074dbc.png" alt="image-20200824193937756"></p><h4 id="㈠-跳过授权表重启数据库（以GLIBC-3306为例）"><a href="#㈠-跳过授权表重启数据库（以GLIBC-3306为例）" class="headerlink" title="㈠ 跳过授权表重启数据库（以GLIBC 3306为例）"></a>㈠ 跳过授权表重启数据库（以GLIBC 3306为例）</h4><h5 id="①-关闭数据库"><a href="#①-关闭数据库" class="headerlink" title="① 关闭数据库"></a>① 关闭数据库</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">node1</span> ~]<span class="comment"># mysqladmin shutdown -p</span></span><br><span class="line">Enter password:</span><br></pre></td></tr></table></figure><h5 id="②-跳过授权表启动"><a href="#②-跳过授权表启动" class="headerlink" title="② 跳过授权表启动"></a>② 跳过授权表启动</h5><p><strong>友情提示：</strong>启动过程可能会一波三折，冷静分析看报错，必能解决！</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /mysql_3306/bin/mysqld --defaults-file=/mysql_3306/my.cnf --skip-grant-tables --skip-networking=on  --user=mysql &amp;</span></span><br></pre></td></tr></table></figure><h4 id="㈡-刷新授权表（重要）"><a href="#㈡-刷新授权表（重要）" class="headerlink" title="㈡ 刷新授权表（重要）"></a>㈡ 刷新授权表（重要）</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysql -uroot -p</span></span><br><span class="line">Enter password:什么都不要输入，直接回车即可</span><br><span class="line"></span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line">Query OK, <span class="number">0</span> rows affected (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="㈢-修改密码"><a href="#㈢-修改密码" class="headerlink" title="㈢ 修改密码"></a>㈢ 修改密码</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; alter user <span class="string">&#x27;root&#x27;</span><span class="string">@&#x27;localhost&#x27; identified by &#x27;123&#x27;;</span></span><br><span class="line"><span class="string">Query OK, 0 rows affected (0.00 sec)</span></span><br></pre></td></tr></table></figure><p>**&#x3D;&#x3D;补充：&#x3D;&#x3D;**如果未能成功，则使用以下语句修改密码</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; UPDATE mysql.user <span class="built_in">SET</span> authentication_string = PASSWORD(<span class="string">&#x27;MyNewPass&#x27;</span>)</span><br><span class="line"><span class="built_in">WHERE</span> User = <span class="string">&#x27;root&#x27;</span> AND Host = <span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">mysql&gt; FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><p>修改密码后，使用jobs + kill命令，停止正在运行的mysqld进程。然后使用service启动服务</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># jobs</span></span><br><span class="line"><span class="comment"># kill %1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># service mysql_3306 start</span></span><br></pre></td></tr></table></figure><h3 id="2、Unix和类Unix系统重置（了解）"><a href="#2、Unix和类Unix系统重置（了解）" class="headerlink" title="2、Unix和类Unix系统重置（了解）"></a>2、Unix和类Unix系统重置（了解）</h3><h4 id="㈠-停止数据库"><a href="#㈠-停止数据库" class="headerlink" title="㈠ 停止数据库"></a>㈠ 停止数据库</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">node1</span> ~]<span class="comment"># mysqladmin shutdown -p</span></span><br><span class="line">Enter password:</span><br></pre></td></tr></table></figure><h4 id="㈡-编写创建密码语句到文件"><a href="#㈡-编写创建密码语句到文件" class="headerlink" title="㈡ 编写创建密码语句到文件"></a>㈡ 编写创建密码语句到文件</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># echo &quot;ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;123&#x27;;&quot; &gt;&gt; /mysql_3306/mysql.pass</span></span><br><span class="line">注意：该文件一定要对启动用户如mysql有所有权限</span><br><span class="line"><span class="comment"># chown -R mysql. /mysql_3306</span></span><br></pre></td></tr></table></figure><h4 id="㈢-指定密码文件启动数据库"><a href="#㈢-指定密码文件启动数据库" class="headerlink" title="㈢ 指定密码文件启动数据库"></a>㈢ 指定密码文件启动数据库</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysqld --defaults-file=/mysql_3306/my.cnf --init-file=/mysql_3306/mysql.pass  --user=mysql &amp;</span></span><br></pre></td></tr></table></figure><h4 id="㈣-删除密码文件，并测试"><a href="#㈣-删除密码文件，并测试" class="headerlink" title="㈣ 删除密码文件，并测试"></a>㈣ 删除密码文件，并测试</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rm -f /mysql_3306/mysql.pass</span></span><br><span class="line"><span class="comment"># mysql -uroot -p</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/23/16-33-10-%E4%B8%8B%E8%BD%BD-0eab7a.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 全栈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维 </tag>
            
            <tag> MYSQL </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LNMP环境工作原理</title>
      <link href="/2024/06/23/LNMP%E7%8E%AF%E5%A2%83%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/"/>
      <url>/2024/06/23/LNMP%E7%8E%AF%E5%A2%83%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h3 id="1-组成"><a href="#1-组成" class="headerlink" title="1.组成"></a>1.组成</h3><p>LNMP环境【Linux、Nginx(80)、PHP(9000)、Mysql(3306)】每个都是独立的软件。</p><h3 id="2-LNPM原理图"><a href="#2-LNPM原理图" class="headerlink" title="2.LNPM原理图"></a>2.LNPM原理图</h3><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/23/13-16-53-image-20240623131653531-e18c07.png" alt="image-20240623131653531"></p><h2 id="三、LNMP环境部署"><a href="#三、LNMP环境部署" class="headerlink" title="三、LNMP环境部署"></a>三、LNMP环境部署</h2><h3 id="1-Msql软件"><a href="#1-Msql软件" class="headerlink" title="1.Msql软件"></a>1.Msql软件</h3><p>瑞典AB公司，MySql默认编码 &#x3D;&gt;latin1&#x3D;&gt;甲骨文（oracle），Oracle MySql</p><p>MySql安装一共有三种方式</p><p>①基于YUM安装 ②GLBC二进制软件包安装 ③基于MySql源码方式安装</p><blockquote><p>使用YUM安装的MySql的时候一定要配置好YUM源，不然会默认安装MariaDB。</p></blockquote><h3 id="2-MySql软件的安装"><a href="#2-MySql软件的安装" class="headerlink" title="2.MySql软件的安装"></a>2.MySql软件的安装</h3><p>前期规划：</p><table><thead><tr><th>安装目录</th><th>数据目录</th><th>默认端口</th><th>套接字（关键）</th></tr></thead><tbody><tr><td>&#x2F;usr&#x2F;local&#x2F;mysql</td><td>&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;data</td><td>3306</td><td>&#x2F;tmp&#x2F;mysql.sock</td></tr></tbody></table><p>问题：如果我们MySql套接字没有放置在&#x2F;tmp下，会有什么影响？</p><p>答：mysql客户端无法直接连接到mysqld，服务器端，必须手动指定-S选项指定套接字的位置，或者可以在my,cnf文件中，添加一个选项</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim my.cnf</span></span><br><span class="line">[<span class="type">mysqld</span>]</span><br><span class="line">针对服务器的相关配置（安装目录、套接字、数据目录、端口、以及日志信息等）</span><br><span class="line">[<span class="type">mysqld</span>]</span><br><span class="line">socket=/usr/local/mysql/mysql.sock</span><br></pre></td></tr></table></figure><blockquote><p>除了套接字问题，还需要注意的就是my.cnf配置文件，其加载顺序是：①安装目录②&#x2F;etc目录，如果安装目录和etc目录下面都有my.cnf，则优先采用etc目录下的配置文件。</p></blockquote><h4 id="MySql安装脚本"><a href="#MySql安装脚本" class="headerlink" title="MySql安装脚本"></a>MySql安装脚本</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">yum install libaio <span class="literal">-y</span></span><br><span class="line">tar <span class="literal">-xf</span> mysql<span class="literal">-5</span>.<span class="number">7.31</span><span class="literal">-linux-glibc2</span>.<span class="number">12</span><span class="literal">-x86_64</span>.tar.gz </span><br><span class="line"><span class="built_in">mv</span> mysql<span class="literal">-5</span>.<span class="number">7.31</span><span class="literal">-linux-glibc2</span>.<span class="number">12</span><span class="literal">-x86_64</span> /usr/local/mysql</span><br><span class="line">useradd <span class="literal">-r</span> <span class="literal">-s</span> /sbin/nologin mysql</span><br><span class="line"><span class="built_in">rm</span> <span class="literal">-rf</span> /etc/my.cnf</span><br><span class="line"><span class="built_in">cd</span> /usr/local/mysql</span><br><span class="line">mkdir mysql<span class="literal">-files</span></span><br><span class="line">chown mysql:mysql mysql<span class="literal">-files</span></span><br><span class="line">chmod <span class="number">750</span> mysql<span class="literal">-files</span></span><br><span class="line">bin/mysqld <span class="literal">--initialize</span> <span class="literal">--user</span>=mysql <span class="literal">--basedir</span>=/usr/local/mysql &amp;&gt; /root/password.txt</span><br><span class="line">bin/mysqld_ssl_rsa_setup <span class="literal">--datad</span>ı<span class="built_in">r</span>=/usr/local/mysql/<span class="keyword">data</span></span><br><span class="line"><span class="built_in">cp</span> support<span class="literal">-files</span>/mysql.server /etc/init.d/mysqld</span><br><span class="line">service mysqld <span class="built_in">start</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;export PATH=$PATH:/usr/local/mysql/bin&#x27;</span> &gt;&gt; /etc/profile</span><br><span class="line">source /etc/profile</span><br><span class="line"><span class="comment"># source mysql.sh</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 全栈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维 </tag>
            
            <tag> LNMP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Socket套接字</title>
      <link href="/2024/06/23/Socket%E5%A5%97%E6%8E%A5%E5%AD%97/"/>
      <url>/2024/06/23/Socket%E5%A5%97%E6%8E%A5%E5%AD%97/</url>
      
        <content type="html"><![CDATA[<h2 id="Socket概览："><a href="#Socket概览：" class="headerlink" title="Socket概览："></a>Socket概览：</h2><p> <img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/23/13-44-39-image-20240623134438949-6a933f.png" alt="image-20240623134438949"></p><h2 id="什么是-Socket？"><a href="#什么是-Socket？" class="headerlink" title="什么是 Socket？"></a>什么是 Socket？</h2><p>Socket（套接字）是网络通信中的一种机制，可以将其类比为电话插座，负责连接通信双方。Socket 就像电话插座上的孔，端口负责连接，而创建连接就像把插头插在插座上。Socket 实例创建后会监听消息，当有消息传入时会自动接通。</p><p>实际上，Socket 是应用层和传输层之间的抽象层，它将 TCP&#x2F;IP 层复杂的操作封装成简单接口，供应用层调用，从而实现进程间的网络通信。Socket 起源于 UNIX，在 UNIX 的“一切皆文件”思想下，进程间通信通过文件描述符（file descriptor）进行，Socket 就是这种“打开-读&#x2F;写-关闭”模式的实现。服务器和客户端各自维护一个“文件”，通过文件读写来传输数据，通讯结束时关闭文件。</p><h2 id="Socket-的位置"><a href="#Socket-的位置" class="headerlink" title="Socket 的位置"></a>Socket 的位置</h2><p>Socket 位于应用层和传输层之间。它将复杂的网络协议封装成简洁的接口，便于程序进行网络通信。</p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/23/13-30-40-660329-20201010094027768-397452978-727485.png" alt="img"></p><hr><h2 id="Socket-的类型"><a href="#Socket-的类型" class="headerlink" title="Socket 的类型"></a>Socket 的类型</h2><p>Socket 主要分为两种类型：流格式套接字（SOCK_STREAM）和数据报格式套接字（SOCK_DGRAM）。</p><h3 id="流格式套接字（SOCK-STREAM）"><a href="#流格式套接字（SOCK-STREAM）" class="headerlink" title="流格式套接字（SOCK_STREAM）"></a>流格式套接字（SOCK_STREAM）</h3><p>流格式套接字也叫<strong>“面向连接的套接字”</strong>，是一种可靠、双向的通信数据流，可以确保数据准确无误地到达另一台计算机。如果数据损坏或丢失，可以重新发送。</p><p><strong>特点：</strong></p><ul><li>数据不会在传输过程中丢失。</li><li>数据按照顺序传输。</li><li>数据发送和接收不同步。</li></ul><p>可以将 SOCK_STREAM 比作一条传送带，数据按顺序传输，不会丢失。数据传输时，无需接收端和发送端同步，接收端可以根据自己的节奏读取数据。</p><p><strong>应用场景：</strong></p><ul><li><strong>浏览器使用的 HTTP 协议</strong>：基于面向连接的套接字，确保数据准确无误。</li></ul><p>流格式套接字使用 <strong>TCP 协议</strong>（Transmission Control Protocol，传输控制协议），TCP 确保数据按照顺序到达且无错误。</p><h3 id="数据报格式套接字（SOCK-DGRAM）"><a href="#数据报格式套接字（SOCK-DGRAM）" class="headerlink" title="数据报格式套接字（SOCK_DGRAM）"></a>数据报格式套接字（SOCK_DGRAM）</h3><p>数据报格式套接字也叫<strong>“无连接的套接字”</strong>，它传输数据时不进行数据校验。如果数据在传输中损坏或丢失，无法补救。这种套接字传输效率高，但数据传输顺序不保证，可能丢失或损坏。</p><p><strong>特点：</strong></p><ul><li>强调快速传输而非传输顺序。</li><li>数据可能丢失或损毁。</li><li>每次传输的数据大小有限。</li><li>数据的发送和接收同步。</li></ul><p>可以将 SOCK_DGRAM 比作快递，一些包裹可能丢失或损坏，但传输效率高。</p><p><strong>应用场景：</strong></p><ul><li><strong>QQ 视频聊天和语音聊天</strong>：使用 SOCK_DGRAM 来传输数据，保证通信效率，即使丢失少量数据，也不会影响整体通信质量。</li></ul><p>数据报格式套接字使用 <strong>UDP 协议</strong>（User Datagram Protocol，用户数据报协议），它注重快速传输，而非可靠性。</p><hr><h2 id="Socket-通信过程"><a href="#Socket-通信过程" class="headerlink" title="Socket 通信过程"></a>Socket 通信过程</h2><p>Socket 保证了不同计算机之间的通信，也就是网络通信。对于网站，通信模型是服务器与客户端之间的通信。两端都建立了一个 Socket 对象，然后通过 Socket 对象对数据进行传输。通常服务器处于一个无限循环，等待客户端的连接。</p><p>下面是面向连接的 TCP 时序图：</p><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/23/13-31-41-660329-20201010094439156-1397820811-febe00.png" alt="img"></p><h3 id="客户端过程"><a href="#客户端过程" class="headerlink" title="客户端过程"></a>客户端过程</h3><p>客户端的通信过程较为简单，创建 Socket 后连接服务器，然后发送数据、接收响应数据，最后关闭连接。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)  <span class="comment"># 创建 Socket 连接</span></span><br><span class="line">    sock.connect((<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="number">8001</span>))  <span class="comment"># 连接服务器</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        data = <span class="built_in">input</span>(<span class="string">&#x27;Please input data:&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            sock.sendall(data)</span><br><span class="line">        <span class="keyword">except</span> socket.error <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;Send Failed...&#x27;</span>, e)</span><br><span class="line">            sys.exit(<span class="number">0</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Send Successfully&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        res = sock.recv(<span class="number">4096</span>)  <span class="comment"># 获取服务器返回的数据</span></span><br><span class="line">        <span class="built_in">print</span>(res)</span><br><span class="line">    sock.close()</span><br></pre></td></tr></table></figure><p><code>sendall()</code> 方法会尝试发送所有数据，成功时返回 <code>None</code>，失败时抛出异常。<code>recv()</code> 方法用于接收服务器返回的数据。</p><h3 id="服务端过程"><a href="#服务端过程" class="headerlink" title="服务端过程"></a>服务端过程</h3><p>服务端先初始化 Socket，与本机地址及端口绑定，准备接收连接。调用 <code>accept()</code> 阻塞等待客户端连接，连接建立后，接收并处理请求，发送响应数据，最后关闭连接。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)  <span class="comment"># 创建 Socket 连接（TCP）</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Socket Created&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        sock.bind((<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="number">8001</span>))  <span class="comment"># 配置 Socket，绑定 IP 地址和端口号</span></span><br><span class="line">    <span class="keyword">except</span> socket.error <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Bind Failed...&#x27;</span>, e)</span><br><span class="line">        sys.exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    sock.listen(<span class="number">5</span>)  <span class="comment"># 设置最大允许连接数</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        conn, addr = sock.accept()</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            conn.settimeout(<span class="number">10</span>)  <span class="comment"># 设置超时时间</span></span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                data = conn.recv(<span class="number">1024</span>)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;Get value &#x27;</span> + data.decode(), end=<span class="string">&#x27;\n\n&#x27;</span>)</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&#x27;Exit Server&#x27;</span>, end=<span class="string">&#x27;\n\n&#x27;</span>)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                conn.sendall(<span class="string">b&#x27;OK&#x27;</span>)  <span class="comment"># 返回数据</span></span><br><span class="line">        <span class="keyword">except</span> socket.timeout:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;Time out&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        conn.close()  <span class="comment"># 关闭连接</span></span><br><span class="line">    sock.close()</span><br></pre></td></tr></table></figure><p><code>accept()</code> 方法阻塞等待客户端连接，返回新的 Socket 对象 <code>conn</code>，通过 <code>conn</code> 与客户端通信。</p><hr><h2 id="从-TCP-连接的视角看-Socket-过程"><a href="#从-TCP-连接的视角看-Socket-过程" class="headerlink" title="从 TCP 连接的视角看 Socket 过程"></a>从 TCP 连接的视角看 Socket 过程</h2><h3 id="TCP-三次握手的-Socket-过程"><a href="#TCP-三次握手的-Socket-过程" class="headerlink" title="TCP 三次握手的 Socket 过程"></a>TCP 三次握手的 Socket 过程</h3><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/23/13-32-08-660329-20201010111311841-1023720840-c00951.png" alt="img"></p><ol><li>服务器初始化 Socket，调用 <code>socket()</code>、<code>bind()</code>、<code>listen()</code>，调用 <code>accept()</code> 阻塞等待。</li><li>客户端调用 <code>connect()</code> 向服务器发送 SYN 请求。</li><li>服务器发送 SYN 和 ACK 应答，完成第一次握手。</li><li>客户端收到应答后返回，再发送一个 ACK。</li><li>服务器接收 ACK 确认，<code>accept()</code> 返回，建立连接。</li></ol><h3 id="TCP-四次挥手的-Socket-过程"><a href="#TCP-四次挥手的-Socket-过程" class="headerlink" title="TCP 四次挥手的 Socket 过程"></a>TCP 四次挥手的 Socket 过程</h3><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/23/13-32-15-660329-20201010111352844-514391838-7cca07.png" alt="img"></p><ol><li>某个应用进程调用 <code>close()</code> 主动关闭，发送一个 FIN。</li><li>另一端接收到 FIN 后被动关闭，发送 ACK。</li><li>被动关闭的一端调用 <code>close()</code> 关闭 Socket，发送 FIN。</li><li>接收端发送 ACK 确认，连接关闭。</li></ol><p><strong>注意：</strong> 服务端代码在实际应用中需要并发处理，服务器通常会 fork 新的进程或线程来处理请求，以提高处理能力。</p><hr><p>Socket 是网络通信的基础，通过理解 Socket，可以更好地进行网络编程和应用开发。希望这篇文章能帮助你理解 Socket 的概念及其应用场景。如果有疑问，欢迎在评论区讨论！</p>]]></content>
      
      
      <categories>
          
          <category> 全栈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux运维 </tag>
            
            <tag> Socket </tag>
            
            <tag> 套接字 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LNMP环境准备</title>
      <link href="/2024/06/23/LNMP%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/"/>
      <url>/2024/06/23/LNMP%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/</url>
      
        <content type="html"><![CDATA[<h3 id="1、系统环境"><a href="#1、系统环境" class="headerlink" title="1、系统环境"></a>1、系统环境</h3><p>centos7.6</p><h3 id="2、部署规划"><a href="#2、部署规划" class="headerlink" title="2、部署规划"></a>2、部署规划</h3><table><thead><tr><th>编号</th><th>主机名称</th><th>IP地址</th><th>角色</th></tr></thead><tbody><tr><td>1</td><td>Web01.itcast.cn</td><td>10.1.1.11</td><td>Web01服务器</td></tr></tbody></table><h3 id="3、LNMP环境准备"><a href="#3、LNMP环境准备" class="headerlink" title="3、LNMP环境准备"></a>3、LNMP环境准备</h3><p>第一步：克隆母鸡或模板及，生产Wbe01服务器</p><p>第二步：更改主机名称，采用FQDN格式，如web01.itcast.cn</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hostnamectl set-hostname web01.itcast.cn</span></span><br><span class="line"><span class="comment"># su</span></span><br></pre></td></tr></table></figure><p>第三步：更改服务器的IP地址（使用静态模式）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/sysconfig/network-scripts/ifcfg-ens33</span></span><br><span class="line">...</span><br><span class="line">IPADDR=<span class="string">&quot;192.168.31.141&quot;</span></span><br><span class="line">NETMASK=<span class="string">&quot;255.255.255.0&quot;</span></span><br><span class="line">GATEWAY=<span class="string">&quot;192.168.31.2&quot;</span></span><br><span class="line">DNS1=<span class="string">&quot;114.114.114.114&quot;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>第四步：绑定主机名称以及IP地址到&#x2F;etc&#x2F;hosts文件中，然后重启网络</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/hosts</span></span><br><span class="line"><span class="number">192.168</span>.<span class="number">31.141</span> web01 web01.itcast.cn</span><br><span class="line"><span class="comment">#sysctmctl restart network</span></span><br></pre></td></tr></table></figure><p>第五步：关闭防火墙、NetworkManager、SELinux</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl stop firewalld</span></span><br><span class="line"><span class="comment"># systemctl disable firewalld</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#setenforence 0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#systemctl stop NetworkManger</span></span><br><span class="line"><span class="comment">#systemctl disable NetworkManager</span></span><br></pre></td></tr></table></figure><p>第六步：配置yum源</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.cloud.tencent.com/repo/centos7_base.repo</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#yum clean all</span></span><br><span class="line"><span class="comment">#yum makecache</span></span><br></pre></td></tr></table></figure><p>第七步：时间同步</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#yum install ntpdate</span></span><br><span class="line"><span class="comment">#ntpdate ntp.aliyun.com</span></span><br><span class="line"><span class="comment">#yum install ntpd </span></span><br><span class="line"><span class="comment">#systemctl start ntpd</span></span><br><span class="line"><span class="comment">#systemctl enable ntpd</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/SFYYH/pic_bed@main/images/2024/06/23/02-13-07-262-hei_se_de-long-hei_bai_she_ying-dan_se_mo_shi-hong_she_ying-x750-c02fd7.jpeg" alt="龙, 黑色的, 黑色和白色的, 黑白摄影, 单色模式 壁纸 1920x1200 允许"></p>]]></content>
      
      
      <categories>
          
          <category> 全栈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维 </tag>
            
            <tag> LNMP </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
